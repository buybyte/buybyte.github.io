<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>keep doing – Blog</title><link>https://cloudedseal.github.io/blog/</link><description>Recent content in Blog on keep doing</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 27 Apr 2025 15:20:04 +0800</lastBuildDate><atom:link href="https://cloudedseal.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://cloudedseal.github.io/blog/about/</link><pubDate>Sun, 27 Mar 2022 23:18:39 +0800</pubDate><guid>https://cloudedseal.github.io/blog/about/</guid><description>
&lt;blockquote>
&lt;p>The pain you feel when you write is actually the pain of clarifying your thinking.(David Perell)&lt;/p>
&lt;/blockquote></description></item><item><title>Gcc Compile C Prog</title><link>https://cloudedseal.github.io/blog/gcc-compile-c-prog/</link><pubDate>Tue, 29 Apr 2025 17:25:37 +0800</pubDate><guid>https://cloudedseal.github.io/blog/gcc-compile-c-prog/</guid><description>
&lt;h3>分析代码&lt;span class="hx-absolute -hx-mt-20" id="分析代码">&lt;/span>
&lt;a href="#%e5%88%86%e6%9e%90%e4%bb%a3%e7%a0%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>os: Linux Mint 22.1&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">hello.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello world&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>strace 追踪编译流程&lt;span class="hx-absolute -hx-mt-20" id="strace-追踪编译流程">&lt;/span>
&lt;a href="#strace-%e8%bf%bd%e8%b8%aa%e7%bc%96%e8%af%91%e6%b5%81%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">strace -t -f -o hello.log -e &lt;span class="nv">trace&lt;/span>&lt;span class="o">=&lt;/span>execve -s &lt;span class="m">2000&lt;/span> gcc -o hello hello.c&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>All &lt;code>execve()&lt;/code> system calls during compilation, showing how GCC orchestrates the build process.&lt;/p>
&lt;h4>hello.log 内容&lt;span class="hx-absolute -hx-mt-20" id="hellolog-内容">&lt;/span>
&lt;a href="#hellolog-%e5%86%85%e5%ae%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>20029 13:48:52 execve(&amp;#34;/usr/bin/gcc&amp;#34;, [&amp;#34;gcc&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;hello.c&amp;#34;], 0x7ffd60d08358 /* 65 vars */) = 0
20034 13:48:52 execve(&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;, [&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;, &amp;#34;-quiet&amp;#34;, &amp;#34;-imultiarch&amp;#34;, &amp;#34;x86_64-linux-gnu&amp;#34;, &amp;#34;hello.c&amp;#34;, &amp;#34;-quiet&amp;#34;, &amp;#34;-dumpbase&amp;#34;, &amp;#34;hello.c&amp;#34;, &amp;#34;-dumpbase-ext&amp;#34;, &amp;#34;.c&amp;#34;, &amp;#34;-mtune=generic&amp;#34;, &amp;#34;-march=x86-64&amp;#34;, &amp;#34;-fasynchronous-unwind-tables&amp;#34;, &amp;#34;-fstack-protector-strong&amp;#34;, &amp;#34;-Wformat&amp;#34;, &amp;#34;-Wformat-security&amp;#34;, &amp;#34;-fstack-clash-protection&amp;#34;, &amp;#34;-fcf-protection&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = 0
20034 13:48:53 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20029 13:48:53 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20034, si_uid=1000, si_status=0, si_utime=3 /* 0.03 s */, si_stime=17 /* 0.17 s */} ---
20036 13:48:53 execve(&amp;#34;/usr/local/sbin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = -1 ENOENT (No such file or directory)
20036 13:48:53 execve(&amp;#34;/usr/local/bin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = -1 ENOENT (No such file or directory)
20036 13:48:53 execve(&amp;#34;/usr/sbin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = -1 ENOENT (No such file or directory)
20036 13:48:53 execve(&amp;#34;/usr/bin/as&amp;#34;, [&amp;#34;as&amp;#34;, &amp;#34;--64&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;/tmp/ccLfEVyN.s&amp;#34;], 0x7d14db0 /* 70 vars */) = 0
20036 13:48:53 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20029 13:48:53 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20036, si_uid=1000, si_status=0, si_utime=0, si_stime=1 /* 0.01 s */} ---
20037 13:48:53 execve(&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&amp;#34;, [&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&amp;#34;, &amp;#34;-plugin&amp;#34;, &amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so&amp;#34;, &amp;#34;-plugin-opt=/usr/libexec/gcc/x86_64-linux-gnu/13/lto-wrapper&amp;#34;, &amp;#34;-plugin-opt=-fresolution=/tmp/ccKbYYb2.res&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;--build-id&amp;#34;, &amp;#34;--eh-frame-hdr&amp;#34;, &amp;#34;-m&amp;#34;, &amp;#34;elf_x86_64&amp;#34;, &amp;#34;--hash-style=gnu&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-dynamic-linker&amp;#34;, &amp;#34;/lib64/ld-linux-x86-64.so.2&amp;#34;, &amp;#34;-pie&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;now&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;relro&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/Scrt1.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crti.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtbeginS.o&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../../lib&amp;#34;, &amp;#34;-L/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../..&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;-lc&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtendS.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crtn.o&amp;#34;], 0x7d15df0 /* 72 vars */) = 0
20038 13:48:53 execve(&amp;#34;/usr/bin/ld&amp;#34;, [&amp;#34;/usr/bin/ld&amp;#34;, &amp;#34;-plugin&amp;#34;, &amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so&amp;#34;, &amp;#34;-plugin-opt=/usr/libexec/gcc/x86_64-linux-gnu/13/lto-wrapper&amp;#34;, &amp;#34;-plugin-opt=-fresolution=/tmp/ccKbYYb2.res&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc&amp;#34;, &amp;#34;-plugin-opt=-pass-through=-lgcc_s&amp;#34;, &amp;#34;--build-id&amp;#34;, &amp;#34;--eh-frame-hdr&amp;#34;, &amp;#34;-m&amp;#34;, &amp;#34;elf_x86_64&amp;#34;, &amp;#34;--hash-style=gnu&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-dynamic-linker&amp;#34;, &amp;#34;/lib64/ld-linux-x86-64.so.2&amp;#34;, &amp;#34;-pie&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;now&amp;#34;, &amp;#34;-z&amp;#34;, &amp;#34;relro&amp;#34;, &amp;#34;-o&amp;#34;, &amp;#34;hello&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/Scrt1.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crti.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtbeginS.o&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../../../lib&amp;#34;, &amp;#34;-L/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/x86_64-linux-gnu&amp;#34;, &amp;#34;-L/usr/lib/../lib&amp;#34;, &amp;#34;-L/usr/lib/gcc/x86_64-linux-gnu/13/../../..&amp;#34;, &amp;#34;/tmp/ccGZrdFz.o&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;-lc&amp;#34;, &amp;#34;-lgcc&amp;#34;, &amp;#34;--push-state&amp;#34;, &amp;#34;--as-needed&amp;#34;, &amp;#34;-lgcc_s&amp;#34;, &amp;#34;--pop-state&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/crtendS.o&amp;#34;, &amp;#34;/usr/lib/gcc/x86_64-linux-gnu/13/../../../x86_64-linux-gnu/crtn.o&amp;#34;], 0x7ffd0bf6c850 /* 72 vars */) = 0
20038 13:48:54 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20037 13:48:54 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20038, si_uid=1000, si_status=0, si_utime=4 /* 0.04 s */, si_stime=23 /* 0.23 s */} ---
20037 13:48:54 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;
20029 13:48:54 --- SIGCHLD {si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=20037, si_uid=1000, si_status=0, si_utime=0, si_stime=3 /* 0.03 s */} ---
20029 13:48:54 &amp;#43;&amp;#43;&amp;#43; exited with 0 &amp;#43;&amp;#43;&amp;#43;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h3>&lt;strong>编译流程分析&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="编译流程分析">&lt;/span>
&lt;a href="#%e7%bc%96%e8%af%91%e6%b5%81%e7%a8%8b%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Initial GCC Invocation&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="initial-gcc-invocation">&lt;/span>
&lt;a href="#initial-gcc-invocation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/gcc&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;gcc&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;-o&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;hello.c&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20029&lt;/code>&lt;/li>
&lt;li>&lt;strong>Action&lt;/strong>: Invokes the GCC driver (&lt;code>/usr/bin/gcc&lt;/code>).&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Compilation Phase&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="compilation-phase">&lt;/span>
&lt;a href="#compilation-phase" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&amp;#34;&lt;/span>, ...&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20034&lt;/code>&lt;/li>
&lt;li>&lt;strong>Role&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>cc1&lt;/code> is the &lt;strong>GCC C compiler frontend&lt;/strong>.&lt;/li>
&lt;li>Converts &lt;code>hello.c&lt;/code> to &lt;strong>assembly code&lt;/strong> (&lt;code>/tmp/ccLfEVyN.s&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Flags Passed&lt;/strong>:&lt;br>
Includes optimization settings (e.g., &lt;code>-mtune=generic&lt;/code>, &lt;code>-march=x86-64&lt;/code>), security features (&lt;code>-fstack-protector-strong&lt;/code>, &lt;code>-Wformat-security&lt;/code>), and others.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Result&lt;/strong>:&lt;br>
Assembly file generated at &lt;code>/tmp/ccLfEVyN.s&lt;/code>.&lt;/p>
&lt;hr>
&lt;h4>&lt;strong>Assembly Phase&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="assembly-phase">&lt;/span>
&lt;a href="#assembly-phase" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Attempts to locate the &lt;strong>assembler (&lt;code>as&lt;/code>)&lt;/strong>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/local/sbin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 ENOENT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/local/bin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 ENOENT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/sbin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> -1 ENOENT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/as&amp;#34;&lt;/span>, ...&lt;span class="o">)&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="m">0&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20036&lt;/code>&lt;/li>
&lt;li>&lt;strong>Why Multiple Tries?&lt;/strong>:&lt;br>
GCC searches standard paths for the assembler. Succeeds with &lt;code>/usr/bin/as&lt;/code> (GNU Assembler).&lt;/li>
&lt;li>&lt;strong>Action&lt;/strong>:&lt;br>
Assembles &lt;code>/tmp/ccLfEVyN.s&lt;/code> into an object file: &lt;code>/tmp/ccGZrdFz.o&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Linking Phase&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="linking-phase">&lt;/span>
&lt;a href="#linking-phase" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20037&lt;/code>&lt;/li>
&lt;li>&lt;strong>Role&lt;/strong>:
&lt;ul>
&lt;li>Wrapper for the linker (&lt;code>ld&lt;/code>).&lt;/li>
&lt;li>Prepares metadata for C++ static constructors/destructors (not needed here since &lt;code>hello.c&lt;/code> is plain C).&lt;/li>
&lt;li>Invokes the &lt;strong>real linker&lt;/strong> (&lt;code>/usr/bin/ld&lt;/code>).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Internal Linker Call&lt;/strong>:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">execve&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/usr/bin/ld&amp;#34;&lt;/span>, &lt;span class="o">[&lt;/span>...&lt;span class="o">]&lt;/span>, ...&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;strong>Process ID&lt;/strong>: &lt;code>20038&lt;/code>&lt;/li>
&lt;li>&lt;strong>Key Flags&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>-dynamic-linker /lib64/ld-linux-x86-64.so.2&lt;/code>: Sets the dynamic loader.&lt;/li>
&lt;li>&lt;code>-pie&lt;/code>: Creates a &lt;strong>Position-Independent Executable&lt;/strong> (security feature).&lt;/li>
&lt;li>&lt;code>-z now&lt;/code> and &lt;code>-z relro&lt;/code>: Enhance runtime security.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Inputs Linked&lt;/strong>:
&lt;ul>
&lt;li>CRT (C Runtime) files (&lt;code>Scrt1.o&lt;/code>, &lt;code>crti.o&lt;/code>, &lt;code>crtbeginS.o&lt;/code>, &lt;code>crtendS.o&lt;/code>, &lt;code>crtn.o&lt;/code>).&lt;/li>
&lt;li>Object file: &lt;code>/tmp/ccGZrdFz.o&lt;/code>.&lt;/li>
&lt;li>Standard libraries: &lt;code>-lgcc&lt;/code>, &lt;code>-lgcc_s&lt;/code>, &lt;code>-lc&lt;/code> (libc).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Result&lt;/strong>:&lt;br>
Final executable &lt;code>hello&lt;/code> is created.&lt;/p>
&lt;hr>
&lt;h3>&lt;strong>Success Indicators&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="success-indicators">&lt;/span>
&lt;a href="#success-indicators" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>All &lt;code>execve()&lt;/code> calls return &lt;code>0&lt;/code> (success).&lt;/li>
&lt;li>Processes exit cleanly (&lt;code>+++ exited with 0 +++&lt;/code>).&lt;/li>
&lt;li>No errors detected in the toolchain path or linking.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Security &amp;amp; Optimization Notes&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="security--optimization-notes">&lt;/span>
&lt;a href="#security--optimization-notes" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>&lt;strong>Stack Protection&lt;/strong>: Enabled via &lt;code>-fstack-protector-strong&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Hardened Linking&lt;/strong>:
&lt;ul>
&lt;li>&lt;code>-z now&lt;/code>: Immediate binding of symbols.&lt;/li>
&lt;li>&lt;code>-z relro&lt;/code>: Read-only relocations after relocation.&lt;/li>
&lt;li>&lt;code>-pie&lt;/code>: ASLR-friendly executable.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Build ID&lt;/strong>: Embedded via &lt;code>--build-id&lt;/code> for debugging/tracing.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Critical Paths&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="critical-paths">&lt;/span>
&lt;a href="#critical-paths" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tool&lt;/th>
&lt;th>Path&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>cc1&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/libexec/gcc/x86_64-linux-gnu/13/cc1&lt;/code>&lt;/td>
&lt;td>Compiles C to assembly&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>as&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/bin/as&lt;/code>&lt;/td>
&lt;td>Assembles &lt;code>.s&lt;/code> to &lt;code>.o&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>collect2&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/libexec/gcc/x86_64-linux-gnu/13/collect2&lt;/code>&lt;/td>
&lt;td>Manages linker setup&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ld&lt;/code>&lt;/td>
&lt;td>&lt;code>/usr/bin/ld&lt;/code>&lt;/td>
&lt;td>Links objects into final binary&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3>&lt;strong>Conclusion&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="conclusion">&lt;/span>
&lt;a href="#conclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>The log confirms a &lt;strong>standard GCC compilation pipeline&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Preprocessing + Parsing&lt;/strong>: Handled by &lt;code>cc1&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Assembly&lt;/strong>: Done by &lt;code>as&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Linking&lt;/strong>: Orchestrated by &lt;code>collect2&lt;/code> → &lt;code>ld&lt;/code>.&lt;/li>
&lt;/ol></description></item><item><title>Great Prompt</title><link>https://cloudedseal.github.io/blog/great-prompt/</link><pubDate>Mon, 28 Apr 2025 09:35:51 +0800</pubDate><guid>https://cloudedseal.github.io/blog/great-prompt/</guid><description>
&lt;h1>great prompt&lt;/h1>&lt;p>我在做 XX。如果你是一位专业人士，有更好的方法和建议吗？尽可能全面。&lt;/p></description></item><item><title>Master Type System</title><link>https://cloudedseal.github.io/blog/master-type-system/</link><pubDate>Fri, 25 Apr 2025 11:04:51 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-type-system/</guid><description>
&lt;h1>为啥需要 type system?&lt;/h1>&lt;h2>&lt;code>type&lt;/code> 就是契约&lt;span class="hx-absolute -hx-mt-20" id="type-就是契约">&lt;/span>
&lt;a href="#type-%e5%b0%b1%e6%98%af%e5%a5%91%e7%ba%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ul>
&lt;li>At the hardware level, the machine does not know types in the way humans or high-level programming languages do. 硬件级别就是电信号了。&lt;code>type&lt;/code> 这种概念不存在。&lt;/li>
&lt;li>Bits are just bits (0s and 1s), and the CPU/memory has no intrinsic understanding of &amp;ldquo;integers,&amp;rdquo; &amp;ldquo;strings,&amp;rdquo; or &amp;ldquo;objects.&amp;rdquo;&lt;/li>
&lt;li>But types exist in programming languages to &lt;code>impose structure on those raw bits&lt;/code>, guiding both the &lt;code>programmer&lt;/code> and the &lt;code>compiler/interpreter&lt;/code> on how to &lt;code>interpret and manipulate&lt;/code> data safely and meaningfully.&lt;/li>
&lt;/ul>
&lt;h2>Bridging Human Intent &amp;lt;-&amp;gt; Machine Execution&lt;span class="hx-absolute -hx-mt-20" id="bridging-human-intent---machine-execution">&lt;/span>
&lt;a href="#bridging-human-intent---machine-execution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Types act as a &lt;code>contract&lt;/code>&lt;/p>
&lt;ul>
&lt;li>For &lt;code>humans&lt;/code>: They make code &lt;code>readable&lt;/code> and &lt;code>intentional&lt;/code> (e.g., int age vs. string name).&lt;/li>
&lt;li>For &lt;code>compilers&lt;/code>: They generate &lt;code>correct&lt;/code>, &lt;code>optimized&lt;/code> machine code (e.g., using ADD vs. FADD for integers vs. floats). 编译器根据数据类型使用相应的指令&lt;/li>
&lt;li>For &lt;code>safety&lt;/code>: They prevent &lt;code>invalid&lt;/code> operations (e.g., multiplying a string by a file handle).&lt;/li>
&lt;/ul>
&lt;h1>硬件视角下的数据&lt;/h1>&lt;h2>Bits Are Just Bits&lt;span class="hx-absolute -hx-mt-20" id="bits-are-just-bits">&lt;/span>
&lt;a href="#bits-are-just-bits" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>按照硬件电路的设计，就是一系列电信号而已。&lt;/p>
&lt;/blockquote>
&lt;h3>No inherent types&lt;span class="hx-absolute -hx-mt-20" id="no-inherent-types">&lt;/span>
&lt;a href="#no-inherent-types" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>没有所谓的类型。&lt;/p>
&lt;/blockquote>
&lt;p>To the CPU, memory is a giant array of bytes. When you write 42 (integer) or &amp;ldquo;hello&amp;rdquo; (string), the machine sees only binary patterns like 00101010 or 01101000 01100101 01101100 01101100 01101111.&lt;/p>
&lt;h3>Operations are &amp;ldquo;type-agnostic&amp;rdquo;&lt;span class="hx-absolute -hx-mt-20" id="operations-are-type-agnostic">&lt;/span>
&lt;a href="#operations-are-type-agnostic" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>给定一个指令，指令就会按照设计好的功能来使用 bits, 不管这个 bits 到底是啥。&lt;/p>
&lt;/blockquote>
&lt;p>The CPU executes instructions (e.g., ADD, MOV) based on the binary values in registers, not their &amp;ldquo;meaning.&amp;rdquo; For example:&lt;/p>
&lt;ul>
&lt;li>ADD treats bits as integers (using &lt;code>arithmetic circuits&lt;/code>).&lt;/li>
&lt;li>MOV copies bits &lt;code>blindly&lt;/code> from one location to another.&lt;/li>
&lt;li>The &lt;code>same bits&lt;/code> could represent an integer, a float, or part of a string, depending on context.&lt;/li>
&lt;/ul>
&lt;h1>How Types Work &amp;ldquo;Under the Hood&amp;rdquo;？&lt;/h1>&lt;p>&lt;strong>&lt;code>Types are a human/compiler abstraction layered on top of raw bits&lt;/code>&lt;/strong>&lt;/p>
&lt;p>Here’s how they translate to the machine:&lt;/p>
&lt;ol>
&lt;li>Compiler/Interpreter Assigns Meaning&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>A high-level language (e.g., C, Python) assigns semantic meaning to bits using types. For example:&lt;/li>
&lt;li>int x = 42: The compiler allocates 4 bytes (32 bits) and encodes 42 as 00101010&amp;hellip;, then enforces that x can only be used in integer operations (e.g., x + 5).&lt;/li>
&lt;li>float y = 3.14: The same 4 bytes are interpreted as an IEEE 754 floating-point number.&lt;/li>
&lt;li>char* s = &amp;ldquo;hello&amp;rdquo;: The compiler stores the ASCII codes for each character in memory and treats the variable as a pointer to the first byte.&lt;/li>
&lt;/ul>
&lt;p>Without types, the compiler wouldn’t know &lt;code>how to generate correct machine code&lt;/code> (e.g., integer vs. floating-point arithmetic instructions).&lt;/p>
&lt;ol start="2">
&lt;li>Runtime Type Tracking (Dynamically Typed Languages)
In languages like Python or JavaScript, types are &lt;code>checked at runtime&lt;/code>. For example:&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">42&lt;/span> &lt;span class="c1"># Interpreter tags `x` as an integer internally.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span> &lt;span class="c1"># Later, the tag changes to &amp;#34;string.&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The interpreter keeps metadata (e.g., type tags) to track what the bits represent. This adds overhead but allows flexibility.&lt;/p>
&lt;h1>What Happens Without High-Level Type Abstractions?&lt;/h1>&lt;p>If you remove types from the equation (e.g., programming in raw assembly or using memory pointers without safeguards):&lt;/p>
&lt;h2>Ambiguous Interpretation&lt;span class="hx-absolute -hx-mt-20" id="ambiguous-interpretation">&lt;/span>
&lt;a href="#ambiguous-interpretation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The same bits can be misused as different types, leading to chaos:&lt;/p>
&lt;p>// C code (no runtime type checking)&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">42&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">float&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Reinterpret the bits of `x` as a float.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Prints nonsense: 42 as a float ≈ 5.9e-44.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Undefined Behavior&lt;span class="hx-absolute -hx-mt-20" id="undefined-behavior">&lt;/span>
&lt;a href="#undefined-behavior" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Memory corruption: Writing a string into memory allocated for an integer:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span>&lt;span class="o">*&lt;/span> &lt;span class="n">arr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">malloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Buffer overflow (undefined behavior).
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>• Security vulnerabilities: Treating data as executable code (e.g., injection attacks).&lt;/p>
&lt;h2>No Guardrails&lt;span class="hx-absolute -hx-mt-20" id="no-guardrails">&lt;/span>
&lt;a href="#no-guardrails" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• You could &amp;ldquo;add&amp;rdquo; a string to a file handle, and the CPU would try to execute it, resulting in crashes or garbage output.&lt;/p>
&lt;h1>java 代码理解&lt;/h1>&lt;h2>Square.java&lt;span class="hx-absolute -hx-mt-20" id="squarejava">&lt;/span>
&lt;a href="#squarejava" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">Square&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">num&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Square 字节码查看&lt;span class="hx-absolute -hx-mt-20" id="square-字节码查看">&lt;/span>
&lt;a href="#square-%e5%ad%97%e8%8a%82%e7%a0%81%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>javap -c Square&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">Square&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Square&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokespecial&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/Object.&amp;#34;&amp;lt;init&amp;gt;&amp;#34;:()V&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">imul&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ireturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">float&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">fmul&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">freturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">square&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lload_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lmul&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lreturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到编译器根据 type 使用了对应的 mul 指令&lt;/p>
&lt;ol>
&lt;li>可以看到 int 类型对应的指令有 imul&lt;/li>
&lt;li>可以看到 float 类型对应的指令有 fmul&lt;/li>
&lt;li>可以看到 long 类型对应的指令有 lmul&lt;/li>
&lt;/ol>
&lt;h1>总结&lt;/h1>&lt;p>Types are a tool &lt;code>for humans&lt;/code>, &lt;code>not the machine&lt;/code>. Without them, programming would require &lt;code>manually managing every bit and operation&lt;/code>, akin to writing assembly code for every program—a recipe for bugs and inefficiency&lt;/p></description></item><item><title>Linux Process State</title><link>https://cloudedseal.github.io/blog/linux-process-state/</link><pubDate>Tue, 22 Apr 2025 17:07:48 +0800</pubDate><guid>https://cloudedseal.github.io/blog/linux-process-state/</guid><description>
&lt;h1>进程状态机&lt;/h1>&lt;p>最近在看南京大学&lt;a href="https://ics.nju.edu.cn/~jyy/" target="_blank" rel="noopener">蒋炎岩&lt;/a>老师的 2025 操作系统课程。里面有一句话, 计算机中的一切程序可以视为 &lt;code>state machine&lt;/code>。很有启发。进程有初始状态, CPU 这个无情的执行指令的机器执行一条指令后，程序的状态就发生了变化。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/linux-process-state-machine-userspace.drawio.svg" alt="linux-process-state-machine-userspace" loading="lazy" />&lt;/p>
&lt;h1>process state&lt;/h1>&lt;h2>Running/Runnable(R)&lt;span class="hx-absolute -hx-mt-20" id="runningrunnabler">&lt;/span>
&lt;a href="#runningrunnabler" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>万事俱备，只需要被 &lt;code>scheduler&lt;/code> 调度到 CPU 上去运行。&lt;/p>
&lt;h2>Interruptable Sleep(S)&lt;span class="hx-absolute -hx-mt-20" id="interruptable-sleeps">&lt;/span>
&lt;a href="#interruptable-sleeps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>处于这个状态的不会被 &lt;code>scheduler&lt;/code> 调度到 CPU 上去运行。&lt;/p>
&lt;h3>d_state.c code&lt;span class="hx-absolute -hx-mt-20" id="d_statec-code">&lt;/span>
&lt;a href="#d_statec-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">d_state.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pause&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o d_state d_state.c&lt;/li>
&lt;li>./d_state&lt;/li>
&lt;li>ps aux | grep d_state&lt;/li>
&lt;/ol>
&lt;h2>Uninterruptible Sleep(D)&lt;span class="hx-absolute -hx-mt-20" id="uninterruptible-sleepd">&lt;/span>
&lt;a href="#uninterruptible-sleepd" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>可能是 &lt;code>Disk Sleep&lt;/code> 的原因。状态用 &lt;code>D&lt;/code> 表示。&lt;/p>
&lt;h2>Stopped(T)&lt;span class="hx-absolute -hx-mt-20" id="stoppedt">&lt;/span>
&lt;a href="#stoppedt" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>如使用 &lt;code>SIGSTOP&lt;/code> 信号，暂停的进程。&lt;/p>
&lt;h3>d_state.c code&lt;span class="hx-absolute -hx-mt-20" id="d_statec-code-1">&lt;/span>
&lt;a href="#d_statec-code-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">d_state.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pause&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o d_state d_state.c&lt;/li>
&lt;li>./d_state&lt;/li>
&lt;li>ps aux | grep d_state&lt;/li>
&lt;li>kill -SIGTSTP $(pidof d_state)&lt;/li>
&lt;li>ps aux | grep d_state&lt;/li>
&lt;/ol>
&lt;h2>Zombie(Z)&lt;span class="hx-absolute -hx-mt-20" id="zombiez">&lt;/span>
&lt;a href="#zombiez" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>进程已经执行了 &lt;code>exit&lt;/code>, &lt;code>exit code&lt;/code> 还没有被&lt;code>父进程&lt;/code> &lt;code>wait/waitpid&lt;/code> 读取。也就是进程的 &lt;code>PCB&lt;/code> 还没有从 kernel 的 &lt;code>process table&lt;/code> 中清除。&lt;/p>
&lt;h3>zombie.c code&lt;span class="hx-absolute -hx-mt-20" id="zombiec-code">&lt;/span>
&lt;a href="#zombiec-code" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">zombie.c&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sched.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">pid_t&lt;/span> &lt;span class="n">child_pid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fork&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">child_pid&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// Child process
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Child PID: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">getpid&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Child exits immediately
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="c1">// Parent process
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Parent PID: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">getpid&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Child PID: %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">child_pid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Parent is sleeping (check for zombie with `ps`).&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// Parent sleeps (does not call wait())
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Parent exiting.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o zombie zombie.c&lt;/li>
&lt;li>./zombie&lt;/li>
&lt;li>ps aux | grep zombie&lt;/li>
&lt;/ol>
&lt;h1>system calls changing process state on Linux&lt;/h1>&lt;h2>&lt;code>fork()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="fork">&lt;/span>
&lt;a href="#fork" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Creates a new child process by duplicating the parent process.&lt;/p>
&lt;p>• State Change: The child starts in the ready/runnable state (waiting for CPU time).&lt;/p>
&lt;p>• Parameters: None.&lt;/p>
&lt;p>• Return Value:&lt;/p>
&lt;p>• &lt;code>0&lt;/code> to the child process.&lt;/p>
&lt;p>• &lt;code>Child's PID&lt;/code> to the parent.&lt;/p>
&lt;p>• &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Used in spawning new processes (e.g., shell commands).&lt;/p>
&lt;h2>&lt;code>execve()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="execve">&lt;/span>
&lt;a href="#execve" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Replaces the current process&amp;rsquo;s memory space with a new program.&lt;/p>
&lt;p>• State Change: The process remains in the &lt;code>running state&lt;/code> but executes new code.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>path&lt;/code>: Path to the executable.&lt;/p>
&lt;p>• &lt;code>argv&lt;/code>: Command-line arguments.&lt;/p>
&lt;p>• &lt;code>envp&lt;/code>: Environment variables.&lt;/p>
&lt;p>• Return Value: Only returns on error (&lt;code>-1&lt;/code>).&lt;/p>
&lt;p>• Example: Running programs like &lt;code>ls&lt;/code> or &lt;code>grep&lt;/code> from a shell.&lt;/p>
&lt;h2>&lt;code>exit()&lt;/code> / &lt;code>_exit()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="exit--_exit">&lt;/span>
&lt;a href="#exit--_exit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Terminates the current process.&lt;/p>
&lt;p>• State Change: Moves the process to &lt;code>zombie&lt;/code> (until the parent calls &lt;code>wait()&lt;/code>).&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>status&lt;/code>: Exit status code.&lt;/p>
&lt;p>• Return Value: None (does not return).&lt;/p>
&lt;p>• Difference: &lt;code>exit()&lt;/code> flushes buffers; &lt;code>_exit()&lt;/code> is a raw system call.&lt;/p>
&lt;p>• Example: Clean termination after program completion.&lt;/p>
&lt;h2>&lt;code>wait()&lt;/code> / &lt;code>waitpid()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="wait--waitpid">&lt;/span>
&lt;a href="#wait--waitpid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Suspends the parent until a child changes state (exits or stops).&lt;/p>
&lt;p>• State Change: Parent enters sleeping state until child exits.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>status&lt;/code>: Stores child&amp;rsquo;s exit status.&lt;/p>
&lt;p>• &lt;code>pid&lt;/code>: Specific child to wait for (in &lt;code>waitpid&lt;/code>).&lt;/p>
&lt;p>• Return Value: Child PID on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Parent process ensuring a child completes first.&lt;/p>
&lt;h2>&lt;code>kill()&lt;/code> / &lt;code>raise()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="kill--raise">&lt;/span>
&lt;a href="#kill--raise" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Sends signals to processes (e.g., &lt;code>SIGTERM&lt;/code>, &lt;code>SIGSTOP&lt;/code>).&lt;/p>
&lt;p>• State Change:&lt;/p>
&lt;p>• &lt;code>SIGSTOP&lt;/code>: Moves process to stopped state.&lt;/p>
&lt;p>• &lt;code>SIGCONT&lt;/code>: Resumes a stopped process.&lt;/p>
&lt;p>• &lt;code>SIGKILL&lt;/code>: Terminates immediately.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>pid&lt;/code>: Target process ID.&lt;/p>
&lt;p>• &lt;code>sig&lt;/code>: Signal to send.&lt;/p>
&lt;p>• Return Value: &lt;code>0&lt;/code> on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Terminating a frozen process via &lt;code>kill -9 PID&lt;/code>.&lt;/p>
&lt;h2>&lt;code>pause()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="pause">&lt;/span>
&lt;a href="#pause" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Suspends the process until a signal is received.&lt;/p>
&lt;p>• State Change: Process enters &lt;strong>&lt;code>interruptable sleeping&lt;/code>&lt;/strong> state.&lt;/p>
&lt;p>• Parameters: None.&lt;/p>
&lt;p>• Return Value: Always &lt;code>-1&lt;/code> (interrupted by signal).&lt;/p>
&lt;p>• Example: Waiting indefinitely for user input or signals.&lt;/p>
&lt;h2>&lt;code>nanosleep()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="nanosleep">&lt;/span>
&lt;a href="#nanosleep" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Pauses execution for a specified time.&lt;/p>
&lt;p>• State Change: Process enters &lt;strong>&lt;code>interruptible sleep&lt;/code>&lt;/strong>.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>req&lt;/code>: Time to sleep.&lt;/p>
&lt;p>• &lt;code>rem&lt;/code>: Remaining time if interrupted.&lt;/p>
&lt;p>• Return Value: &lt;code>0&lt;/code> on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: High-precision delays in real-time applications.&lt;/p>
&lt;h2>&lt;code>ptrace()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="ptrace">&lt;/span>
&lt;a href="#ptrace" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Allows a process to control another (debugging, tracing).&lt;/p>
&lt;p>• State Change: Traced process enters &lt;strong>&lt;code>stopped&lt;/code>&lt;/strong> state on signals.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>request&lt;/code>: Action (e.g., &lt;code>PTRACE_ATTACH&lt;/code>, &lt;code>PTRACE_CONT&lt;/code>).&lt;/p>
&lt;p>• &lt;code>pid&lt;/code>: Target process ID.&lt;/p>
&lt;p>• Return Value: Varies by request; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Debuggers like &lt;code>gdb&lt;/code> using breakpoints.&lt;/p>
&lt;h2>&lt;code>clone()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="clone">&lt;/span>
&lt;a href="#clone" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Creates a child process or thread with configurable behavior.&lt;/p>
&lt;p>• State Change: New process/thread starts in ready state.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>fn&lt;/code>: Function for the child to execute.&lt;/p>
&lt;p>• &lt;code>flags&lt;/code>: Options (e.g., &lt;code>CLONE_VM&lt;/code> for shared memory).&lt;/p>
&lt;p>• &lt;code>arg&lt;/code>: Arguments for &lt;code>fn&lt;/code>.&lt;/p>
&lt;p>• Return Value: Child PID on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Implementing threads (used by &lt;code>pthread&lt;/code> library).&lt;/p>
&lt;h2>&lt;code>sched_yield()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="sched_yield">&lt;/span>
&lt;a href="#sched_yield" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Voluntarily yields the CPU to other processes/threads.&lt;/p>
&lt;p>• State Change: Process moves from running to &lt;code>ready&lt;/code> state.&lt;/p>
&lt;p>• Parameters: None.&lt;/p>
&lt;p>• Return Value: &lt;code>0&lt;/code> on success; &lt;code>-1&lt;/code> on error.&lt;/p>
&lt;p>• Example: Cooperative multitasking in real-time apps.&lt;/p>
&lt;h2>&lt;code>exit_group()&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="exit_group">&lt;/span>
&lt;a href="#exit_group" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>• Purpose: Terminates all threads in a process.&lt;/p>
&lt;p>• State Change: All threads enter zombie state.&lt;/p>
&lt;p>• Parameters:&lt;/p>
&lt;p>• &lt;code>status&lt;/code>: Exit code.&lt;/p>
&lt;p>• Return Value: Does not return.&lt;/p>
&lt;p>• Example: Terminating multi-threaded applications.&lt;/p>
&lt;h1>Key Signals Affecting Process State&lt;/h1>&lt;p>• &lt;code>SIGSTOP&lt;/code>: Forcefully stops a process.&lt;/p>
&lt;p>• &lt;code>SIGCONT&lt;/code>: Resumes a stopped process.&lt;/p>
&lt;p>• &lt;code>SIGTERM&lt;/code>: Requests graceful termination.&lt;/p>
&lt;p>• &lt;code>SIGKILL&lt;/code>: Forcefully kills a process.&lt;/p>
&lt;h1>Summary Table&lt;/h1>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>System Call&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;th>Key State Change&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>fork()&lt;/code>&lt;/td>
&lt;td>Create child process&lt;/td>
&lt;td>Child → Runnable&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>execve()&lt;/code>&lt;/td>
&lt;td>Replace process image&lt;/td>
&lt;td>Process runs new code&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>exit()&lt;/code>&lt;/td>
&lt;td>Terminate process&lt;/td>
&lt;td>Process → Zombie&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>wait()&lt;/code>&lt;/td>
&lt;td>Wait for child state change&lt;/td>
&lt;td>Parent → Sleeping&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kill()&lt;/code>&lt;/td>
&lt;td>Send signal (e.g., stop/resume)&lt;/td>
&lt;td>Target → Stopped/Running&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>pause()&lt;/code>&lt;/td>
&lt;td>Sleep until signal&lt;/td>
&lt;td>Process → Sleeping&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ptrace()&lt;/code>&lt;/td>
&lt;td>Debug/trace another process&lt;/td>
&lt;td>Target → Stopped&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>clone()&lt;/code>&lt;/td>
&lt;td>Create thread/process&lt;/td>
&lt;td>New entity → Runnable&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>These system calls and signals form the backbone of process lifecycle management in Linux, enabling creation, termination, synchronization, and debugging of processes.&lt;/p></description></item><item><title>Asm How Glibc Wrap Syscall</title><link>https://cloudedseal.github.io/blog/asm-how-glibc-wrap-syscall/</link><pubDate>Mon, 21 Apr 2025 15:34:28 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-how-glibc-wrap-syscall/</guid><description>
&lt;blockquote>
&lt;p>实验平台: x86_64 GNU/Linux mint22.1&lt;/p>
&lt;/blockquote>
&lt;h1>使用 &lt;code>glibc&lt;/code> 的函数&lt;/h1>&lt;p>write1.c&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello, glibc!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// glibc&amp;#39;s write() wrapper
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o write1 write1.c&lt;/li>
&lt;li>使用 &lt;code>ltrace ./write1&lt;/code> 查看调用了 write 库函数&lt;/li>
&lt;/ol>
&lt;h1>不使用 glibc 的函数&lt;/h1>&lt;p>write2.c&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;errno.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;syscall.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">ssize_t&lt;/span> &lt;span class="nf">write_no_glibc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">size_t&lt;/span> &lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">asm&lt;/span> &lt;span class="k">volatile&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34;syscall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;=a&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// Output: result in rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">__NR_write&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;D&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">fd&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;S&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buf&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;d&amp;#34;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// Inputs
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;rcx&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;r11&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;memory&amp;#34;&lt;/span> &lt;span class="c1">// Clobbered registers
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">errno&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Set errno on error
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Return bytes written
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello, glibc!&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">write_no_glibc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>gcc -o write2 write2.c&lt;/li>
&lt;li>使用 &lt;code>ltrace ./write2&lt;/code> 查看没有调用 write 库函数&lt;/li>
&lt;/ol>
&lt;h1>How glibc Wraps System Calls​​&lt;/h1>&lt;h2>​System Call Number​​&lt;span class="hx-absolute -hx-mt-20" id="system-call-number">&lt;/span>
&lt;a href="#system-call-number" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Each system call (e.g., write, read) is assigned a &lt;code>unique number&lt;/code> (e.g., __NR_write). 要使用哪一个 syscall&lt;/p>
&lt;h2>Argument Setup​​&lt;span class="hx-absolute -hx-mt-20" id="argument-setup">&lt;/span>
&lt;a href="#argument-setup" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The wrapper loads the system call number and arguments into specific registers (architecture-dependent). 设置 syscall 的参数&lt;/p>
&lt;h2>​Kernel Transition​​&lt;span class="hx-absolute -hx-mt-20" id="kernel-transition">&lt;/span>
&lt;a href="#kernel-transition" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>The wrapper uses an instruction like syscall (x86-64) to switch to kernel mode. 进入 kernel mode&lt;/p>
&lt;h2>Result Handling​​&lt;span class="hx-absolute -hx-mt-20" id="result-handling">&lt;/span>
&lt;a href="#result-handling" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>After the kernel finishes, the wrapper checks for errors, sets errno if needed, and returns the result. 处理返回值&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/ltrace.1.html" target="_blank" rel="noopener">https://man7.org/linux/man-pages/man1/ltrace.1.html&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Cmd Strace</title><link>https://cloudedseal.github.io/blog/cmd-strace/</link><pubDate>Sat, 19 Apr 2025 16:29:04 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cmd-strace/</guid><description>
&lt;h1>syscall&lt;/h1>&lt;p>操作系统运行在 kernel space, 拥有整个系统的控制权。
应用程序运行在 user space, 拥有部分权限。
这就是隔离。
To prevent user applications from &lt;code>accessing or modifying&lt;/code> critical operating system data.
想让操作系统做些事情怎么办？使用 syscall。&lt;/p>
&lt;h1>strace&lt;/h1>&lt;h2>strace -t -ff -o MainTest.log -f java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--t--ff--o-maintestlog--f--java-maintest">&lt;/span>
&lt;a href="#strace--t--ff--o-maintestlog--f--java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;code>-t&lt;/code> time&lt;/li>
&lt;li>&lt;code>-ff&lt;/code> follow-fork&lt;/li>
&lt;li>&lt;code>-o&lt;/code> output&lt;/li>
&lt;/ol>
&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=futex,write java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-tracefutexwrite-java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-tracefutexwrite-java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-ff -o 每一个进程的 log 单独写到一个文件&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">13468&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21792
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">455425&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21793
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1254&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21794
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1361&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21795
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">3802&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21796
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1677&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21797
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1705&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21798
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1797&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21810
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">6087&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21811
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">5541&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21812
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">1444&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21813
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">33890&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21814
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-rw-r-- &lt;span class="m">1&lt;/span> yang yang &lt;span class="m">3996&lt;/span> Apr &lt;span class="m">20&lt;/span> 21:10 MainTest.log.21822&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=futex,write java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-tracefutexwrite--java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-tracefutexwrite--java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-e expr 多个 syscall CSV 形式&lt;/p>
&lt;/blockquote>
&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=%process java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-traceprocess-java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-traceprocess-java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=%memory -a java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-tracememory--a-java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-tracememory--a-java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>strace -tt -ff -o MainTest.log -f -e trace=%ipc java MainTest&lt;span class="hx-absolute -hx-mt-20" id="strace--tt--ff--o-maintestlog---f--e-traceipc--java-maintest">&lt;/span>
&lt;a href="#strace--tt--ff--o-maintestlog---f--e-traceipc--java-maintest" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://jvns.ca/strace-zine-v2.pdf" target="_blank" rel="noopener">https://jvns.ca/strace-zine-v2.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man1/strace.1.html" target="_blank" rel="noopener">https://man7.org/linux/man-pages/man1/strace.1.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://strace.io/" target="_blank" rel="noopener">https://strace.io/&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java String Concat in Loop</title><link>https://cloudedseal.github.io/blog/java-string-concat-in-loop/</link><pubDate>Wed, 09 Apr 2025 10:56:10 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-string-concat-in-loop/</guid><description>
&lt;h1>分析环境&lt;/h1>&lt;blockquote>
&lt;p>jdk8&lt;/p>
&lt;/blockquote>
&lt;h1>分析代码&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">StringConcat&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;$&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>main 字节码&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Code&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ldc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// String $&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">astore_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iconst_0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">istore_2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bipush&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">if_icmpge&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">36&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// class java/lang/StringBuilder&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">14&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dup&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">15&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokespecial&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.&amp;#34;&amp;lt;init&amp;gt;&amp;#34;:()V&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">18&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aload_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">19&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">22&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iload_2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">23&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">26&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/lang/StringBuilder.toString:()Ljava/lang/String;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">29&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">astore_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">iinc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">33&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">goto&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">36&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getstatic&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Field java/lang/System.out:Ljava/io/PrintStream;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">39&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aload_1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">40&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">invokevirtual&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="err">#&lt;/span>&lt;span class="n">9&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Method java/io/PrintStream.println:(Ljava/lang/String;)V&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">43&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>main 字节码执行图解分析&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/java-string-concat-in-loop.drawio.svg" alt="循环里字符串连接.drawio.svg" loading="lazy" />&lt;/p>
&lt;blockquote>
&lt;p>由图可以看出，在外部定义的字符串变量 s，在 for 循环中和其他变量进行拼接，最终得到连接后的 s。&lt;br>
循环的每一轮都会生成一个新的 StringBuilder 对象，进行两次 append 操作，append(s) 和 append(i)。最终这一轮的 s 是由 sb.toString() 得来的。&lt;br>
如果循环次数是 1万次，需要创建的 StringBuilder 是 1 万个。这样是对性能肯定有影响的。短时间内产生大量的对象。&lt;br>&lt;/p>
&lt;/blockquote>
&lt;h1>结论&lt;/h1>&lt;blockquote>
&lt;p>循环次数过多时，不要在循环里拼接需要的字符串。&lt;/p>
&lt;/blockquote>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.ldc" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.ldc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.astore_n" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.astore_n&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iload_n" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iload_n&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.bipush" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.bipush&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.if_icmp_cond" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.if_icmp_cond&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.new" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.new&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iinc" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iinc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.getstatic" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.getstatic&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.invokevirtual" target="_blank" rel="noopener">https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.invokevirtual&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Name Id Pairs</title><link>https://cloudedseal.github.io/blog/name-id-pairs/</link><pubDate>Wed, 09 Apr 2025 10:16:41 +0800</pubDate><guid>https://cloudedseal.github.io/blog/name-id-pairs/</guid><description>
&lt;h1>name id pairs&lt;/h1>&lt;blockquote>
&lt;p>对于 OS 来说，id 更重要。&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">symbolic name(human readable name)&lt;/th>
&lt;th style="text-align: center">number name(low level name)&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">service name&lt;/td>
&lt;td style="text-align: center">port&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">user name&lt;/td>
&lt;td style="text-align: center">user id&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">process name&lt;/td>
&lt;td style="text-align: center">process id&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">host name&lt;/td>
&lt;td style="text-align: center">ip address&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">file name&lt;/td>
&lt;td style="text-align: center">inode number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">signal name&lt;/td>
&lt;td style="text-align: center">signal number&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">syscall name&lt;/td>
&lt;td style="text-align: center">syscall number&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>Java Aqs</title><link>https://cloudedseal.github.io/blog/java-aqs/</link><pubDate>Fri, 21 Mar 2025 10:54:27 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-aqs/</guid><description>
&lt;h1>abstract queued synchronizer 是啥？&lt;/h1>&lt;blockquote>
&lt;p>AQS is an abstract class that provides a skeleton for &lt;code>managing thread contention&lt;/code>, &lt;code>queuing&lt;/code>, and &lt;code>state synchronization&lt;/code>.
It uses a &lt;code>FIFO wait(sync) queue&lt;/code> to manage threads waiting for access to a shared resource and an &lt;code>atomic integer (state)&lt;/code> to track the synchronizer&amp;rsquo;s status (e.g., locked/unlocked, available permits).&lt;/p>
&lt;/blockquote>
&lt;h1>AQS 数据结构&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Head of the wait queue, lazily initialized. Except for
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * initialization, it is modified only via method setHead. Note:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * If head exists, its waitStatus is guaranteed not to be
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * CANCELLED.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">transient&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 等待队列的 head&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Tail of the wait queue, lazily initialized. Modified only via
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * method enq to add new wait node.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">transient&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 等待队列的 tail&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The synchronization state.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">state&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 同步状态, 这就是所谓的 lock&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The current owner of exclusive mode synchronization.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">transient&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exclusiveOwnerThread&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="n">继承自&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AbstractOwnableSynchronizer&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>Node 数据结构&lt;/h1>&lt;blockquote>
&lt;p>组成双向链表，在之上构建等待队列&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">waitStatus&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 下一个 Node 等待状态&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 前驱节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 后继节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">入队等待的线程&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>RentrantLock.lock 整体概览&lt;/h1>&lt;p>&lt;a href="https://raw.githubusercontent.com/buybyte/pictures/main/img/CAS_acquire.png" target="_blank" rel="noopener">RentrantLock.lock 流程概览&lt;/a>&lt;/p>
&lt;h2>FairSync.lock 分析&lt;span class="hx-absolute -hx-mt-20" id="fairsynclock-分析">&lt;/span>
&lt;a href="#fairsynclock-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>acquire(1) 分析&lt;span class="hx-absolute -hx-mt-20" id="acquire1-分析">&lt;/span>
&lt;a href="#acquire1-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">acquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">tryAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">acquireQueued&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addWaiter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">EXCLUSIVE&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">selfInterrupt&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>&lt;code>tryAcquire&lt;/code> 若返回为 true, 表明获取 lock 成功, !tryAcquire 为 false, 获取 lock 流程结束。&lt;/li>
&lt;li>&lt;code>tryAcquire&lt;/code> 若返回为 false, 表明获取 lock 失败, 为啥失败, 因为有其他线程获取了, 但是还没有释放。
&lt;ol>
&lt;li>流程进入 &lt;code>addWaiter&lt;/code>, 也就是当前线程去排队等待获取 lock。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;h3>tryAcquire 分析&lt;span class="hx-absolute -hx-mt-20" id="tryacquire-分析">&lt;/span>
&lt;a href="#tryacquire-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Fair version of tryAcquire. Don&amp;#39;t grant access unless
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * recursive call or no waiters or is first.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">tryAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acquires&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentThread&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 当前申请获取锁的线程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getState&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// lock 的状态&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// lock 是 unlock 状态&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">hasQueuedPredecessors&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 看一下队列中是不是已有在等待获取锁的线程，这就是所谓公平的体现，FIFO&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acquires&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 没有在等待获取锁的线程, 获取锁，这里 CAS 可能会失败&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setExclusiveOwnerThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 本线程持有这个锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getExclusiveOwnerThread&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 该线程已经持有了锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">acquires&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 直接改变状态，这就是所谓可重入的意思,已经获取锁的线程，可以再次获取该锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nextc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Maximum lock count exceeded&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 这里可能会抛异常&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">nextc&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>addWaiter 分析&lt;span class="hx-absolute -hx-mt-20" id="addwaiter-分析">&lt;/span>
&lt;a href="#addwaiter-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>线程获取锁失败, 到阻塞队列去排队。这里是 addWaiter(null, 1)&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Creates and enqueues node for current thread and given mode.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param mode Node.EXCLUSIVE for exclusive, Node.SHARED for shared
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return the new node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">addWaiter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentThread&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mode&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Try the fast path of enq; backup to full enq on failure&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 说明队列不空&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置 node 前驱&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">compareAndSetTail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// AQS 设置新的 tail&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置 pred 后继&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 返回包装申请锁的线程的 Node 节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">enq&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 说明队列为空&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 返回包装申请锁的线程的 Node 节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>enq 返回 node 的前驱节点&lt;span class="hx-absolute -hx-mt-20" id="enq-返回-node-的前驱节点">&lt;/span>
&lt;a href="#enq-%e8%bf%94%e5%9b%9e-node-%e7%9a%84%e5%89%8d%e9%a9%b1%e8%8a%82%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;h4>addWaiter 图示&lt;span class="hx-absolute -hx-mt-20" id="addwaiter-图示">&lt;/span>
&lt;a href="#addwaiter-%e5%9b%be%e7%a4%ba" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>链表，还是画一画图，理解的更好&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/AQS-addWaiter.drawio.svg" alt="addWaiter-图示" loading="lazy" />&lt;/p>
&lt;ol>
&lt;li>tail == null, 等待队列里一个等待的线程 Node 也没有
&lt;ul>
&lt;li>enq 入队, 创建一个 Node 节点,作为 head, 再添加要获取锁的节点&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>tail != null, 等待队列里已经有等待的线程 Node 了
&lt;ul>
&lt;li>直接添加到等待队列队尾&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3>acquireQueued 分析&lt;span class="hx-absolute -hx-mt-20" id="acquirequeued-分析">&lt;/span>
&lt;a href="#acquirequeued-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Acquires in exclusive uninterruptible mode for thread already in
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * queue. Used by condition wait methods as well as acquire.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param arg the acquire argument
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return {@code true} if interrupted while waiting
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">acquireQueued&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">failed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">interrupted&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(;;)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 注意是循环&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">predecessor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tryAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 是等待队列的第一个 &amp;amp;&amp;amp; tryAcquire , true 表明获取了锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setHead&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置成 head, 旧的 head 出队&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// help GC&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">failed&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">interrupted&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shouldParkAfterFailedAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 锁已被其他线程获取, 会走到这里&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parkAndCheckInterrupt&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">interrupted&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">failed&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">cancelAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>acquireQueued for 循环退出两种情况&lt;span class="hx-absolute -hx-mt-20" id="acquirequeued-for-循环退出两种情况">&lt;/span>
&lt;a href="#acquirequeued-for-%e5%be%aa%e7%8e%af%e9%80%80%e5%87%ba%e4%b8%a4%e7%a7%8d%e6%83%85%e5%86%b5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>当前节点是等待队列第一个 &amp;amp;&amp;amp; tryAcquire 成功获取了锁&lt;/li>
&lt;li>tryAcquire 抛出了 Error, finally 的 failed 逻辑会执行 cancelAcquire&lt;/li>
&lt;/ol>
&lt;h5>acquireQueued 两轮循环分析&lt;span class="hx-absolute -hx-mt-20" id="acquirequeued-两轮循环分析">&lt;/span>
&lt;a href="#acquirequeued-%e4%b8%a4%e8%bd%ae%e5%be%aa%e7%8e%af%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/AQS-acquireQueuedPark.drawio.svg" alt="acquireQueued 两轮分析" loading="lazy" />&lt;/p>
&lt;h5>cancelAcquire 分析&lt;span class="hx-absolute -hx-mt-20" id="cancelacquire-分析">&lt;/span>
&lt;a href="#cancelacquire-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Cancels an ongoing attempt to acquire.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">cancelAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Ignore if node doesn&amp;#39;t exist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 取消线程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Skip cancelled predecessors 跳过取消的节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// predNext is the apparent node to unsplice. CASes below will&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// fail if not, in which case, we lost race vs another cancel&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// or signal, so no further action is necessary.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">predNext&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Can use unconditional write instead of CAS here.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// After this atomic step, other Nodes can skip past us.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Before, we are free of interference from other threads.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">CANCELLED&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// If we are the tail, remove ourselves. 队尾&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetTail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// expect update&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetNext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">predNext&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// node expect null&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// If successor needs signal, try to set pred&amp;#39;s next-link&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// so it will get one. Otherwise wake it up to propagate.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不是队尾，也就是等待队列的其他节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不是等待队列中第一个节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// pred.thread != null 表示前驱节点有线程在等待获取锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 取消节点有后继节点 next 且后继节点 waitStatus &amp;lt;= 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetNext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">predNext&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// pred 设置新的 next 节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 取消等待的节点是等待队列中的第一个节点, 叫醒后继节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unparkSuccessor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// help GC&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>if 为 true 判断分析&lt;span class="hx-absolute -hx-mt-20" id="if-为-true-判断分析">&lt;/span>
&lt;a href="#if-%e4%b8%ba-true-%e5%88%a4%e6%96%ad%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;blockquote>
&lt;p>为了将&lt;code>取消节点&lt;/code>的&lt;code>前驱节点&lt;/code>和&lt;code>取消节点&lt;/code>的&lt;code>后继节点&lt;/code>进行链接&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>pred != head 为 true 表示取消节点不是等待队列中第一个节点&lt;/li>
&lt;li>((ws = pred.waitStatus) == Node.SIGNAL || (ws &amp;lt;= 0 &amp;amp;&amp;amp; compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) 为 true
&lt;ol>
&lt;li>(ws = pred.waitStatus) == Node.SIGNAL 为 true, 前驱节点的 waitStatus 为 -1&lt;/li>
&lt;li>(ws &amp;lt;= 0 &amp;amp;&amp;amp; compareAndSetWaitStatus(pred, ws, Node.SIGNAL)) 为 true
&lt;ol>
&lt;li>ws &amp;lt;= 0 为 true, 前驱节点的 waitStatus 为 0, 那就 compareAndSetWaitStatus 前驱节点的 waitStatus 为 -1&lt;/li>
&lt;li>compareAndSetWaitStatus 返回为 true, 设置前驱节点的的 waitStatus 为 -1 成功&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>pred.thread != null 为 true 前驱节点有等待的线程&lt;/li>
&lt;/ol>
&lt;h4>shouldParkAfterFailedAcquire 分析&lt;span class="hx-absolute -hx-mt-20" id="shouldparkafterfailedacquire-分析">&lt;/span>
&lt;a href="#shouldparkafterfailedacquire-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>为即将被 block 的线程，设置前驱节点的 waitStatus 为 -1, 表示下一个节点需要被唤醒&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Checks and updates status for a node that failed to acquire.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Returns true if thread should block. This is the main signal
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * control in all acquire loops. Requires that pred == node.prev.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param pred node&amp;#39;s predecessor holding status
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return {@code true} if thread should block
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">shouldParkAfterFailedAcquire&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * This node has already set status asking a release
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * to signal it, so it can safely park.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 线程取消了获取锁, 找到一个没有取消的&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Predecessor was cancelled. Skip over predecessors and
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * indicate retry.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">do&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * waitStatus must be 0 or PROPAGATE. Indicate that we
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * need a signal, but don&amp;#39;t park yet. Caller will need to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * retry to make sure it cannot acquire before parking.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pred&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SIGNAL&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 设置前驱节点的 waitStatus 为 -1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>parkAndCheckInterrupt 分析&lt;span class="hx-absolute -hx-mt-20" id="parkandcheckinterrupt-分析">&lt;/span>
&lt;a href="#parkandcheckinterrupt-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>线程状态进入 waiting 的重要逻辑&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Convenience method to park and then check if interrupted
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return {@code true} if interrupted
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">parkAndCheckInterrupt&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LockSupport&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">park&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 调用线程执行到这里就不再继续向下执行了, 这是理解线程 waiting 的关键&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">interrupted&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 线程被唤醒后才会 return, 执行下一轮的 acquireQueued&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>FairSync.unlock 分析&lt;span class="hx-absolute -hx-mt-20" id="fairsyncunlock-分析">&lt;/span>
&lt;a href="#fairsyncunlock-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>release 分析&lt;span class="hx-absolute -hx-mt-20" id="release-分析">&lt;/span>
&lt;a href="#release-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Releases in exclusive mode. Implemented by unblocking one or
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * more threads if {@link #tryRelease} returns true.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * This method can be used to implement method {@link Lock#unlock}.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param arg the release argument. This value is conveyed to
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * {@link #tryRelease} but is otherwise uninterpreted and
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * can represent anything you like.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return the value returned from {@link #tryRelease}
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">release&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tryRelease&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 释放锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">head&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// waitStatus 为 -1, 表明下一个节点需要被唤醒&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unparkSuccessor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">h&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 唤醒 head 节点后的节点，也就是等待队列中第一个节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>tryRelease 分析&lt;span class="hx-absolute -hx-mt-20" id="tryrelease-分析">&lt;/span>
&lt;a href="#tryrelease-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>该方法可能抛出异常&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">protected&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">tryRelease&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getState&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">releases&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentThread&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getExclusiveOwnerThread&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 是不是持有该锁的线程在 release&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalMonitorStateException&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">free&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 已完全释放，因为可以重入&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">free&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setExclusiveOwnerThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">setState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// lock 设置成 unlock 状态，也就是 0，这就是所谓的释放锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">free&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>unparkSuccessor 分析&lt;span class="hx-absolute -hx-mt-20" id="unparksuccessor-分析">&lt;/span>
&lt;a href="#unparksuccessor-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div class="filename not-prose" dir="auto">AbstractOwnableSynchronizer.java&lt;/div>&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Wakes up node&amp;#39;s successor, if one exists.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param node the node
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">unparkSuccessor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * If status is negative (i.e., possibly needing signal) try
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * to clear in anticipation of signalling. It is OK if this
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * fails or if status is changed by waiting thread.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">compareAndSetWaitStatus&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ws&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Thread to unpark is held in successor, which is normally
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * just the next node. But if cancelled or apparently null,
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * traverse backwards from tail to find the actual
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * non-cancelled successor.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Node&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">tail&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">node&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">prev&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitStatus&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">LockSupport&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unpark&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">thread&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 唤醒这个线程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-8">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/AQS-acquireQueuedUnpark.drawio.svg" alt="acquireQueued 被 unpark 唤醒的线程继续执行的逻辑" loading="lazy" />&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://javadoop.com/post/AbstractQueuedSynchronizer" target="_blank" rel="noopener">https://javadoop.com/post/AbstractQueuedSynchronizer 强烈推荐&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java User Space Schedule</title><link>https://cloudedseal.github.io/blog/java-user-space-schedule/</link><pubDate>Mon, 10 Mar 2025 17:13:48 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-user-space-schedule/</guid><description>
&lt;blockquote>
&lt;p>A user-space scheduler manages tasks or &amp;ldquo;threads&amp;rdquo; entirely within an application, without relying on the operating system (OS) scheduler. This is different from kernel-level scheduling, where the OS manages threads.
什么是用户态调度？可以简单理解为自定义一堆任务, 由用户决定怎样执行这些任务。不涉及操作系统的进程/线程调度。&lt;/p>
&lt;/blockquote>
&lt;h1>举例理解&lt;/h1>&lt;h2>Task 自定义的任务&lt;span class="hx-absolute -hx-mt-20" id="task-自定义的任务">&lt;/span>
&lt;a href="#task-%e8%87%aa%e5%ae%9a%e4%b9%89%e7%9a%84%e4%bb%bb%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">steps&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">runStep&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Task is done&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; is running. Steps left: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">steps&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Task has more work&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>自定义的调度&lt;span class="hx-absolute -hx-mt-20" id="自定义的调度">&lt;/span>
&lt;a href="#%e8%87%aa%e5%ae%9a%e4%b9%89%e7%9a%84%e8%b0%83%e5%ba%a6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.LinkedList&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.Queue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">UserSpaceScheduler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 以 FIFO 顺序执行 Task&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Queue&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LinkedList&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hasMoreWork&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">runStep&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hasMoreWork&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// deciding which task runs next&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">taskQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Re-add to the queue if not done&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line hl">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Driver class&lt;span class="hx-absolute -hx-mt-20" id="driver-class">&lt;/span>
&lt;a href="#driver-class" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Main&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">UserSpaceScheduler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserSpaceScheduler&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Task A&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Task B&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">addTask&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Task&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Task C&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">scheduler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">run&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>如何工作&lt;span class="hx-absolute -hx-mt-20" id="如何工作">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%b7%a5%e4%bd%9c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>Cooperative Multitasking&lt;span class="hx-absolute -hx-mt-20" id="cooperative-multitasking">&lt;/span>
&lt;a href="#cooperative-multitasking" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>Tasks are not OS threads. They are objects managed in a queue.
不是 OS 的线程&lt;/p>
&lt;/blockquote>
&lt;h3>Explicit Yielding&lt;span class="hx-absolute -hx-mt-20" id="explicit-yielding">&lt;/span>
&lt;a href="#explicit-yielding" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>The scheduler runs each task for one &amp;ldquo;step,&amp;rdquo; then moves to the next. Tasks don’t block—they voluntarily give up control.&lt;/p>
&lt;/blockquote>
&lt;h3>No OS Involvement&lt;span class="hx-absolute -hx-mt-20" id="no-os-involvement">&lt;/span>
&lt;a href="#no-os-involvement" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>The OS sees only the main thread running scheduler.run().&lt;/p>
&lt;/blockquote></description></item><item><title>Learn Llm</title><link>https://cloudedseal.github.io/blog/learn-llm/</link><pubDate>Mon, 17 Feb 2025 17:10:17 +0800</pubDate><guid>https://cloudedseal.github.io/blog/learn-llm/</guid><description>
&lt;h1>pre-training&lt;/h1>&lt;p>&lt;a href="https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1" target="_blank" rel="noopener">https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1&lt;/a>&lt;/p>
&lt;p>100000 symbols(tokens)
raw text &amp;mdash;&amp;gt;tokenization &amp;mdash;&amp;gt; token&lt;/p>
&lt;h2>tokenization&lt;span class="hx-absolute -hx-mt-20" id="tokenization">&lt;/span>
&lt;a href="#tokenization" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;a href="https://tiktokenizer.vercel.app/?model=cl100k_base" target="_blank" rel="noopener">https://tiktokenizer.vercel.app/?model=cl100k_base&lt;/a>&lt;/p>
&lt;h2>statistic token simulator&lt;span class="hx-absolute -hx-mt-20" id="statistic-token-simulator">&lt;/span>
&lt;a href="#statistic-token-simulator" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>这就是所谓的 prediction
参数 各个 token 的权重
模型有大量的知识，存储在上亿的参数之中。这些参数可以视为对超大规模的知识进行的一种有损压缩。超大规模知识的模糊记忆。
按照统计规律给出所谓的答案
模型需要中间结果
概率、统计
in-context learning&lt;/p>
&lt;h1>post-training&lt;/h1>&lt;p>对话集结构 &amp;mdash;&amp;gt; 一维 token 序列
&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/conversation-structure-to-token-sequence.png" alt="conversation-structure-to-token-sequence" loading="lazy" />&lt;/p>
&lt;p>instruct-gpt&lt;/p>
&lt;p>强化学习
reinforcement learning
监督学习
supervised earning
supervised-fine-tuning&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://weibo.com/2194035935/PefWkzTkK#attitude" target="_blank" rel="noopener">视频讲解&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tiktokenizer.vercel.app/" target="_blank" rel="noopener">https://tiktokenizer.vercel.app/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bbycroft.net/llm" target="_blank" rel="noopener">https://bbycroft.net/llm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hyperbolic.xyz/" target="_blank" rel="noopener">https://hyperbolic.xyz/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://atlas.nomic.ai/map/0ce65783-c3a9-40b5-895d-384933f50081/a7b46301-022f-45d8-bbf4-98107eabdbac" target="_blank" rel="noopener">对话数据集&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://huggingface.co/spaces/HuggingFaceFW/blogpost-fineweb-v1" target="_blank" rel="noopener">互联网数据集&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Cache Miss Anomaly</title><link>https://cloudedseal.github.io/blog/cache-miss-anomaly/</link><pubDate>Thu, 13 Feb 2025 16:25:17 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cache-miss-anomaly/</guid><description>
&lt;h1>缓存 miss 类型&lt;/h1>&lt;h2>compulsory miss&lt;span class="hx-absolute -hx-mt-20" id="compulsory-miss">&lt;/span>
&lt;a href="#compulsory-miss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>一开始缓存里啥都没有，cold-start miss&lt;/p>
&lt;/blockquote>
&lt;h2>capacity miss&lt;span class="hx-absolute -hx-mt-20" id="capacity-miss">&lt;/span>
&lt;a href="#capacity-miss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>缓存容量有限，需要 evict 一些页&lt;/p>
&lt;/blockquote>
&lt;h2>conflict miss&lt;span class="hx-absolute -hx-mt-20" id="conflict-miss">&lt;/span>
&lt;a href="#conflict-miss" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>cpu cache 的 set-associativity 的缓存行&lt;/p>
&lt;/blockquote>
&lt;h1>缓存越大，命中率就越高么？不是的&lt;/h1>&lt;blockquote>
&lt;p>1, 2, 3, 4, 1, 2, 5, 1, 2, 3, 4, 5
采用 FIFO 的 swap 策略。容量为 3 的缓存，比容量为 4 的缓存命中率更高&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.concurrent.ArrayBlockingQueue&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">CacheFifo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calculateCacheHit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">calculateCacheHit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">calculateCacheHit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cacheSize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;缓存页: &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayBlockingQueue&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayBlockingQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cacheSize&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cacheSize&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toArray&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">poll&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">offer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">page&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toArray&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;cache miss:&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;total :&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;cache hit:&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">dumpArray&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; &amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nl">缓存页&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">9&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">25&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nl">缓存页&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">miss&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">total&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">16666666666666663&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://pages.cs.wisc.edu/~remzi/OSTEP/vm-beyondphys-policy.pdf" target="_blank" rel="noopener">https://pages.cs.wisc.edu/~remzi/OSTEP/vm-beyondphys-policy.pdf&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>lsof examples</title><link>https://cloudedseal.github.io/blog/cmd-lsof/</link><pubDate>Fri, 10 Jan 2025 17:31:17 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cmd-lsof/</guid><description>
&lt;h2>通用&lt;span class="hx-absolute -hx-mt-20" id="通用">&lt;/span>
&lt;a href="#%e9%80%9a%e7%94%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>^ 表示非&lt;/li>
&lt;li>多个值是 &lt;code>CSV&lt;/code> 形式&lt;/li>
&lt;/ol>
&lt;h2>lsof -i(internet)&lt;span class="hx-absolute -hx-mt-20" id="lsof--iinternet">&lt;/span>
&lt;a href="#lsof--iinternet" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-i 后可以有空格
[46][protocol][@hostname|hostaddr][:service|port]&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;code>46&lt;/code> specifies the IP version, IPv4 or IPv6 that applies to the following address.&amp;lsquo;6&amp;rsquo; may be be specified only if the UNIX dialect supports IPv6. If neither &amp;lsquo;4&amp;rsquo; nor &amp;lsquo;6&amp;rsquo; is specified, the following address applies to all IP versions.&lt;/li>
&lt;li>&lt;code>protocol&lt;/code> is a protocol name - TCP, UDP&lt;/li>
&lt;li>&lt;code>hostname&lt;/code> is an Internet host name. Unless a specific IP version is specified, open network files associated with host names of all versions will be selected.&lt;/li>
&lt;li>&lt;code>hostaddr&lt;/code> is a numeric Internet IPv4 address in dot form; or an IPv6 numeric address in colon form enclosed in brackets, if the UNIX dialect supports IPv6. When an IP version is selected, only its numeric addresses may be specified.&lt;/li>
&lt;li>&lt;code>service&lt;/code> is an /etc/services name - e.g., smtp -or a list of them.&lt;/li>
&lt;li>&lt;code>port&lt;/code> is a port number, or a list of them.&lt;/li>
&lt;/ol>
&lt;h3>lsof &lt;code>-i&lt;/code>@10.10.129.99:8080&lt;span class="hx-absolute -hx-mt-20" id="lsof--i1010129998080">&lt;/span>
&lt;a href="#lsof--i1010129998080" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>lsof &lt;code>-i&lt;/code>4tcp&lt;span class="hx-absolute -hx-mt-20" id="lsof--i4tcp">&lt;/span>
&lt;a href="#lsof--i4tcp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all ipv4 tcp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>4udp&lt;span class="hx-absolute -hx-mt-20" id="lsof--i4udp">&lt;/span>
&lt;a href="#lsof--i4udp" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all ipv4 udp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>4udp@localhost&lt;span class="hx-absolute -hx-mt-20" id="lsof--i4udplocalhost">&lt;/span>
&lt;a href="#lsof--i4udplocalhost" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all localhost ipv4 udp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>&lt;a href="mailto:4tcp@10.10.129.99" >4tcp@10.10.129.99&lt;/a>&lt;span class="hx-absolute -hx-mt-20" id="lsof--i">&lt;/span>
&lt;a href="#lsof--i" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>all 10.10.129.99 tcp&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code> :ssh&lt;span class="hx-absolute -hx-mt-20" id="lsof--i-ssh">&lt;/span>
&lt;a href="#lsof--i-ssh" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>service ssh&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>:22&lt;span class="hx-absolute -hx-mt-20" id="lsof--i22">&lt;/span>
&lt;a href="#lsof--i22" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>port 22&lt;/p>
&lt;/blockquote>
&lt;h3>lsof &lt;code>-i&lt;/code>TCP -sTCP:LISTEN&lt;span class="hx-absolute -hx-mt-20" id="lsof--itcp--stcplisten">&lt;/span>
&lt;a href="#lsof--itcp--stcplisten" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>tcp state Listen&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-p&lt;/code> pid&lt;span class="hx-absolute -hx-mt-20" id="lsof--p-pid">&lt;/span>
&lt;a href="#lsof--p-pid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>by pid&lt;/p>
&lt;/blockquote>
&lt;h2>lsof /test.sock&lt;span class="hx-absolute -hx-mt-20" id="lsof-testsock">&lt;/span>
&lt;a href="#lsof-testsock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>lsof &lt;code>-t&lt;/code> /test.sock&lt;span class="hx-absolute -hx-mt-20" id="lsof--t-testsock">&lt;/span>
&lt;a href="#lsof--t-testsock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-t(terse) 简要的 get pid&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-c&lt;/code> &lt;code>^&lt;/code>java&lt;span class="hx-absolute -hx-mt-20" id="lsof--c-java">&lt;/span>
&lt;a href="#lsof--c-java" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>找到以非 java 命令(command)开始的&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-c&lt;/code> java&lt;span class="hx-absolute -hx-mt-20" id="lsof--c-java-1">&lt;/span>
&lt;a href="#lsof--c-java-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>找到以 java 命令(command)开始的&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>+d&lt;/code> /dir&lt;span class="hx-absolute -hx-mt-20" id="lsof-d-dir">&lt;/span>
&lt;a href="#lsof-d-dir" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>该 /dir目录(directory) 下所有&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-d&lt;/code> 1&lt;span class="hx-absolute -hx-mt-20" id="lsof--d-1">&lt;/span>
&lt;a href="#lsof--d-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>查看 descriptor = 1(标准输出)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-d&lt;/code> 1,2&lt;span class="hx-absolute -hx-mt-20" id="lsof--d-12">&lt;/span>
&lt;a href="#lsof--d-12" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>查看 descriptor = 1,2(标准输出、标准错误)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-a&lt;/code> &lt;code>-c&lt;/code> java &lt;code>-d&lt;/code> 3-10&lt;span class="hx-absolute -hx-mt-20" id="lsof--a--c-java--d-3-10">&lt;/span>
&lt;a href="#lsof--a--c-java--d-3-10" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>条件组合查询 -a(and) -c(command) -d(范围)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-u&lt;/code> root&lt;span class="hx-absolute -hx-mt-20" id="lsof--u-root">&lt;/span>
&lt;a href="#lsof--u-root" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>该 root 下所有 -u(user)&lt;/p>
&lt;/blockquote>
&lt;h2>lsof &lt;code>-U&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="lsof--u">&lt;/span>
&lt;a href="#lsof--u" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-U(Unix domain socket)&lt;/p>
&lt;/blockquote></description></item><item><title>Master Iptables</title><link>https://cloudedseal.github.io/blog/master-iptables/</link><pubDate>Tue, 07 Jan 2025 11:15:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-iptables/</guid><description>
&lt;h1>数据包&lt;/h1>&lt;ol>
&lt;li>接收&lt;/li>
&lt;li>发送&lt;/li>
&lt;li>转发 &lt;code>路由器&lt;/code>&lt;/li>
&lt;/ol>
&lt;h1>iptables 三要素&lt;/h1>&lt;h2>table&lt;span class="hx-absolute -hx-mt-20" id="table">&lt;/span>
&lt;a href="#table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>tables allow you to do very &lt;code>specific things&lt;/code> with packets. 对数据包做特定的处理&lt;/p>
&lt;/blockquote>
&lt;h3>filter table &lt;code>default&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="filter-table-default">&lt;/span>
&lt;a href="#filter-table-default" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>mangle table&lt;span class="hx-absolute -hx-mt-20" id="mangle-table">&lt;/span>
&lt;a href="#mangle-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>nat table&lt;span class="hx-absolute -hx-mt-20" id="nat-table">&lt;/span>
&lt;a href="#nat-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>raw table&lt;span class="hx-absolute -hx-mt-20" id="raw-table">&lt;/span>
&lt;a href="#raw-table" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>chain&lt;span class="hx-absolute -hx-mt-20" id="chain">&lt;/span>
&lt;a href="#chain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>each of these tables are &lt;code>composed of a few default chains&lt;/code>. These chains allow you to &lt;code>filter&lt;/code> packets at &lt;code>various points&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;h3>PREROUTING&lt;span class="hx-absolute -hx-mt-20" id="prerouting">&lt;/span>
&lt;a href="#prerouting" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>INPUT&lt;span class="hx-absolute -hx-mt-20" id="input">&lt;/span>
&lt;a href="#input" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>OUTPUT&lt;span class="hx-absolute -hx-mt-20" id="output">&lt;/span>
&lt;a href="#output" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>FORWARD&lt;span class="hx-absolute -hx-mt-20" id="forward">&lt;/span>
&lt;a href="#forward" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>POSTROUTING&lt;span class="hx-absolute -hx-mt-20" id="postrouting">&lt;/span>
&lt;a href="#postrouting" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>target&lt;span class="hx-absolute -hx-mt-20" id="target">&lt;/span>
&lt;a href="#target" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>terminating target&lt;span class="hx-absolute -hx-mt-20" id="terminating-target">&lt;/span>
&lt;a href="#terminating-target" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>一旦匹配立刻决定一个网络包的最终命运。如 &lt;code>ACCEPT&lt;/code>,&lt;code>DROP&lt;/code>,&lt;code>REJECT&lt;/code>&lt;/li>
&lt;li>chain 上的 target 依次匹配, 一旦匹配就执行关联的操作。匹配不到执行默认的 target&lt;/li>
&lt;li>可以配置 default policy, 也是一个 target&lt;/li>
&lt;li>所有 chain 的 default policy 是 &lt;code>ACCEPT&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3>non-terminating target&lt;span class="hx-absolute -hx-mt-20" id="non-terminating-target">&lt;/span>
&lt;a href="#non-terminating-target" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>如 &lt;code>LOG&lt;/code> 记录 kernel 日志&lt;/li>
&lt;/ol>
&lt;h2>iptables examples&lt;span class="hx-absolute -hx-mt-20" id="iptables-examples">&lt;/span>
&lt;a href="#iptables-examples" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>-t 不指定，默认是 filter table. 为啥? filter 常用呗&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>N&lt;/em>ew-chain
&lt;em>X&lt;/em>delete-chain
&lt;em>L&lt;/em>ist
&lt;em>I&lt;/em>nsert
&lt;em>A&lt;/em>ppend
&lt;em>D&lt;/em>elete
&lt;em>R&lt;/em>eplace
&lt;em>F&lt;/em>lush
&lt;em>P&lt;/em>olicy
&lt;em>j&lt;/em>ump
&lt;em>m&lt;/em>atch &lt;em>m&lt;/em>odule
&lt;em>s&lt;/em>ource
&lt;em>d&lt;/em>estination
&lt;em>n&lt;/em>umeric 不进行 reverse dns lookup
&lt;em>p&lt;/em>rotocol
&lt;em>i&lt;/em>nput interface
&lt;em>o&lt;/em>nput interface&lt;/p>
&lt;h3>list rules&lt;span class="hx-absolute -hx-mt-20" id="list-rules">&lt;/span>
&lt;a href="#list-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>
&lt;p>iptables -L &amp;ndash;line-numbers&lt;/p>
&lt;/li>
&lt;li>
&lt;p>iptables -A INPUT -p tcp &amp;ndash;dport 22 -j LOG&lt;/p>
&lt;/li>
&lt;li>
&lt;p>iptables -D INPUT -p tcp &amp;ndash;dport 22 -j LOG&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3>append rules&lt;span class="hx-absolute -hx-mt-20" id="append-rules">&lt;/span>
&lt;a href="#append-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables &lt;code>-A&lt;/code> INPUT -s 221.194.47.0/24 -j REJECT&lt;/li>
&lt;/ol>
&lt;h3>delete rules&lt;span class="hx-absolute -hx-mt-20" id="delete-rules">&lt;/span>
&lt;a href="#delete-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables &lt;code>-D&lt;/code> INPUT -s 221.194.47.0/24 -j REJECT&lt;/li>
&lt;li>iptables -D INPUT &lt;code>12&lt;/code>&lt;/li>
&lt;li>iptables -D INPUT &lt;code>9&lt;/code>&lt;/li>
&lt;li>iptables -F&lt;/li>
&lt;li>iptables -F INPUT&lt;/li>
&lt;/ol>
&lt;h3>insert/replace rules&lt;span class="hx-absolute -hx-mt-20" id="insertreplace-rules">&lt;/span>
&lt;a href="#insertreplace-rules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -I INPUT 1 -s 114.114.114.114 -j ACCEPT&lt;/li>
&lt;li>iptables -R INPUT 1 -s 59.45.175.10 -J ACCEPT&lt;/li>
&lt;/ol>
&lt;h3>protocals/modules&lt;span class="hx-absolute -hx-mt-20" id="protocalsmodules">&lt;/span>
&lt;a href="#protocalsmodules" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -A INPUT -p tcp -m tcp -dport 22 -s 59.45.175.0/24 -j DROP&lt;/li>
&lt;li>iptables -A INPUT -p tcp -m multiport -dports 22,49101 -s 59.45.175.0/24 -j DROP&lt;/li>
&lt;li>iptables -A input -p icmp -m icmp -icmp-type 17 -j DROP&lt;/li>
&lt;/ol>
&lt;h3>connection tracking module&lt;span class="hx-absolute -hx-mt-20" id="connection-tracking-module">&lt;/span>
&lt;a href="#connection-tracking-module" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>change default policy&lt;span class="hx-absolute -hx-mt-20" id="change-default-policy">&lt;/span>
&lt;a href="#change-default-policy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -P INPUT DROP&lt;/li>
&lt;li>iptables -t nat -P INPUT DROP&lt;/li>
&lt;/ol>
&lt;h3>custom chain&lt;span class="hx-absolute -hx-mt-20" id="custom-chain">&lt;/span>
&lt;a href="#custom-chain" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>iptables -N ssh-rules&lt;/li>
&lt;li>iptables -A ssh-rules -s 18.130.0.0./16 -j ACCEPT&lt;/li>
&lt;li>iptables -A ssh-rules -s 18.11.0.0/16 -j ACCEPT&lt;/li>
&lt;li>iptables -A ssh-rules -j DROP&lt;/li>
&lt;li>iptables -A INPUT -p tcp -m tcp &amp;ndash;dport 22 -j &lt;code>ssh-rules&lt;/code>&lt;/li>
&lt;/ol>
&lt;h2>默认的 iptables 配置&lt;span class="hx-absolute -hx-mt-20" id="默认的-iptables-配置">&lt;/span>
&lt;a href="#%e9%bb%98%e8%ae%a4%e7%9a%84-iptables-%e9%85%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>所有 chain 的默认 policy 都是 ACCEPT&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t filter -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain INPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain FORWARD &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t nat -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain PREROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain INPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain POSTROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t mangle -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain PREROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain INPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain FORWARD &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain POSTROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@node96 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables -t raw -L -n --line-numbers&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain PREROUTING &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Chain OUTPUT &lt;span class="o">(&lt;/span>policy ACCEPT&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">num target prot opt &lt;span class="nb">source&lt;/span> destination &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.booleanworld.com/depth-guide-iptables-linux-firewall/" target="_blank" rel="noopener">depth-guide-iptables-linux-firewall-强烈推荐&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/O084fYzUFk7jAzJ2DDeADg" target="_blank" rel="noopener">iptables-解析&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/iptables.8.html" target="_blank" rel="noopener">iptables&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man8/iptables-extensions.8.html" target="_blank" rel="noopener">iptables-extensions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.linode.com/docs/guides/linux-router-and-ip-forwarding/#enable-ip-forwarding" target="_blank" rel="noopener">ip-forward&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://manned.org/iptables" target="_blank" rel="noopener">https://manned.org/iptables&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>My Source List</title><link>https://cloudedseal.github.io/blog/my-source-list/</link><pubDate>Mon, 06 Jan 2025 11:25:58 +0800</pubDate><guid>https://cloudedseal.github.io/blog/my-source-list/</guid><description>
&lt;ol>
&lt;li>&lt;a href="https://arthurchiao.art/" target="_blank" rel="noopener">https://arthurchiao.art/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://alexanderell.is/posts/" target="_blank" rel="noopener">https://alexanderell.is/posts/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.ryanlevick.com/" target="_blank" rel="noopener">https://blog.ryanlevick.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://brennan.io/blog/" target="_blank" rel="noopener">https://brennan.io/blog/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bhoot.dev/" target="_blank" rel="noopener">https://bhoot.dev/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://chsasank.com/" target="_blank" rel="noopener">https://chsasank.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codewords.recurse.com/about" target="_blank" rel="noopener">https://codewords.recurse.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://crockford.com/blog.html" target="_blank" rel="noopener">https://crockford.com/blog.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://devconnected.com/" target="_blank" rel="noopener">https://devconnected.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://joearms.github.io/#Index" target="_blank" rel="noopener">https://joearms.github.io/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jitwxs.cn/" target="_blank" rel="noopener">https://jitwxs.cn/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kiosk007.top/" target="_blank" rel="noopener">https://kiosk007.top/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://kunststube.net/" target="_blank" rel="noopener">https://kunststube.net/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/" target="_blank" rel="noopener">https://linuxize.com/post/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matt.might.net/" target="_blank" rel="noopener">https://matt.might.net/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.marcobehler.com/" target="_blank" rel="noopener">https://www.marcobehler.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://natanyellin.com/posts/" target="_blank" rel="noopener">https://natanyellin.com/posts/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://robertovitillo.com/blog" target="_blank" rel="noopener">https://robertovitillo.com/blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://research.swtch.com/" target="_blank" rel="noopener">https://research.swtch.com/ Russ Cox&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://strikefreedom.top/" target="_blank" rel="noopener">https://strikefreedom.top/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://serhack.me/blog/" target="_blank" rel="noopener">https://serhack.me/blog/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.0xffffff.org/" target="_blank" rel="noopener">https://www.0xffffff.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.booleanworld.com/" target="_blank" rel="noopener">https://www.booleanworld.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jmeiners.com" target="_blank" rel="noopener">https://www.jmeiners.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.timdbg.com/" target="_blank" rel="noopener">https://www.timdbg.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.taniarascia.com/" target="_blank" rel="noopener">https://www.taniarascia.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://manybutfinite.com/archives/" target="_blank" rel="noopener">https://manybutfinite.com/archives/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hutusi.com/" target="_blank" rel="noopener">胡涂说&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.qiufeng.blue/" target="_blank" rel="noopener">秋风的笔记&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zsythink.net/" target="_blank" rel="noopener">朱双印&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://shuyi.tech/" target="_blank" rel="noopener">陈树义&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Null Device</title><link>https://cloudedseal.github.io/blog/null-device/</link><pubDate>Fri, 03 Jan 2025 10:53:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/null-device/</guid><description>
&lt;h1>NULL device 是啥？&lt;/h1>&lt;p>The null device is a special file that &lt;code>discards&lt;/code> all data written to it, but reports that the &lt;code>write operation succeeded&lt;/code>.&lt;/p>
&lt;h1>用在何处？&lt;/h1>&lt;blockquote>
&lt;p>java 执行外部的命令, 但是不需要外部命令的执行结果. 直接丢弃 stdout, stderr.&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DiscardProcessOutput&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Create the ProcessBuilder with the command to run&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ProcessBuilder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ProcessBuilder&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;someCommand&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Merge stdout and stderr and redirect them to /dev/null (or NUL in Windows)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">redirectErrorStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;os.name&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Windows&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">redirectOutput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;NUL&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">redirectOutput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;/dev/null&amp;#34;&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Start the process&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Process&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">process&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">processBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Wait for the process to finish&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exitCode&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">waitFor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Process exited with code: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">exitCode&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">printStackTrace&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.putorius.net/introduction-to-dev-null.html" target="_blank" rel="noopener">dev-null&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ss64.com/nt/nul.html" target="_blank" rel="noopener">windows-NUL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man4/null.4.html" target="_blank" rel="noopener">man7 /dev/null&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/313111/is-there-a-dev-null-on-windows" target="_blank" rel="noopener">NUL in Windows seems to be actually a virtual path in any folder&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Ipc Unix Domain Socket</title><link>https://cloudedseal.github.io/blog/ipc-unix-domain-socket/</link><pubDate>Tue, 23 Jul 2024 15:00:13 +0800</pubDate><guid>https://cloudedseal.github.io/blog/ipc-unix-domain-socket/</guid><description>
&lt;h1>unix domain socket 是啥?&lt;/h1>&lt;blockquote>
&lt;p>A &lt;code>Unix domain socket (UDS)&lt;/code> or &lt;code>IPC socket&lt;/code> (inter-process communication) is a data communications &lt;code>endpoint&lt;/code> for exchanging data between processes executing on the &lt;code>same&lt;/code> host operating system.
同一台机器两个不同的进程之间交换数据，优化过的 socket。&lt;/p>
&lt;/blockquote>
&lt;h1>问题背景&lt;/h1>&lt;blockquote>
&lt;p>java 写的程序需要和 c 写的程序交换数据，且两个程序运行在同一台机器上。&lt;/p>
&lt;/blockquote>
&lt;h1>gradle 配置&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-groovy" data-lang="groovy">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// https://mvnrepository.com/artifact/com.kohlschutter.junixsocket/junixsocket-native-common
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span> &lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;com.kohlschutter.junixsocket&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">name:&lt;/span> &lt;span class="s1">&amp;#39;junixsocket-native-common&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">version:&lt;/span> &lt;span class="s1">&amp;#39;2.9.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// https://mvnrepository.com/artifact/com.kohlschutter.junixsocket/junixsocket-common
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">implementation&lt;/span> &lt;span class="nl">group:&lt;/span> &lt;span class="s1">&amp;#39;com.kohlschutter.junixsocket&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">name:&lt;/span> &lt;span class="s1">&amp;#39;junixsocket-common&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nl">version:&lt;/span> &lt;span class="s1">&amp;#39;2.9.1&amp;#39;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>java 服务端程序示例&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.newsclub.net.unix.AFUNIXServerSocket&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.newsclub.net.unix.AFUNIXSocket&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.newsclub.net.unix.AFUNIXSocketAddress&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.slf4j.Logger&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">org.slf4j.LoggerFactory&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.charset.StandardCharsets&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Files&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Path&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.nio.file.Paths&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * unix domain socket 进程通信
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nd">@SuppressWarnings&lt;/span>&lt;span class="p">({&lt;/span>&lt;span class="s">&amp;#34;CatchAndPrintStackTrace&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="cm">/* errorprone */&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;PMD.CognitiveComplexity&amp;#34;&lt;/span>&lt;span class="p">})&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MsgServer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Runnable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user.home&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;ipc.sock&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Logger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">LoggerFactory&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLogger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MsgServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">startServer&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Paths&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;UDS path: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Files&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">exists&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Files&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">delete&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">socketFile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">File&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AFUNIXServerSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AFUNIXServerSocket&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newInstance&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setReuseAddress&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">bind&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AFUNIXSocketAddress&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">of&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socketFile&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;MsgServer 监听 socket: {}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">interrupted&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isClosed&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Waiting for connection...&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">AFUNIXSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">accept&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ClientHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;msg-receiver&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;server.accept() 出错&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;MsgServer terminated&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">startServer&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;启动 MsgServer 失败&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 处理连接,以接收 utf-8 字符串为例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ClientHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Runnable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">AFUNIXSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">ClientHandler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AFUNIXSocket&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">InputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getInputStream&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OutputStream&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getOutputStream&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PrintWriter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PrintWriter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">os&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BufferedReader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">BufferedReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InputStreamReader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">StandardCharsets&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">UTF_8&lt;/span>&lt;span class="p">)))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">readLine&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">equalsIgnoreCase&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;bye&amp;#34;&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">info&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">handleMsg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">line&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received successfully&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">flush&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;客户端关闭了连接&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">close&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">logger&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;关闭连接出错&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handleMsg&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// process receive string msg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>C 客户端程序示例&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/socket.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/un.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;unistd.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define SOCKET_PATH &amp;#34;/path/to/ipc.sock&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">client_fd&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr_un&lt;/span> &lt;span class="n">addr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">message&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Hello from 中国!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Create a socket
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">client_fd&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">AF_UNIX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SOCK_STREAM&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;socket error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Set up the address structure
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">memset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr_un&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">addr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sun_family&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AF_UNIX&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">strncpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sun_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SOCKET_PATH&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">sun_path&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Connect to the server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">addr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="n">sockaddr_un&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;connect error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Send a message to the server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">strlen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;write error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Receive a response from the server
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">buffer&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">perror&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;read error&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">EXIT_FAILURE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Received response: %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">buffer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client_fd&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/kohlschutter/junixsocket" target="_blank" rel="noopener">junixsocket&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Unix_domain_socket" target="_blank" rel="noopener">Unix_domain_socket&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Master Elf</title><link>https://cloudedseal.github.io/blog/master-elf/</link><pubDate>Thu, 30 May 2024 15:29:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-elf/</guid><description>
&lt;h2>hello world&lt;span class="hx-absolute -hx-mt-20" id="hello-world">&lt;/span>
&lt;a href="#hello-world" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello world&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>gcc &amp;ndash;save-temps -o hello hello.c&lt;/p>
&lt;/blockquote>
&lt;h2>&lt;strong>What is ELF?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="what-is-elf">&lt;/span>
&lt;a href="#what-is-elf" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>ELF (Executable and Linkable Format) is a &lt;strong>standardized binary format&lt;/strong> for storing compiled programs, libraries, and other binaries on Unix-like systems (e.g., Linux). It defines how machine code, data, symbols, relocation information, and metadata are organized in files like:&lt;/p>
&lt;ul>
&lt;li>Executables (&lt;code>./hello&lt;/code>)&lt;/li>
&lt;li>Object files (&lt;code>hello.o&lt;/code>)&lt;/li>
&lt;li>Shared libraries (&lt;code>.so&lt;/code>)&lt;/li>
&lt;li>Core dumps&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>&lt;strong>ELF File Structure&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="elf-file-structure">&lt;/span>
&lt;a href="#elf-file-structure" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>An ELF file has two primary views:&lt;/p>
&lt;h3>&lt;strong>Linking View (Sections)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="linking-view-sections">&lt;/span>
&lt;a href="#linking-view-sections" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Used during &lt;code>compilation/linking&lt;/code> to combine object files.&lt;/li>
&lt;li>Contains &lt;strong>section headers&lt;/strong> describing discrete parts of the file.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Execution View (Segments)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="execution-view-segments">&lt;/span>
&lt;a href="#execution-view-segments" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Used at &lt;code>runtime&lt;/code> to load the program into memory.&lt;/li>
&lt;li>Contains &lt;strong>program headers&lt;/strong> mapping sections to memory segments.&lt;/li>
&lt;/ul>
&lt;h2>Key Components&lt;span class="hx-absolute -hx-mt-20" id="key-components">&lt;/span>
&lt;a href="#key-components" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Component&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>ELF Header&lt;/strong>&lt;/td>
&lt;td>Metadata about the file (architecture, type, entry point, etc.).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Program Headers&lt;/strong>&lt;/td>
&lt;td>Describe how to map segments to memory (used by the OS at runtime).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Section Headers&lt;/strong>&lt;/td>
&lt;td>List all sections (code, data, symbols, relocations, debug info, etc.).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Sections&lt;/strong>&lt;/td>
&lt;td>Logical units like &lt;code>.text&lt;/code> (code), &lt;code>.data&lt;/code> (initialized variables), etc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Segments&lt;/strong>&lt;/td>
&lt;td>Physical chunks mapped into memory (e.g., &lt;code>LOAD&lt;/code>, &lt;code>DYNAMIC&lt;/code>, &lt;code>STACK&lt;/code>).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2>&lt;strong>ELF File Layout&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="elf-file-layout">&lt;/span>
&lt;a href="#elf-file-layout" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>&amp;#43;---------------------&amp;#43;
| ELF Header | ← Fixed-size metadata at file offset 0
&amp;#43;---------------------&amp;#43;
| Program Headers | ← Describes segments (for runtime)
&amp;#43;---------------------&amp;#43;
| Section 1 (.text) | ← Machine code
&amp;#43;---------------------&amp;#43;
| Section 2 (.data) | ← Initialized global/static variables
&amp;#43;---------------------&amp;#43;
| ... |
&amp;#43;---------------------&amp;#43;
| Section Headers | ← Table listing all sections
&amp;#43;---------------------&amp;#43;&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h2>&lt;strong>Key ELf Concepts&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-elf-concepts">&lt;/span>
&lt;a href="#key-elf-concepts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>&lt;strong>ELF Header&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="elf-header">&lt;/span>
&lt;a href="#elf-header" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Use &lt;code>readelf -h hello&lt;/code> to see:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ELF Header:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Magic: 7f &lt;span class="m">45&lt;/span> 4c &lt;span class="m">46&lt;/span> &lt;span class="m">02&lt;/span> &lt;span class="m">01&lt;/span> &lt;span class="m">01&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span> &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Class: ELF64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Data: 2&lt;span class="err">&amp;#39;&lt;/span>s complement, little endian
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>current&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> OS/ABI: UNIX - System V
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ABI Version: &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Type: DYN &lt;span class="o">(&lt;/span>Position-Independent Executable file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Machine: Advanced Micro Devices X86-64
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Entry point address: 0x1060
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start of program headers: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes into file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Start of section headers: &lt;span class="m">13976&lt;/span> &lt;span class="o">(&lt;/span>bytes into file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Flags: 0x0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of this header: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of program headers: &lt;span class="m">56&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of program headers: &lt;span class="m">13&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size of section headers: &lt;span class="m">64&lt;/span> &lt;span class="o">(&lt;/span>bytes&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Number of section headers: &lt;span class="m">31&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Section header string table index: &lt;span class="m">30&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Program Headers (Segments)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="program-headers-segments">&lt;/span>
&lt;a href="#program-headers-segments" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Use &lt;code>readelf -l hello&lt;/code> to see:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Elf file &lt;span class="nb">type&lt;/span> is DYN &lt;span class="o">(&lt;/span>Position-Independent Executable file&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Entry point 0x1060
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">There are &lt;span class="m">13&lt;/span> program headers, starting at offset &lt;span class="m">64&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Program Headers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Type Offset VirtAddr PhysAddr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> FileSiz MemSiz Flags Align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> PHDR 0x0000000000000040 0x0000000000000040 0x0000000000000040
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x00000000000002d8 0x00000000000002d8 R 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> INTERP 0x0000000000000318 0x0000000000000318 0x0000000000000318
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x000000000000001c 0x000000000000001c R 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>Requesting program interpreter: /lib64/ld-linux-x86-64.so.2&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000000000 0x0000000000000000 0x0000000000000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000628 0x0000000000000628 R 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000001000 0x0000000000001000 0x0000000000001000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000175 0x0000000000000175 R E 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000002000 0x0000000000002000 0x0000000000002000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x00000000000000f4 0x00000000000000f4 R 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> LOAD 0x0000000000002db8 0x0000000000003db8 0x0000000000003db8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000258 0x0000000000000260 RW 0x1000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DYNAMIC 0x0000000000002dc8 0x0000000000003dc8 0x0000000000003dc8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x00000000000001f0 0x00000000000001f0 RW 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOTE 0x0000000000000338 0x0000000000000338 0x0000000000000338
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000030 0x0000000000000030 R 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> NOTE 0x0000000000000368 0x0000000000000368 0x0000000000000368
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000044 0x0000000000000044 R 0x4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_PROPERTY 0x0000000000000338 0x0000000000000338 0x0000000000000338
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000030 0x0000000000000030 R 0x8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_EH_FRAME 0x0000000000002010 0x0000000000002010 0x0000000000002010
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000034 0x0000000000000034 R 0x4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_STACK 0x0000000000000000 0x0000000000000000 0x0000000000000000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000000 0x0000000000000000 RW 0x10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> GNU_RELRO 0x0000000000002db8 0x0000000000003db8 0x0000000000003db8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 0x0000000000000248 0x0000000000000248 R 0x1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Section to Segment mapping:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Segment Sections...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">00&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">01&lt;/span> .interp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">02&lt;/span> .interp .note.gnu.property .note.gnu.build-id .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">03&lt;/span> .init .plt .plt.got .plt.sec .text .fini
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">04&lt;/span> .rodata .eh_frame_hdr .eh_frame
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">05&lt;/span> .init_array .fini_array .dynamic .got .data .bss
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">06&lt;/span> .dynamic
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">07&lt;/span> .note.gnu.property
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">08&lt;/span> .note.gnu.build-id .note.ABI-tag
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">09&lt;/span> .note.gnu.property
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">10&lt;/span> .eh_frame_hdr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">11&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="m">12&lt;/span> .init_array .fini_array .dynamic .got &lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>segment LOAD 理解&lt;span class="hx-absolute -hx-mt-20" id="segment-load-理解">&lt;/span>
&lt;a href="#segment-load-%e7%90%86%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>&lt;strong>Explanation of the Two Lines in the &lt;code>LOAD&lt;/code> Segment&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="explanation-of-the-two-lines-in-the">&lt;/span>
&lt;a href="#explanation-of-the-two-lines-in-the" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Here’s a breakdown of the two lines from the &lt;code>LOAD&lt;/code> segment in your &lt;code>readelf -l hello&lt;/code> output:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>LOAD 0x0000000000000000 0x0000000000000000 0x0000000000000000
0x0000000000000628 0x0000000000000628 R 0x1000&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h4>&lt;strong>Line-by-Line Breakdown&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="line-by-line-breakdown">&lt;/span>
&lt;a href="#line-by-line-breakdown" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Field&lt;/th>
&lt;th>Value&lt;/th>
&lt;th>Meaning&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>Type&lt;/strong>&lt;/td>
&lt;td>&lt;code>LOAD&lt;/code>&lt;/td>
&lt;td>This segment is &lt;code>loaded&lt;/code> into memory during execution.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Offset&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>Start of this segment in the file (offset 0 bytes from the file start).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>VirtAddr&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>&lt;code>Virtual memory address&lt;/code> where this segment is mapped (position-independent; resolved at runtime).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>PhysAddr&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000000&lt;/code>&lt;/td>
&lt;td>&lt;code>Physical memory address&lt;/code> (ignored for executables; used in firmware).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>FileSiz&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000628&lt;/code> (1576 bytes)&lt;/td>
&lt;td>&lt;code>Size&lt;/code> of the segment in the file.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>MemSiz&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x0000000000000628&lt;/code> (1576 bytes)&lt;/td>
&lt;td>&lt;code>Size&lt;/code> of the segment in memory (same as &lt;code>FileSiz&lt;/code>; no zero-filled padding).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Flags&lt;/strong>&lt;/td>
&lt;td>&lt;code>R&lt;/code>&lt;/td>
&lt;td>Segment is &lt;strong>read-only&lt;/strong>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Align&lt;/strong>&lt;/td>
&lt;td>&lt;code>0x1000&lt;/code> (4096 bytes)&lt;/td>
&lt;td>Alignment requirement (must be &lt;code>page-aligned&lt;/code> in memory).&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h4>&lt;strong>Purpose of This Segment&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="purpose-of-this-segment">&lt;/span>
&lt;a href="#purpose-of-this-segment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>This &lt;code>LOAD&lt;/code> segment maps &lt;strong>read-only metadata&lt;/strong> into memory, including:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>.interp&lt;/code>&lt;/strong>: Path to the dynamic linker (&lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code>).&lt;/li>
&lt;li>&lt;strong>&lt;code>.note.gnu.build-id&lt;/code>&lt;/strong>: Unique identifier for debugging.&lt;/li>
&lt;li>&lt;strong>&lt;code>.gnu.hash&lt;/code>, &lt;code>.dynsym&lt;/code>, &lt;code>.dynstr&lt;/code>&lt;/strong>: Dynamic symbol table and hashing for efficient symbol resolution.&lt;/li>
&lt;li>&lt;strong>Relocation tables&lt;/strong>: Used by the dynamic linker to adjust addresses at runtime.&lt;/li>
&lt;/ul>
&lt;p>It is critical for &lt;strong>dynamic linking&lt;/strong> and &lt;strong>runtime symbol resolution&lt;/strong>.&lt;/p>
&lt;hr>
&lt;h4>&lt;strong>Why Are &lt;code>VirtAddr&lt;/code> and &lt;code>PhysAddr&lt;/code> Zero?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="why-are">&lt;/span>
&lt;a href="#why-are" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>Position-Independent Executable (PIE)&lt;/strong>:&lt;br>
The binary is compiled as &lt;code>DYN&lt;/code> (shared object style), allowing the OS to load it at a &lt;strong>randomized base address&lt;/strong> (ASLR).
&lt;ul>
&lt;li>At runtime, the OS chooses a base address (e.g., &lt;code>0x555555554000&lt;/code>), and all segments are mapped relative to this base.&lt;/li>
&lt;li>&lt;code>VirtAddr = 0&lt;/code> means the segment’s virtual address is calculated as &lt;code>base + offset&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Security Implications&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="security-implications">&lt;/span>
&lt;a href="#security-implications" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ul>
&lt;li>&lt;strong>No Write or Execute Permissions&lt;/strong>:&lt;br>
The &lt;code>R&lt;/code> flag ensures this segment is &lt;strong>read-only&lt;/strong>, protecting metadata from tampering.&lt;/li>
&lt;li>&lt;strong>Alignment (&lt;code>0x1000&lt;/code>)&lt;/strong>:&lt;br>
Ensures the segment starts at a &lt;strong>page boundary&lt;/strong> (4KB), satisfying memory protection requirements.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h4>&lt;strong>Example Mapping in Memory&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="example-mapping-in-memory">&lt;/span>
&lt;a href="#example-mapping-in-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>At runtime, the OS maps this segment as follows:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;pre>&lt;code>Virtual Address Range Permissions Purpose
[BASE_ADDR] R .interp, .note.gnu.build-id, .gnu.hash, .dynsym, etc.
[BASE_ADDR &amp;#43; 0x628] ... Next segment starts here.&lt;/code>&lt;/pre>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;hr>
&lt;h4>&lt;strong>Key Takeaways&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="key-takeaways">&lt;/span>
&lt;a href="#key-takeaways" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>&lt;strong>Metadata Storage&lt;/strong>: Contains essential runtime data for dynamic linking.&lt;/li>
&lt;li>&lt;strong>ASLR Compatibility&lt;/strong>: Position-independent addressing enhances security.&lt;/li>
&lt;li>&lt;strong>Read-Only Protection&lt;/strong>: Prevents accidental or malicious modification of critical data.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h3>&lt;strong>Sections&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="sections">&lt;/span>
&lt;a href="#sections" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Use &lt;code>readelf -S hello&lt;/code> to list sections:&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Section Headers:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span>Nr&lt;span class="o">]&lt;/span> Name Type Address Offset
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size EntSize Flags Link Info Align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 0&lt;span class="o">]&lt;/span> NULL &lt;span class="m">0000000000000000&lt;/span> &lt;span class="m">00000000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">[&lt;/span> 1&lt;span class="o">]&lt;/span> .text PROGBITS &lt;span class="m">0000000000401000&lt;/span> &lt;span class="m">00001000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00000000000001b2 &lt;span class="m">0000000000000000&lt;/span> AX &lt;span class="m">0&lt;/span> &lt;span class="m">0&lt;/span> &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>.text&lt;/code>: Executable code.&lt;/li>
&lt;li>&lt;code>.rodata&lt;/code>: Read-only constants (e.g., strings).&lt;/li>
&lt;li>&lt;code>.plt/.got&lt;/code>: Dynamic linking stubs.&lt;/li>
&lt;li>&lt;code>.symtab&lt;/code>: Symbol table for debugging/linking.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>&lt;strong>How Does ELF Work?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="how-does-elf-work">&lt;/span>
&lt;a href="#how-does-elf-work" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Compilation&lt;/strong>:&lt;br>
GCC generates an ELF object file (&lt;code>hello.o&lt;/code>) with sections like &lt;code>.text&lt;/code>, &lt;code>.data&lt;/code>, and &lt;code>.symtab&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Linking&lt;/strong>:&lt;br>
The linker (&lt;code>ld&lt;/code>) merges sections from multiple object files, resolves symbols, and creates an executable ELF file with program headers.&lt;/li>
&lt;li>&lt;strong>Execution&lt;/strong>:&lt;br>
The OS loads the executable using the program headers to map memory regions and execute code.&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2>&lt;strong>What Does the OS Do When Running &lt;code>./hello&lt;/code>?&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="what-does-the-os-do-when-running">&lt;/span>
&lt;a href="#what-does-the-os-do-when-running" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>Here’s the lifecycle from command line to execution:&lt;/p>
&lt;h3>&lt;strong>User Runs the Command&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="user-runs-the-command">&lt;/span>
&lt;a href="#user-runs-the-command" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">./hello&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>The shell calls &lt;code>execve(&amp;quot;./hello&amp;quot;, ...)&lt;/code>, which triggers the kernel to load the ELF file.&lt;/p>
&lt;h3>&lt;strong>Kernel Reads the ELF Header&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="kernel-reads-the-elf-header">&lt;/span>
&lt;a href="#kernel-reads-the-elf-header" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Checks the magic number (&lt;code>\x7fELF&lt;/code>) to confirm it’s an ELF file.&lt;/li>
&lt;li>Parses the ELF header to determine architecture (e.g., x86-64).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Kernel Loads Segments into Memory&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="kernel-loads-segments-into-memory">&lt;/span>
&lt;a href="#kernel-loads-segments-into-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>Using the &lt;strong>program headers&lt;/strong>, the kernel:&lt;/p>
&lt;ul>
&lt;li>Maps &lt;code>.text&lt;/code> (code) to &lt;code>executable memory&lt;/code>.&lt;/li>
&lt;li>Maps &lt;code>.data&lt;/code> and &lt;code>.bss&lt;/code> to &lt;code>writable memory&lt;/code>.&lt;/li>
&lt;li>Sets up the &lt;strong>stack&lt;/strong> and environment variables.&lt;/li>
&lt;li>If there’s a &lt;code>INTERP&lt;/code> segment, loads the &lt;code>dynamic linker&lt;/code> (e.g., &lt;code>/lib64/ld-linux-x86-64.so.2&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Dynamic Linking (if needed)&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="dynamic-linking-if-needed">&lt;/span>
&lt;a href="#dynamic-linking-if-needed" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>If the program uses shared libraries:&lt;/p>
&lt;ul>
&lt;li>The kernel &lt;code>transfers control&lt;/code> to the dynamic linker.&lt;/li>
&lt;li>The linker resolves dependencies (e.g., &lt;code>libc.so.6&lt;/code>), loads libraries, and relocates addresses.&lt;/li>
&lt;/ul>
&lt;h3>&lt;strong>Start Execution&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="start-execution">&lt;/span>
&lt;a href="#start-execution" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>The kernel jumps to the &lt;strong>entry point&lt;/strong> specified in the ELF header (&lt;code>Entry point address&lt;/code>).&lt;/li>
&lt;li>For C programs, this is typically &lt;code>_start&lt;/code> (in &lt;code>crt1.o&lt;/code>), which initializes the C runtime, calls &lt;code>main()&lt;/code>, and exits cleanly.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2>&lt;strong>Example: Full Flow for &lt;code>hello&lt;/code>&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="example-full-flow-for">&lt;/span>
&lt;a href="#example-full-flow-for" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ gcc -o hello hello.c &lt;span class="c1"># Compiles to ELF executable&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>File Type&lt;/strong>:&lt;span class="hx-absolute -hx-mt-20" id="file-type">&lt;/span>
&lt;a href="#file-type" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> file hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> hello: ELF 64-bit LSB pie executable, x86-64, version &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>SYSV&lt;span class="o">)&lt;/span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID&lt;span class="o">[&lt;/span>sha1&lt;span class="o">]=&lt;/span>ce69e228b62365b698bac3bf837cb1c5668a8079, &lt;span class="k">for&lt;/span> GNU/Linux 3.2.0, not stripped
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ldd hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> linux-vdso.so.1 &lt;span class="o">(&lt;/span>0x00007fffdd6be000&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> libc.so.6 &lt;span class="o">=&lt;/span>&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span class="o">(&lt;/span>0x00007cdea5a00000&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /lib64/ld-linux-x86-64.so.2 &lt;span class="o">(&lt;/span>0x00007cdea5db7000&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Entry Point&lt;/strong>:&lt;span class="hx-absolute -hx-mt-20" id="entry-point">&lt;/span>
&lt;a href="#entry-point" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ readelf -h hello &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;Entry point&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Entry point address: 0x1060&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>&lt;strong>Execution Steps&lt;/strong>:&lt;span class="hx-absolute -hx-mt-20" id="execution-steps">&lt;/span>
&lt;a href="#execution-steps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ul>
&lt;li>Kernel maps the &lt;code>.text&lt;/code> segment to &lt;code>0x401000&lt;/code>.&lt;/li>
&lt;li>Starts executing &lt;code>_start&lt;/code> (&lt;code>assembler&lt;/code> boilerplate).&lt;/li>
&lt;li>Calls &lt;code>__libc_start_main()&lt;/code> (glibc initialization).&lt;/li>
&lt;li>Invokes &lt;code>main()&lt;/code> → prints &lt;code>&amp;quot;Hello, world!&amp;quot;&lt;/code>.&lt;/li>
&lt;li>Returns to the kernel via &lt;code>exit(0)&lt;/code>.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h3>&lt;strong>Tools to Inspect ELF Files&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="tools-to-inspect-elf-files">&lt;/span>
&lt;a href="#tools-to-inspect-elf-files" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Tool&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>readelf&lt;/code>&lt;/td>
&lt;td>Analyze headers, sections, symbols.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>objdump&lt;/code>&lt;/td>
&lt;td>Disassemble code, view relocations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>nm&lt;/code>&lt;/td>
&lt;td>List symbols (functions/variables).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>gdb&lt;/code>&lt;/td>
&lt;td>Debug and inspect memory layout.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>strings&lt;/code>&lt;/td>
&lt;td>Extract human-readable strings.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3>&lt;strong>Summary Workflow&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="summary-workflow">&lt;/span>
&lt;a href="#summary-workflow" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;strong>Source Code&lt;/strong> → &lt;code>gcc -c&lt;/code> → &lt;strong>ELF Object File&lt;/strong> (&lt;code>hello.o&lt;/code>)&lt;/li>
&lt;li>&lt;strong>Object Files&lt;/strong> → &lt;code>ld&lt;/code> → &lt;strong>ELF Executable&lt;/strong> (&lt;code>hello&lt;/code>)&lt;/li>
&lt;li>&lt;strong>OS Loads ELF&lt;/strong> → Maps Memory Segments → Resolves Dependencies → Executes Code&lt;/li>
&lt;/ol>
&lt;p>By understanding ELF, you gain insight into how software interacts with hardware, memory, and the operating system at the lowest level.&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.lurklurk.org/linkers/linkers.html" target="_blank" rel="noopener">linkers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Linker_%28computing%29" target="_blank" rel="noopener">wiki-linker&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>My Tool Box</title><link>https://cloudedseal.github.io/blog/my-tool-box/</link><pubDate>Fri, 19 Apr 2024 17:31:31 +0800</pubDate><guid>https://cloudedseal.github.io/blog/my-tool-box/</guid><description>
&lt;h1>video &amp;amp; audio&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/iawia002/lux" target="_blank" rel="noopener">lux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ttsmaker.com/zh-cn" target="_blank" rel="noopener">ttsmaker&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>表格&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.cs.cmu.edu/~pattis/15-1XX/common/handouts/ascii.html" target="_blank" rel="noopener">ascii-table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ptable.com/#%E6%80%A7%E8%B4%A8" target="_blank" rel="noopener">元素周期表&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>digital&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.socpk.com/" target="_blank" rel="noopener">socpk&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>颜色&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.zhongguose.com/" target="_blank" rel="noopener">中国色&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://colors.ichuantong.cn/" target="_blank" rel="noopener">传统色&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>网络&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://wificard.io/" target="_blank" rel="noopener">WiFi 连接卡&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.submarinecablemap.com/" target="_blank" rel="noopener">海底电缆&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>工具集&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.youxiaohou.com/" target="_blank" rel="noopener">油小猴&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://devtool.tech/" target="_blank" rel="noopener">开发工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://imyshare.com/" target="_blank" rel="noopener">神秘的热心网友&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tool.butof.com/" target="_blank" rel="noopener">波特工具站&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>java&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://adoptium.net/" target="_blank" rel="noopener">JDK&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>启动盘制作&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://rufus.ie/zh/" target="_blank" rel="noopener">https://rufus.ie/zh/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ventoy.net/" target="_blank" rel="noopener">https://ventoy.net/&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>windows&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://live.sysinternals.com/" target="_blank" rel="noopener">sysinternals&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>编程&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://cron.help/" target="_blank" rel="noopener">cron-expression&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://crontab.guru/" target="_blank" rel="noopener">crontab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://explainshell.com/" target="_blank" rel="noopener">explainshell&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>隐私&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://firstpartysimulator.org/" target="_blank" rel="noopener">Cover Your Tracks&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://browserleaks.com/" target="_blank" rel="noopener">browserleaks&lt;/a>&lt;/li>
&lt;/ol>
&lt;h1>explorer&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://astexplorer.net/" target="_blank" rel="noopener">AST&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mbebenita.github.io/WasmExplorer/" target="_blank" rel="noopener">WASM&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godbolt.org/" target="_blank" rel="noopener">compiler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://exuanbo.xyz/assembler-simulator/?shareable=eJytU8Fu2zAM_RVOZ28wip0cYEDstGg7Jx1WrAUW5aDYTCNElgSJDhoU-fdR7up16w4tUOukJ75H8pF-ENhqckEUD0Jb35MoxAQ-vuqTdiLpRsdeGZjp6I06wA-rifFXK0i6nH-Da1KBJJ8JXPadB68iAW0RWkUKSK0NptBZCSDFORrj4NYF036Q4gmHPJd20CkSNL-6AZjWGUCVJ9m52iHfwTttWdrBXrfo4Pt0PkaXKTo_GaPLZ9Gplo0OXFWzVUE1hAG0HeBIQdu7UaVilWVZr5JM5fzhTxub4LqUkImsWNXS1s75sdrltF5lCX5B5ERV_VTFWDffFI0tRX5PSheLKvUtf7v5ou0kYfGenukY1yjSzo708m_6vz4M9Pe0QVLFOzBQ0hQTY4vNDvTmf_nwXkeKw-YsfkKy8G37drqYvYlgz1yAzgXkzKrzBmMGEQ02BGfaIHyBK48WTh8fP0krMrEOqHaPcxHFcnXMROMsBWcMDn8a3zb6rg-D7wlQPblpjNjxpouCQo9M4cHsrj1iK4rPmSDdYbiwbMFeGVGc5Hmeib3uvuJhrW3L5nOujTIRj8fjL4pBMxs" target="_blank" rel="noopener">assembler&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://brainfuck-visualizer.netlify.app/" target="_blank" rel="noopener">brainfuck-visualizer&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Zookeeper Transaction Log</title><link>https://cloudedseal.github.io/blog/zookeeper-transaction-log/</link><pubDate>Sat, 21 Oct 2023 14:19:13 +0800</pubDate><guid>https://cloudedseal.github.io/blog/zookeeper-transaction-log/</guid><description>
&lt;blockquote>
&lt;p>分析的 zookeeper 代码版本为 3.9.1 。 &lt;br>
zookeer 的 transaction log 为二进制文件，采用的是大端序。&lt;br>
zookeeper 数据持久化的功能在 &lt;code>zookeeper/server/persistence&lt;/code> 下。&lt;br>
解析日志就可以获取 zookeeper 的数据。可以用来实现实时备份到另一个独立的 zookeeper 集群。&lt;/p>
&lt;/blockquote>
&lt;h1>日志文件命名规则&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * Creates a valid transaction log file name.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @param zxid used as a file name suffix (extension)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @return file name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">makeLogName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">zxid&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FileTxnLog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">LOG_FILE_PREFIX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;.&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Long&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toHexString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">zxid&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>日志文件布局&lt;/h1>&lt;p>由 File Header、TxnList、ZeroPad 三部分构成&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/zookeeper-transaction-log-file-format.svg" alt="zk-transaction-log-file-format" loading="lazy" />&lt;/p>
&lt;h1>&lt;code>log.500000004&lt;/code> 文件分析&lt;/h1>&lt;p>分析的日志文件 &lt;a href="https://raw.githubusercontent.com/stardustman/pictures/main/img/log.500000004" target="_blank" rel="noopener">log.500000004&lt;/a>&lt;/p>
&lt;h2>二进制文件查看&lt;span class="hx-absolute -hx-mt-20" id="二进制文件查看">&lt;/span>
&lt;a href="#%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%96%87%e4%bb%b6%e6%9f%a5%e7%9c%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">xxd log.500000004.new&lt;span class="p">|&lt;/span>head -n &lt;span class="m">50&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000: 5a4b 4c47 &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ZKLG............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000010: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> eaa1 0b2a &lt;span class="m">0000&lt;/span> &lt;span class="m">0030&lt;/span> &lt;span class="m">0300&lt;/span> c755 .......*...0...U
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000020: cf61 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0004&lt;/span> .a..............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000030: &lt;span class="m">0000&lt;/span> 018b &lt;span class="m">1815&lt;/span> 73ab ffff fff6 &lt;span class="m">0000&lt;/span> &lt;span class="m">7530&lt;/span> ......s.......u0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000040: &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> 000a a5c7 &lt;span class="m">7377&lt;/span> &lt;span class="m">4200&lt;/span> &lt;span class="m">0000&lt;/span> ..........swB...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000050: 005f 8e12 2a00 &lt;span class="m">0000&lt;/span> 5f03 00c7 55cf &lt;span class="m">6100&lt;/span> ._..*..._...U.a.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000060: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0001&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000070: 8b18 159e &lt;span class="m">3300&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0000&lt;/span> 0b2f 612f ....3......../a/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000080: &lt;span class="m">7374&lt;/span> &lt;span class="m">6172&lt;/span> &lt;span class="m">6475&lt;/span> &lt;span class="m">7374&lt;/span> ffff ffff &lt;span class="m">0000&lt;/span> &lt;span class="m">0001&lt;/span> stardust........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000090: &lt;span class="m">0000&lt;/span> 001f &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> 776f 726c &lt;span class="m">6400&lt;/span> &lt;span class="m">0000&lt;/span> ........world...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000a0: &lt;span class="m">0661&lt;/span> 6e79 6f6e &lt;span class="m">6500&lt;/span> &lt;span class="m">0000&lt;/span> 000d &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> .anyone.........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000b0: &lt;span class="m">0000&lt;/span> 000c &lt;span class="m">6113&lt;/span> &lt;span class="m">4355&lt;/span> &lt;span class="m">4200&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0007&lt;/span> 0a0e ....a.CUB.......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000c0: &lt;span class="m">4000&lt;/span> &lt;span class="m">0000&lt;/span> 4c03 00c7 55cf &lt;span class="m">6100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> @...L...U.a.....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000d0: &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0600&lt;/span> &lt;span class="m">0001&lt;/span> 8b18 15e5 ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000e0: b800 &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> 0b2f 612f &lt;span class="m">7374&lt;/span> &lt;span class="m">6172&lt;/span> ........./a/star
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000f0: &lt;span class="m">6475&lt;/span> &lt;span class="m">7374&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0009&lt;/span> &lt;span class="m">7468&lt;/span> &lt;span class="m">6553&lt;/span> 686f &lt;span class="m">6775&lt;/span> dust....theShogu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000100: 6e00 &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> 0c14 &lt;span class="m">8609&lt;/span> n...............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000110: d442 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> e9ee 12d7 &lt;span class="m">0000&lt;/span> &lt;span class="m">0058&lt;/span> &lt;span class="m">0300&lt;/span> .B...........X..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000120: c755 cf61 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0003&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> &lt;span class="m">0000&lt;/span> .U.a............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000130: &lt;span class="m">0007&lt;/span> &lt;span class="m">0000&lt;/span> 018b &lt;span class="m">1816&lt;/span> 66ef &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> &lt;span class="m">0000&lt;/span> ........f.......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000140: 000b 2f61 2f73 &lt;span class="m">7461&lt;/span> &lt;span class="m">7264&lt;/span> &lt;span class="m">7573&lt;/span> &lt;span class="m">7400&lt;/span> &lt;span class="m">0000&lt;/span> ../a/stardust...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000150: &lt;span class="m">1574&lt;/span> &lt;span class="m">6865&lt;/span> &lt;span class="m">3133&lt;/span> 4c6f &lt;span class="m">6164&lt;/span> 734f &lt;span class="m">6654&lt;/span> &lt;span class="m">6865&lt;/span> .the13LoadsOfThe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000160: &lt;span class="m">5368&lt;/span> 6f67 756e &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> Shogun..........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000170: 000c 39b4 35f7 &lt;span class="m">4200&lt;/span> &lt;span class="m">0000&lt;/span> 001a cb0a c700 ..9.5.B.........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000180: &lt;span class="m">0000&lt;/span> 3b03 00c7 55cf &lt;span class="m">6100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> ..&lt;span class="p">;&lt;/span>...U.a.......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000190: &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0800&lt;/span> &lt;span class="m">0001&lt;/span> 8b18 167c ed00 .............&lt;span class="p">|&lt;/span>..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001a0: &lt;span class="m">0000&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> 0b2f 612f &lt;span class="m">7374&lt;/span> &lt;span class="m">6172&lt;/span> &lt;span class="m">6475&lt;/span> ......./a/stardu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001b0: &lt;span class="m">7374&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> 000b 676d 37e4 &lt;span class="m">4200&lt;/span> st........gm7.B.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001c0: &lt;span class="m">0000&lt;/span> 00ef 370a d300 &lt;span class="m">0000&lt;/span> &lt;span class="m">3003&lt;/span> 00c7 55cf ....7.....0...U.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001d0: &lt;span class="m">6100&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0500&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0900&lt;/span> a...............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001e0: &lt;span class="m">0001&lt;/span> 8b18 16f9 d4ff ffff f500 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000001f0: &lt;span class="m">0000&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">0000&lt;/span> 0b67 6d37 e442 &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> .......gm7.B....
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000200: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000210: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000220: &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> ................&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>log 二进制文件图解&lt;span class="hx-absolute -hx-mt-20" id="log-二进制文件图解">&lt;/span>
&lt;a href="#log-%e4%ba%8c%e8%bf%9b%e5%88%b6%e6%96%87%e4%bb%b6%e5%9b%be%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/zookeeper-log.500000004.jpg" alt="log.50000004.jpg" loading="lazy" />&lt;/p>
&lt;h3>log.&lt;code>500000004&lt;/code> 怎么来的？&lt;span class="hx-absolute -hx-mt-20" id="log500000004-怎么来的">&lt;/span>
&lt;a href="#log500000004-%e6%80%8e%e4%b9%88%e6%9d%a5%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>可以看到 txn log 文件，写入的第一个 transaction 的 &lt;code>zxid&lt;/code> 就是 &lt;code>0x0000000500000004&lt;/code>。这个就是 log.&lt;code>500000004&lt;/code> 的由来。&lt;/p>
&lt;/blockquote>
&lt;h3>什么是 &lt;code>zxid&lt;/code>？&lt;span class="hx-absolute -hx-mt-20" id="什么是-zxid">&lt;/span>
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af-zxid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/zookeeper-zxid-format.svg" alt="zookeeper-zxid" loading="lazy" />&lt;/p>
&lt;h3>文件结构&lt;span class="hx-absolute -hx-mt-20" id="文件结构">&lt;/span>
&lt;a href="#%e6%96%87%e4%bb%b6%e7%bb%93%e6%9e%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>第一行 FileHeader。&lt;/li>
&lt;li>第二行开始是 transaction log, 每一个 transaction log 用 0x42 作为 EOF。可以知道 &lt;code>log.500000004&lt;/code>有 6 个 transaction。&lt;/li>
&lt;li>剩余的是 Zero Pad。&lt;/li>
&lt;/ol>
&lt;h3>transaction(txn) 类型&lt;span class="hx-absolute -hx-mt-20" id="transactiontxn-类型">&lt;/span>
&lt;a href="#transactiontxn-%e7%b1%bb%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>仅分析 &lt;code>log.500000004&lt;/code>中的 6 个。还有其他类型的 txn。&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>transaction 代码位置&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="transaction-代码位置">&lt;/span>
&lt;a href="#transaction-%e4%bb%a3%e7%a0%81%e4%bd%8d%e7%bd%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>zookeeper-jute 中 org.apache.zookeeper.txn 下, 这个是 jute compiler 生成的一系列类。&lt;/p>
&lt;h4>&lt;strong>create session txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="create-session-txn">&lt;/span>
&lt;a href="#create-session-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 1 个 txn 的 type= 0xfffffff6=-10&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L98" target="_blank" rel="noopener">OpCode=-10&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>create txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="create-txn">&lt;/span>
&lt;a href="#create-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 2 个 txn 的 type= 0x00000001=1&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L40" target="_blank" rel="noopener">OpCode=1&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>set data txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="set-data-txn">&lt;/span>
&lt;a href="#set-data-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 3、4 个 txn 的 type= 0x00000005=5&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L40" target="_blank" rel="noopener">OpCode=5&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>delete txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="delete-txn">&lt;/span>
&lt;a href="#delete-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 5 个 txn 的 type= 0x00000002=2&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L42" target="_blank" rel="noopener">OpCode=2&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h4>&lt;strong>close session txn&lt;/strong>&lt;span class="hx-absolute -hx-mt-20" id="close-session-txn">&lt;/span>
&lt;a href="#close-session-txn" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>第 6 个 txn 的 type= 0xfffffff5=-11&lt;br>
&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L100" target="_blank" rel="noopener">OpCode=-11&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/tree/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence" target="_blank" rel="noopener">zookeeper/server/persistence&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/ZooDefs.java#L36" target="_blank" rel="noopener">ZooDefs#OpCode&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/FileTxnLog.java#L57" target="_blank" rel="noopener">FileTxnLog.java&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/apache/zookeeper/blob/release-3.9.1/zookeeper-server/src/main/java/org/apache/zookeeper/server/persistence/Util.java#L84" target="_blank" rel="noopener">Util#makeLogName&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://raw.githubusercontent.com/stardustman/pictures/main/img/log.500000004" target="_blank" rel="noopener">log.500000004&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/alenca/zklogtool/tree/master/zklogtool" target="_blank" rel="noopener">zklogtool&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/sharkdp/hexyl/releases" target="_blank" rel="noopener">hexyl-二进制分析工具&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zookeeper.apache.org/doc/r3.4.8/zookeeperAdmin.html#sc_zkCommands:~:text=The%20Log%20Directory%20contains,written%20to%20that%20log." target="_blank" rel="noopener">dataLogDir&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Ipc Signal</title><link>https://cloudedseal.github.io/blog/ipc-signal/</link><pubDate>Tue, 11 Apr 2023 20:15:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/ipc-signal/</guid><description>
&lt;h1>signal&lt;/h1>&lt;h2>什么是 signal&lt;span class="hx-absolute -hx-mt-20" id="什么是-signal">&lt;/span>
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%af-signal" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>A signal can be thought of as a &lt;code>software interrupt&lt;/code>.
This means that a process that receives a signal &lt;code>stops the execution&lt;/code> of the current program and makes the program &lt;code>respond to the signal&lt;/code>.
Signals are various notifications sent to a process in order to notify it of various &amp;ldquo;important&amp;rdquo; events.
信号是发送给进程的各种通知，以便通知它发生了各种“重要”的事件。&lt;/p>
&lt;/blockquote>
&lt;h2>有哪些信号？默认怎么处理？&lt;span class="hx-absolute -hx-mt-20" id="有哪些信号默认怎么处理">&lt;/span>
&lt;a href="#%e6%9c%89%e5%93%aa%e4%ba%9b%e4%bf%a1%e5%8f%b7%e9%bb%98%e8%ae%a4%e6%80%8e%e4%b9%88%e5%a4%84%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: left">Signal Name&lt;/th>
&lt;th style="text-align: left">Default Action&lt;/th>
&lt;th style="text-align: left">Comment&lt;/th>
&lt;th style="text-align: left">POSIX&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: left">1 SIGHUP&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Hang up controlling terminal or process&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">2 SIGINT&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Interrupt from keyboard, Control-C&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">3 SIGQUIT&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Quit from keyboard, Control-\&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">4 SIGILL&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Illegal instruction&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">5 SIGTRAP&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Breakpoint for debugging&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6 SIGABRT&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Abnormal termination&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">6 SIGIOT&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Equivalent to SIGABRT&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">7 SIGBUS&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Bus error&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">8 SIGFPE&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Floating-point exception&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">9 &lt;code>SIGKILL&lt;/code>&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Forced-process termination&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">10 SIGUSR1&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Available to processes&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">11 SIGSEGV&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Invalid memory reference&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">12 SIGUSR2&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Available to processes&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">13 SIGPIPE&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Write to pipe with no readers&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">14 SIGALRM&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Real-timer clock&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">15 SIGTERM&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Process termination&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">16 SIGSTKFLT&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Coprocessor stack error&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">17 SIGCHLD&lt;/td>
&lt;td style="text-align: left">Ignore&lt;/td>
&lt;td style="text-align: left">Child process stopped or terminated or got a signal if traced&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">18 SIGCONT&lt;/td>
&lt;td style="text-align: left">Continue&lt;/td>
&lt;td style="text-align: left">Resume execution, if stopped&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">19 &lt;code>SIGSTOP&lt;/code>&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Stop process execution, Ctrl-Z&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">20 SIGTSTP&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Stop process issued from tty&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">21 SIGTTIN&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Background process requires input&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">22 SIGTTOU&lt;/td>
&lt;td style="text-align: left">Stop&lt;/td>
&lt;td style="text-align: left">Background process requires output&lt;/td>
&lt;td style="text-align: left">Yes&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">23 SIGURG&lt;/td>
&lt;td style="text-align: left">Ignore&lt;/td>
&lt;td style="text-align: left">Urgent condition on socket&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">24 SIGXCPU&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">CPU time limit exceeded&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">25 SIGXFSZ&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">File size limit exceeded&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">26 SIGVTALRM&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Virtual timer clock&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">27 SIGPROF&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Profile timer clock&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">28 SIGWINCH&lt;/td>
&lt;td style="text-align: left">Ignore&lt;/td>
&lt;td style="text-align: left">Window resizing&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">29 SIGIO&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">I/O now possible&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">29 SIGPOLL&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Equivalent to SIGIO&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">30 SIGPWR&lt;/td>
&lt;td style="text-align: left">Terminate&lt;/td>
&lt;td style="text-align: left">Power supply failure&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">31 SIGSYS&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Bad system call&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: left">31SIGUNUSED&lt;/td>
&lt;td style="text-align: left">Dump&lt;/td>
&lt;td style="text-align: left">Equivalent to SIGSYS&lt;/td>
&lt;td style="text-align: left">No&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2>如何发送信号？&lt;span class="hx-absolute -hx-mt-20" id="如何发送信号">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%8f%91%e9%80%81%e4%bf%a1%e5%8f%b7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>1. keyboard&lt;span class="hx-absolute -hx-mt-20" id="1-keyboard">&lt;/span>
&lt;a href="#1-keyboard" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>SIGINT(Ctrl + C)&lt;/li>
&lt;li>SIGTSTP(Ctrl + Z) -&amp;gt; resume by &lt;code>fg&lt;/code>&lt;/li>
&lt;li>SIGQUIT(Ctrl + \)&lt;/li>
&lt;/ol>
&lt;h3>2. command line&lt;span class="hx-absolute -hx-mt-20" id="2-command-line">&lt;/span>
&lt;a href="#2-command-line" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>kill -&amp;lt;signal&amp;gt; &amp;lt;PID&amp;gt;&lt;/li>
&lt;li>fg&lt;/li>
&lt;/ol>
&lt;h3>3. system call&lt;span class="hx-absolute -hx-mt-20" id="3-system-call">&lt;/span>
&lt;a href="#3-system-call" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/kill.2.html" target="_blank" rel="noopener">kill syscall&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2>进程收到信号会怎么处理？&lt;span class="hx-absolute -hx-mt-20" id="进程收到信号会怎么处理">&lt;/span>
&lt;a href="#%e8%bf%9b%e7%a8%8b%e6%94%b6%e5%88%b0%e4%bf%a1%e5%8f%b7%e4%bc%9a%e6%80%8e%e4%b9%88%e5%a4%84%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>分为 &lt;code>3&lt;/code> 种情况:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>&lt;code>Ignore it&lt;/code>&lt;/strong>. Many signals can be and are ignored, but not all. Hardware exceptions such as &amp;ldquo;divide by 0&amp;rdquo; (with integers) cannot be ignored successfully and some signals such as SIGKILL cannot be ignored at all.&lt;/li>
&lt;li>&lt;strong>&lt;code>Catch and handle the exception&lt;/code>&lt;/strong>. The process has a function to be executed if and when the exception occurs. The function may terminate the program gracefully or it may handle it without terminating the program.&lt;/li>
&lt;li>&lt;strong>&lt;code>Let the default action apply&lt;/code>&lt;/strong>. Every signal has a default action. The default may be:
&lt;ul>
&lt;li>ignore&lt;/li>
&lt;li>terminate&lt;/li>
&lt;li>terminate and dump core&lt;/li>
&lt;li>stop or pause the program&lt;/li>
&lt;li>resume a program paused earlier&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2>如何自定义 signal handler?&lt;span class="hx-absolute -hx-mt-20" id="如何自定义-signal-handler">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e8%87%aa%e5%ae%9a%e4%b9%89-signal-handler" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>注意：这里只有可以被 caught 的才可以自定义 handler。SIGKILL 和 SIGSTOP 这两个是不能自己定义 handler 的。&lt;/p>
&lt;/blockquote>
&lt;h3>java example&lt;span class="hx-absolute -hx-mt-20" id="java-example">&lt;/span>
&lt;a href="#java-example" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">sun.misc.Signal&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">sun.misc.SignalHandler&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ExampleSignalHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InterruptedException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">nanoTime&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Signal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Signal&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;INT&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SignalHandler&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Signal&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sig&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;\nProgram execution took %f seconds\n&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">nanoTime&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1e9f&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;cat the INT signal, but still run.....😄&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">500&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol>
&lt;li>可以将 “INT” 替换为 “STOP” 运行结果为:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Exception in thread &lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span> java.lang.IllegalArgumentException: Signal already used by VM or OS: SIGSTOP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at sun.misc.Signal.handle&lt;span class="o">(&lt;/span>Signal.java:166&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at ExampleSignalHandler.main&lt;span class="o">(&lt;/span>ExampleSignalHandler.java:9&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>可以将 “INT” 替换为 “KILL” 运行结果为:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">Exception in thread &lt;span class="s2">&amp;#34;main&amp;#34;&lt;/span> java.lang.IllegalArgumentException: Signal already used by VM or OS: SIGKILL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at sun.misc.Signal.handle&lt;span class="o">(&lt;/span>Signal.java:166&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> at stardustman.github.io.signal.ExampleSignalHandler.main&lt;span class="o">(&lt;/span>ExampleSignalHandler.java:9&lt;span class="o">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://chromium.googlesource.com/chromiumos/docs/&amp;#43;/HEAD/constants/signals.md" target="_blank" rel="noopener">Linux Signal Table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Signal_%28IPC%29" target="_blank" rel="noopener">Signal_(IPC)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.kent.edu/~ruttan/sysprog/lectures/signals.html" target="_blank" rel="noopener">Introduction To Unix Signals Programming&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/libc/manual/html_node/Standard-Signals.html" target="_blank" rel="noopener">Standard-Signals&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://rosettacode.org/wiki/Handle_a_signal#Java" target="_blank" rel="noopener">handle-a-signal&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/sigprocmask.2.html" target="_blank" rel="noopener">signal-block&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackabuse.com/handling-unix-signals-in-python/" target="_blank" rel="noopener">handling-unix-signals-in-python&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://faculty.cs.niu.edu/~hutchins/csci480/signals.htm" target="_blank" rel="noopener">signals&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.alexonlinux.com/signal-handling-in-linux" target="_blank" rel="noopener">signal-handling-in-linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://elixir.bootlin.com/busybox/latest/source/coreutils/nohup.c#L94" target="_blank" rel="noopener">nohup&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.princeton.edu/courses/archive/fall05/cos217/lectures/23signals.pdf" target="_blank" rel="noopener">https://www.cs.princeton.edu/courses/archive/fall05/cos217/lectures/23signals.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.kent.edu/~ruttan/sysprog/lectures/signals.html" target="_blank" rel="noopener">cs.kent.edu/signals.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://faculty.cs.niu.edu/~hutchins/csci480/signals.htm" target="_blank" rel="noopener">csci480/signals.htm&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/kill.2.html" target="_blank" rel="noopener">kill(2)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://goodyduru.github.io/os/2023/10/05/ipc-unix-signals.html" target="_blank" rel="noopener">https://goodyduru.github.io/os/2023/10/05/ipc-unix-signals.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/94318f9185757cc33d2b8d527d36be26ac6b7582/src/share/classes/sun/misc/Signal.java#L30" target="_blank" rel="noopener">java Signal 处理实现&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cs341.cs.illinois.edu/coursebook/index.html" target="_blank" rel="noopener">https://cs341.cs.illinois.edu/coursebook/index.html&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Asm How Java Byte Code Execute</title><link>https://cloudedseal.github.io/blog/asm-how-java-byte-code-execute/</link><pubDate>Wed, 05 Apr 2023 10:35:32 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-how-java-byte-code-execute/</guid><description>
&lt;h1>jvm&lt;/h1>&lt;blockquote>
&lt;p>jvm 是一个栈式(stack-based)虚拟计算机。啥意思，就是大多数的 opcode 的操作数在 operand stack 上，执行的结果也放在 oprand stack 上。&lt;br>
有的 opcode 的操作数在 local variable table，如 &lt;code>iinc&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;h1>分析的代码&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">stardustman.github.io&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">BoxingUnboxingExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Integer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1000000&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// Auto-boxing of primitive type int to Integer&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;The sum is: &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sum&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>jclasslib 查看字节码&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/BoxingUnboxingExample.jpg" alt="BoxingUnboxingExample" loading="lazy" />&lt;/p>
&lt;h1>字节码执行过程&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/jvm%20-byte-code-execute.svg" alt="jvm-byte-code-execute" loading="lazy" />&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/evaluation-of-postfix-expression/" target="_blank" rel="noopener">postfix-expression&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/ingokegel/jclasslib/releases" target="_blank" rel="noopener">jclasslib&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.iconst_i" target="_blank" rel="noopener">jvms-6.5.iconst_i&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.invokestatic" target="_blank" rel="noopener">jvms-6.5.invokestatic&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se19/html/jvms-6.html#jvms-6.5.getstatic" target="_blank" rel="noopener">jvms-6.5.getstatic&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java Jdk Proxy</title><link>https://cloudedseal.github.io/blog/java-jdk-proxy/</link><pubDate>Sun, 12 Feb 2023 19:02:31 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-jdk-proxy/</guid><description>
&lt;blockquote>
&lt;p>分析环境: jdk8&lt;/p>
&lt;/blockquote>
&lt;h1>dynamic proxy 是啥？&lt;/h1>&lt;blockquote>
&lt;p>A dynamic proxy class is a class that implements &lt;code>a list of interfaces&lt;/code>&lt;sub>&lt;strong>1&lt;/strong>&lt;/sub> specified at &lt;code>runtime &lt;/code>such that a method invocation through one of the interfaces on an instance of the class will be &lt;code>encoded and dispatched&lt;/code> to &lt;code>another&lt;/code> object through a &lt;code>uniform interface&lt;/code>&lt;sub>&lt;strong>2&lt;/strong>&lt;/sub>.&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>动态代理类生成调用方法如下：&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Proxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newProxyInstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getClass&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getClassLoader&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Class&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">Dynasty&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">},&lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ul>
&lt;li>&lt;code>handler.getClass().getClassLoader()&lt;/code> 运行时动态生成的代理类 load 到 jvm 使用的 class loader。&lt;/li>
&lt;li>&lt;code>new Class[]{Dynasty.class}&lt;/code> 运行时动态生成的代理类实现的一系列接口。&lt;/li>
&lt;li>&lt;code>handler&lt;/code> Invocation Handler 通过 invoke() 来分发方法，包含被实际代理的对象实例。&lt;/li>
&lt;/ul>
&lt;h1>保存运行时生成的动态代理类&lt;/h1>&lt;h2>ProxyGenerator.java&lt;span class="hx-absolute -hx-mt-20" id="proxygeneratorjava">&lt;/span>
&lt;a href="#proxygeneratorjava" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/** debugging flag for saving generated class files */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">saveGeneratedFiles&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">security&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AccessController&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">doPrivileged&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GetBooleanAction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;sun.misc.ProxyGenerator.saveGeneratedFiles&amp;#34;&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="na">booleanValue&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>设置 &lt;code>sun.misc.ProxyGenerator.saveGeneratedFiles&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="设置-sunmiscproxygeneratorsavegeneratedfiles">&lt;/span>
&lt;a href="#%e8%ae%be%e7%bd%ae-sunmiscproxygeneratorsavegeneratedfiles" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setProperty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;sun.misc.ProxyGenerator.saveGeneratedFiles&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>运行时生成的动态代理类($Proxy0)分析&lt;/h1>&lt;h2>运行时生成的动态代理类实例化&lt;span class="hx-absolute -hx-mt-20" id="运行时生成的动态代理类实例化">&lt;/span>
&lt;a href="#%e8%bf%90%e8%a1%8c%e6%97%b6%e7%94%9f%e6%88%90%e7%9a%84%e5%8a%a8%e6%80%81%e4%bb%a3%e7%90%86%e7%b1%bb%e5%ae%9e%e4%be%8b%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-instance.jpg" alt="dynamic-proxy-instance" loading="lazy" />&lt;/p>
&lt;p>$Proxy0 -&amp;gt; Proxy(InvocationHandler h) 由此可见:&lt;/p>
&lt;ol>
&lt;li>动态代理类 &lt;code>$Proxy0&lt;/code> 实例化时，调用 super class &lt;code>Proxy&lt;/code> 的构造函数，需要的 InvocationHandler 是实现了该接口的 &lt;code>DynastyDynamicProxy&lt;/code>&lt;/li>
&lt;li>&lt;code>DynastyDynamicProxy&lt;/code> 实例化时，构造函数需要的是 &lt;code>TangDynasty&lt;/code> 这个实际被代理的类。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-class-method-founder.jpg" alt="dynamic-proxy-class-method-founder" loading="lazy" />&lt;/p>
&lt;h2>运行时生成的动态代理类方法&lt;span class="hx-absolute -hx-mt-20" id="运行时生成的动态代理类方法">&lt;/span>
&lt;a href="#%e8%bf%90%e8%a1%8c%e6%97%b6%e7%94%9f%e6%88%90%e7%9a%84%e5%8a%a8%e6%80%81%e4%bb%a3%e7%90%86%e7%b1%bb%e6%96%b9%e6%b3%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>$Proxy0 的命名&lt;span class="hx-absolute -hx-mt-20" id="proxy0-的命名">&lt;/span>
&lt;a href="#proxy0-%e7%9a%84%e5%91%bd%e5%90%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// prefix for all proxy class names&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">proxyClassNamePrefix&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;$Proxy&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// next number to use for generation of unique proxy class names&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicLong&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">nextUniqueNumber&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicLong&lt;/span>&lt;span class="p">();&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>$Proxy0#founder&lt;span class="hx-absolute -hx-mt-20" id="proxy0founder">&lt;/span>
&lt;a href="#proxy0founder" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-1.jpg" alt="dynamic-proxy-stack-frame-1" loading="lazy" />&lt;/p>
&lt;hr>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-2.jpg" alt="" loading="lazy" />&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">founder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// super.h.invoke 指的就是 DynastyDynamicProxy.invoke&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UndeclaredThrowableException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>$Proxy0#reviver&lt;span class="hx-absolute -hx-mt-20" id="proxy0reviver">&lt;/span>
&lt;a href="#proxy0reviver" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">reviver&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// super.h.invoke 指的就是 DynastyDynamicProxy.invoke&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UndeclaredThrowableException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>$Proxy0#lastEmperor&lt;span class="hx-absolute -hx-mt-20" id="proxy0lastemperor">&lt;/span>
&lt;a href="#proxy0lastemperor" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">lastEmperor&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kd">super&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">h&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">m3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// super.h.invoke 指的就是 DynastyDynamicProxy.invoke&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UndeclaredThrowableException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">var3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>由上可知，&lt;code>$Proxy0&lt;/code> 实现的方法的统一调用入口(&lt;code>uniform interface&lt;/code>) 就是 DynastyDynamicProxy#invoke，也就是 jdk 动态代理必须实现的 InvocationHandler#invoke 方法。&lt;/p>
&lt;/blockquote>
&lt;h1>&lt;code>InvocationHandler&lt;/code> 接口实现类 &lt;code>DynastyDynamicProxy&lt;/code> 分析&lt;/h1>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DynastyDynamicProxy&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">InvocationHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 被代理的对象&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">delegate&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">DynastyDynamicProxy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">originalDynamic&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">delegate&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">originalDynamic&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> @param proxy 当前动态代理类 $Proxy0 的实例
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> @param method 当前动态代理类调用的方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> @param args 当前动态代理类调用的方法的参数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> **/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">proxy&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Method&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;公元 618 年唐朝建立!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invoke&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">delegate&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getName&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34; of Tang Dynasty was &amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;公元 907 年唐朝灭亡!\n&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">res&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-3.jpg" alt="dynamic-proxy-method-call" loading="lazy" />&lt;/p>
&lt;h1>被代理的类 &lt;code>TangDynasty&lt;/code> 分析&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/dynamic-proxy-stack-frame-4.jpg" alt="" loading="lazy" />&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">TangDynasty&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Dynasty&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">founder&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;李渊&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">reviver&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;李隆基&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">lastEmperor&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;李柷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;ul>
&lt;li>由&lt;code>调用栈&lt;/code>可知，最终还是要调用&lt;code>被代理的类&lt;/code>的方法。&lt;/li>
&lt;li>但是可以在执行真正的代理类方法之前，在 &lt;code>InvocationHandler#invoke&lt;/code> 中添加实际需要的逻辑。这就是中间层，通过中间层进行逻辑的增强。&lt;/li>
&lt;li>这样看起来就好像被代理对象的逻辑进行了增强。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/master/src/share/classes/sun/misc/ProxyGenerator.java#L441-L443" target="_blank" rel="noopener">dynamic-proxy-class-method&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.baeldung.com/jdk-com-sun-proxy" target="_blank" rel="noopener">jdk-com-sun-proxy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/master/src/share/classes/sun/misc/ProxyGenerator.java#L313-L317" target="_blank" rel="noopener">ProxyGenerator#sun.misc.ProxyGenerator.saveGeneratedFiles&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/8/docs/technotes/guides/reflection/proxy.html" target="_blank" rel="noopener">jdk8-proxy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/stardustman/java-inspect" target="_blank" rel="noopener">分析所用代码&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/JetBrains/jdk8u_jdk/blob/master/src/share/classes/java/lang/reflect/Proxy.java#L560-L564" target="_blank" rel="noopener">$Proxy0&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.springcloud.io/post/2023-01/jdk-porxy-and-cglib/#gsc.tab=0" target="_blank" rel="noopener">jdk-porxy-and-cglib&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Algorithm Snowflake</title><link>https://cloudedseal.github.io/blog/algorithm-snowflake/</link><pubDate>Sat, 25 Jun 2022 11:43:45 +0800</pubDate><guid>https://cloudedseal.github.io/blog/algorithm-snowflake/</guid><description>
&lt;h1>分布式 ID&lt;/h1>&lt;blockquote>
&lt;p>多个数据中心(一级)，多个节点(一级)，同一个时间点（一级），同时生成 ID(一级)。其实就是数字生成规则而已。没啥了不起的。&lt;/p>
&lt;/blockquote>
&lt;p>snowflake 算法使用一个 64bits 的正整数作为 ID。64bits 正整数 layout 如下：&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/snowflake.jpg" alt="snowflake-i64-layout" loading="lazy" />&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">package&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">stardustman.github.io&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">SnowFlake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 起始的时间戳&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">START_STAMP&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1480166465631L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// sequence number&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// machine id bits&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// data-center id bits&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 每一部分最大值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_SEQUENCE_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_MACHINE_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_BIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_DATA_CENTER_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">~&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_BIT&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 每一部分左移位数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SEQUENCE_BIT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_BIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TIMESTAMP_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_LEFT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_BIT&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">1L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">SnowFlake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_DATA_CENTER_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dataCenterId can&amp;#39;t be greater than MAX_DATA_CENTER_ID or less than 0&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_MACHINE_NUM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IllegalArgumentException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dataCenterId can&amp;#39;t be greater than MAX_DATA_CENTER_ID or less than 0&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// generate next ID&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">nextId&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNewStamp&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">RuntimeException&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;clock moved backwards. Refusing to generate id&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 同一个毫秒内,序号递增，sequence 最大是 4095&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MAX_SEQUENCE_NUM&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 同一毫秒内，序列书已经到最大&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0L&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 阻塞到下一个毫秒，获取新的时间戳&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNextMill&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 不同毫秒，序列号置为 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0L&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// assemble 64bits id&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">currStamp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">START_STAMP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TIMESTAMP_LEFT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dataCenterId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DATA_CENTER_LEFT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">machineId&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MACHINE_LEFT&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="o">|&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sequence&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getNextMill&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNewStamp&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lastStamp&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getNewStamp&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">mill&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getNewStamp&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">SnowFlake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">snowFlake&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">SnowFlake&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">11&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">11&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">snowFlake&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">nextId&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">currentTimeMillis&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MAX_SEQUENCE_NUM&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MAX_MACHINE_NUM&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MAX_DATA_CENTER_NUM&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div></description></item><item><title>Master Pki</title><link>https://cloudedseal.github.io/blog/master-pki/</link><pubDate>Thu, 23 Jun 2022 22:17:42 +0800</pubDate><guid>https://cloudedseal.github.io/blog/master-pki/</guid><description>
&lt;h1>certificate&lt;/h1>&lt;blockquote>
&lt;p>目标：绑定 &lt;code>public key&lt;/code> 和 &lt;code>name&lt;/code>。一切围绕着这个目标来展开。&lt;/p>
&lt;/blockquote>
&lt;h1>图解&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/everything-pki.drawio.svg" alt="pki" loading="lazy" />&lt;/p>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://smallstep.com/blog/everything-pki/" target="_blank" rel="noopener">强烈推荐-everything-pki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://arthurchiao.art/blog/everything-about-pki-zh/" target="_blank" rel="noopener">翻译版-everything-pki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://ubuntu.com/server/docs/security-trust-store#:~:text=The%20CA%20trust%20store%20location,%2Fcerts%2Fca%2Dcertificates." target="_blank" rel="noopener">ubuntu-trust-store-location&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.oreilly.com/library/view/linux-security-cookbook/0596003919/ch04s05.html" target="_blank" rel="noopener">decode-an-ssl-certificate&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://web.chacuo.net/netcsrdecoder/" target="_blank" rel="noopener">csr-在线解析&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/stardustman.keys" target="_blank" rel="noopener">github-public-key&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://geekflare.com/dns-caa-record/" target="_blank" rel="noopener">dns-caa-record&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/X.509" target="_blank" rel="noopener">X.509&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Java Thread Pool Params</title><link>https://cloudedseal.github.io/blog/java-thread-pool-params/</link><pubDate>Mon, 20 Jun 2022 22:47:13 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-thread-pool-params/</guid><description>
&lt;h2>基本策略&lt;span class="hx-absolute -hx-mt-20" id="基本策略">&lt;/span>
&lt;a href="#%e5%9f%ba%e6%9c%ac%e7%ad%96%e7%95%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>关注点分离，任务提交和执行分离。&lt;/li>
&lt;li>延迟策略，延迟初始化。&lt;/li>
&lt;/ol>
&lt;h2>图解&lt;span class="hx-absolute -hx-mt-20" id="图解">&lt;/span>
&lt;a href="#%e5%9b%be%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/java-thread-pool-params.drawio.svg" alt="java-线程池参数" loading="lazy" />&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/OKTW_mZnNJcRBrIFHONR3g" target="_blank" rel="noopener">你管这破玩意叫线程池&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Virtual Memory Address Explore</title><link>https://cloudedseal.github.io/blog/virtual-memory-address-explore/</link><pubDate>Sun, 22 May 2022 16:26:36 +0800</pubDate><guid>https://cloudedseal.github.io/blog/virtual-memory-address-explore/</guid><description>
&lt;h1>virtual memory 是啥？&lt;/h1>&lt;ol>
&lt;li>本质是硬件支持。&lt;/li>
&lt;li>virtual memory ===== MMU =====&amp;gt; physical memory&lt;/li>
&lt;li>OS + 硬件 共同为进程提供 virtual memory 功能。所有程序的内存布局一致。&lt;/li>
&lt;li>为了安全。&lt;/li>
&lt;/ol>
&lt;h1>virtual memory address space layout&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/virtual-memory-address-space.jpg" alt="virtual-memory-address-space" loading="lazy" />&lt;/p>
&lt;h2>代码测试&lt;span class="hx-absolute -hx-mt-20" id="代码测试">&lt;/span>
&lt;a href="#%e4%bb%a3%e7%a0%81%e6%b5%8b%e8%af%95" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;code>cargo new vas-explore&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>main.rs&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="k">use&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">std&lt;/span>::&lt;span class="p">{&lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, world!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sl&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">time&lt;/span>::&lt;span class="n">Duration&lt;/span>::&lt;span class="n">from_millis&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10000000&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>::&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sl&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Goodbye, world!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>cargo build&lt;/li>
&lt;li>./target/debug/vas-explore&lt;/li>
&lt;li>pidof vas-explore&lt;/li>
&lt;/ol>
&lt;h2>/proc/pid/maps&lt;span class="hx-absolute -hx-mt-20" id="procpidmaps">&lt;/span>
&lt;a href="#procpidmaps" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:x86_64-linux-gnu$ pidof vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">75599&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:x86_64-linux-gnu$ cat /proc/75599/maps
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a831000-556a8a837000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a837000-556a8a86e000 r-xp &lt;span class="m">00006000&lt;/span> 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/ vas-explore/target/debug/vas-explore &lt;span class="c1"># text(code segment) segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a86e000-556a8a87c000 r--p 0003d000 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a87d000-556a8a880000 r--p 0004b000 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8a880000-556a8a881000 rw-p 0004e000 08:12 &lt;span class="m">815699&lt;/span> /home/stardust/Desktop/rust/vas-explore/target/debug/vas-explore
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">556a8c01b000-556a8c03c000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>heap&lt;span class="o">]&lt;/span> &lt;span class="c1"># heap segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59636000-7f5e59638000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59638000-7f5e5965a000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5965a000-7f5e597d2000 r-xp &lt;span class="m">00022000&lt;/span> 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e597d2000-7f5e59820000 r--p 0019a000 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59820000-7f5e59824000 r--p 001e7000 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59824000-7f5e59826000 rw-p 001eb000 08:12 &lt;span class="m">533486&lt;/span> /lib/x86_64-linux-gnu/libc-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59826000-7f5e5982a000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982a000-7f5e5982b000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982b000-7f5e5982d000 r-xp &lt;span class="m">00001000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982d000-7f5e5982e000 r--p &lt;span class="m">00003000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982e000-7f5e5982f000 r--p &lt;span class="m">00003000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5982f000-7f5e59830000 rw-p &lt;span class="m">00004000&lt;/span> 08:12 &lt;span class="m">533487&lt;/span> /lib/x86_64-linux-gnu/libdl-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59830000-7f5e59836000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59836000-7f5e59847000 r-xp &lt;span class="m">00006000&lt;/span> 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59847000-7f5e5984d000 r--p &lt;span class="m">00017000&lt;/span> 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5984d000-7f5e5984e000 r--p 0001c000 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5984e000-7f5e5984f000 rw-p 0001d000 08:12 &lt;span class="m">533569&lt;/span> /lib/x86_64-linux-gnu/libpthread-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5984f000-7f5e59853000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59853000-7f5e59856000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59856000-7f5e59868000 r-xp &lt;span class="m">00003000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59868000-7f5e5986c000 r--p &lt;span class="m">00015000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5986c000-7f5e5986d000 r--p &lt;span class="m">00018000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5986d000-7f5e5986e000 rw-p &lt;span class="m">00019000&lt;/span> 08:12 &lt;span class="m">531127&lt;/span> /lib/x86_64-linux-gnu/libgcc_s.so.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e5986e000-7f5e59870000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59885000-7f5e59886000 ---p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59886000-7f5e59888000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59888000-7f5e59889000 r--p &lt;span class="m">00000000&lt;/span> 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e59889000-7f5e598ac000 r-xp &lt;span class="m">00001000&lt;/span> 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598ac000-7f5e598b4000 r--p &lt;span class="m">00024000&lt;/span> 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598b5000-7f5e598b6000 r--p 0002c000 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598b6000-7f5e598b7000 rw-p 0002d000 08:12 &lt;span class="m">533138&lt;/span> /lib/x86_64-linux-gnu/ld-2.31.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7f5e598b7000-7f5e598b8000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7ffe91c09000-7ffe91c2a000 rw-p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>stack&lt;span class="o">]&lt;/span> &lt;span class="c1"># stack segment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7ffe91c38000-7ffe91c3b000 r--p &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>vvar&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">7ffe91c3b000-7ffe91c3c000 r-xp &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>vdso&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ffffffffff600000-ffffffffff601000 --xp &lt;span class="m">00000000&lt;/span> 00:00 &lt;span class="m">0&lt;/span> &lt;span class="o">[&lt;/span>vsyscall&lt;span class="o">]&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>row format&lt;span class="hx-absolute -hx-mt-20" id="row-format">&lt;/span>
&lt;a href="#row-format" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/virtual-memory-address-space-format.jpg" alt="row format" loading="lazy" />&lt;/p>
&lt;h2>text&lt;span class="hx-absolute -hx-mt-20" id="text">&lt;/span>
&lt;a href="#text" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>代码段，程序的可执行代码在这里。&lt;/p>
&lt;h2>stack&lt;span class="hx-absolute -hx-mt-20" id="stack">&lt;/span>
&lt;a href="#stack" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>栈区，从 maps 可以看到 &lt;code>7ffe91c09000-7ffe91c2a000&lt;/code>，这个区域是这个进程的栈区，可读、可写。&lt;code>7ffe91c09000&lt;/code> 这个 48bits 的地址就是虚拟内存地址。为什么是 48bits，因为 amd64 的虚拟地址用 48bits(256TB)地址空间足够了。&lt;/p>
&lt;h2>heap&lt;span class="hx-absolute -hx-mt-20" id="heap">&lt;/span>
&lt;a href="#heap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;code>556a8c01b000-556a8c03c000&lt;/code> 可以看到 heap 的地址，是比较小的地址段。&lt;/p>
&lt;h2>heap 与 stack 会不会相互覆盖？&lt;span class="hx-absolute -hx-mt-20" id="heap-与-stack-会不会相互覆盖">&lt;/span>
&lt;a href="#heap-%e4%b8%8e-stack-%e4%bc%9a%e4%b8%8d%e4%bc%9a%e7%9b%b8%e4%ba%92%e8%a6%86%e7%9b%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>查看 /proc/pid/maps 计算：&lt;/p>
&lt;p>(low address stack - high address heap) / 1024 / 1024 /1024 / 1024
= (0x7ffe91c09000 - 0x556a8c03c000) / 1024 / 1024 /1024 / 1024 = 42TB
可以看出相差有 42TB 的空间。就算真的覆盖了，内核会终止这个程序。这也就是虚拟内存的作用之一，程序可以使用远远超过实际物理内存的空间。&lt;/p>
&lt;h2>rust 程序内存布局分析&lt;span class="hx-absolute -hx-mt-20" id="rust-程序内存布局分析">&lt;/span>
&lt;a href="#rust-%e7%a8%8b%e5%ba%8f%e5%86%85%e5%ad%98%e5%b8%83%e5%b1%80%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="no">MAX&lt;/span>: &lt;span class="kt">u32&lt;/span> &lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">foo&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;hello world&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">to_string&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">let&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">Box&lt;/span>::&lt;span class="n">new&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// string literals 指向 RODATA section 地址
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;RODATA: &lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;hello world!&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// static 变量在 DATA section
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;DATA: (static var): &lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="no">MAX&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// function 在 TEXT section
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;TEXT: (function):&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">foo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">as&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="k">const&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// string 结构体分配在栈上，所以其引用是指向的是一个栈地址
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;STACK: (&amp;amp;hello):&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 通过 deference 获取指向的 heap 上的数据，然后获取其引用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;HEAP: (&amp;amp;(*hello)):&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">hello&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// Box 实现了 Pointer trait, 无须额外 deference
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="fm">println!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;HEAP: (Box impl Pointer trait)&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">,&lt;/span>&lt;span class="si">{:p}&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>查看变量在虚拟内存中的分布&lt;span class="hx-absolute -hx-mt-20" id="查看变量在虚拟内存中的分布">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e5%8f%98%e9%87%8f%e5%9c%a8%e8%99%9a%e6%8b%9f%e5%86%85%e5%ad%98%e4%b8%ad%e7%9a%84%e5%88%86%e5%b8%83" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cargo run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Compiling stack-or-heap v0.1.0 &lt;span class="o">(&lt;/span>/Users/stardust/Downloads/rust-projects/stack-or-heap&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Finished dev &lt;span class="o">[&lt;/span>unoptimized + debuginfo&lt;span class="o">]&lt;/span> target&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> in 0.48s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Running &lt;span class="sb">`&lt;/span>target/debug/stack-or-heap&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RODATA: 0x106df1090
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">DATA: &lt;span class="o">(&lt;/span>static var&lt;span class="o">)&lt;/span>: 0x106df1080
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">TEXT: &lt;span class="o">(&lt;/span>&lt;span class="k">function&lt;/span>&lt;span class="o">)&lt;/span>:0x106db61b0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">STACK: &lt;span class="o">(&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>hello&lt;span class="o">)&lt;/span>:0x7ff7b9149950
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HEAP: &lt;span class="o">(&lt;/span>&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="o">(&lt;/span>*hello&lt;span class="o">))&lt;/span>:0x60000346c050
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HEAP: &lt;span class="o">(&lt;/span>Box impl Pointer trait&lt;span class="o">)&lt;/span>0x60000346c060,0x7ff7b9149968&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.baeldung.com/linux/proc-id-maps" target="_blank" rel="noopener">/proc/pid/maps&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Virtual_address_space" target="_blank" rel="noopener">virtual memory address space&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://elinux.org/images/b/b0/Introduction_to_Memory_Management_in_Linux.pdf" target="_blank" rel="noopener">Memory_Management_in_Linux&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Linux File Permissions</title><link>https://cloudedseal.github.io/blog/linux-file-permissions/</link><pubDate>Sat, 16 Apr 2022 17:33:29 +0800</pubDate><guid>https://cloudedseal.github.io/blog/linux-file-permissions/</guid><description>
&lt;blockquote>
&lt;p>最近在使用 k8s 过程中，需要给 mount 的文件配置权限。
提起 file 的权限只想到 rwx，是不全面的,完整的权限是 rwxsStT。&lt;/p>
&lt;/blockquote>
&lt;h1>权限列表&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/file-permission.jpg" alt="file-permission" loading="lazy" />&lt;/p>
&lt;h1>权限导图&lt;/h1>&lt;p>&lt;img src="https://raw.githubusercontent.com/stardustman/pictures/main/img/Linux-File-Permission-Map.png" alt="file-permission-map" loading="lazy" />&lt;/p>
&lt;h1>特殊权限&lt;/h1>&lt;h2>setuid&lt;span class="hx-absolute -hx-mt-20" id="setuid">&lt;/span>
&lt;a href="#setuid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>&lt;code>Setuid&lt;/code> is a Linux file permission setting that allows a user to &lt;code>execute&lt;/code> that file or program with the permission of the &lt;code>owner&lt;/code> of that file.
很明显，setuid 这个权限要和 execute 权限一起使用，作用于可执行文件。&lt;/p>
&lt;/blockquote>
&lt;p>以 &lt;code>passwd&lt;/code> 这个命令为例：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:bin$ ls -l /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rwsr-xr-x &lt;span class="m">1&lt;/span> root root &lt;span class="m">68208&lt;/span> Jul &lt;span class="m">15&lt;/span> &lt;span class="m">2021&lt;/span> /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:bin$ stat &lt;span class="k">$(&lt;/span>which passwd&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> File: /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Size: &lt;span class="m">68208&lt;/span> Blocks: &lt;span class="m">136&lt;/span> IO Block: &lt;span class="m">4096&lt;/span> regular file
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Device: 812h/2066d Inode: &lt;span class="m">659228&lt;/span> Links: &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: &lt;span class="o">(&lt;/span>4755/-rwsr-xr-x&lt;span class="o">)&lt;/span> Uid: &lt;span class="o">(&lt;/span> 0/ root&lt;span class="o">)&lt;/span> Gid: &lt;span class="o">(&lt;/span> 0/ root&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Access: 2022-04-16 20:28:18.403355543 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Modify: 2021-07-15 06:08:18.000000000 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Change: 2021-10-30 22:33:09.394547633 +0800
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Birth: -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>可以看到 &lt;code>passwd&lt;/code> 这个可执行文件的权限是 rwsr-xr-x 也就是 4755，这才是完整的权限。
rws 中 &lt;code>s&lt;/code> 表明 user 组的权限中启用了 &lt;code>setuid&lt;/code>。s 表明 execute + setuid。
查看 man passwd 得知 user 的密码以及密码相关信息保存在 &lt;a href="https://linuxize.com/post/etc-shadow-file/" target="_blank" rel="noopener">/etc/shadow&lt;/a> 中，但是 /etc/shadow 的权限是:&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:~$ ls -l /etc/shadow
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r----- &lt;span class="m">1&lt;/span> root shadow &lt;span class="m">1669&lt;/span> Mar &lt;span class="m">31&lt;/span> 23:08 /etc/shadow&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到 &lt;code>/etc/shadow&lt;/code> 只允许 &lt;code>root&lt;/code> 用户进行修改。但是执行 &lt;code>passwd&lt;/code> 却可以修改这个文件，这是为什么呢？
因为 &lt;code>passwd&lt;/code> user 权限启用了 setuid，并且 &lt;code>passwd&lt;/code> 这个可执行文件的 &lt;code>owner&lt;/code> 是 &lt;code>root&lt;/code>，这就是 &lt;code>setuid&lt;/code> 的作用了。
由于 &lt;code>passwd&lt;/code> 启用了 &lt;code>setuid&lt;/code>，普通用户，如 &lt;code>stardust&lt;/code> 这个用户在执行 &lt;code>passwd&lt;/code> 这个程序时，会以 &lt;code>root&lt;/code> 用户, 而不是以 &lt;code>stardust&lt;/code> 这个用户运行程序，所以 &lt;code>stardust&lt;/code> 执行 &lt;code>passwd&lt;/code> 是可以修改 &lt;code>/etc/shadow&lt;/code> 这个文件的。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 查看 passwd 启用了 setuid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:~$ ls -l /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rwsr-xr-x &lt;span class="m">1&lt;/span> root root &lt;span class="m">68208&lt;/span> Jul &lt;span class="m">15&lt;/span> &lt;span class="m">2021&lt;/span> /usr/bin/passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 修改 stardust 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:~$ passwd stardust
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Changing password &lt;span class="k">for&lt;/span> stardust.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Current password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 另外一个终端查看&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:Namespaces$ ps -ef &lt;span class="p">|&lt;/span> grep passwd
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root &lt;span class="m">299906&lt;/span> &lt;span class="m">299450&lt;/span> &lt;span class="m">0&lt;/span> 12:03 pts/5 00:00:00 passwd stardust &lt;span class="c1"># 3. 可以看出 passwd stardust 是以 root 用户执行的&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust &lt;span class="m">300029&lt;/span> &lt;span class="m">299940&lt;/span> &lt;span class="m">0&lt;/span> 12:03 pts/6 00:00:00 grep --color&lt;span class="o">=&lt;/span>auto passwd&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>开启 setuid 权限经常使用的命令还有 &lt;code>sudo&lt;/code>。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:~$ ls -al /usr/bin/sudo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rwsr-xr-x &lt;span class="m">1&lt;/span> root root &lt;span class="m">166056&lt;/span> Jan &lt;span class="m">19&lt;/span> &lt;span class="m">2021&lt;/span> /usr/bin/sudo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>setgid&lt;span class="hx-absolute -hx-mt-20" id="setgid">&lt;/span>
&lt;a href="#setgid" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>作用于 file&lt;span class="hx-absolute -hx-mt-20" id="作用于-file">&lt;/span>
&lt;a href="#%e4%bd%9c%e7%94%a8%e4%ba%8e-file" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>setgid 作用于文件和 setuid 所起作用类似。&lt;/p>
&lt;/blockquote>
&lt;h3>作用于 directory&lt;span class="hx-absolute -hx-mt-20" id="作用于-directory">&lt;/span>
&lt;a href="#%e4%bd%9c%e7%94%a8%e4%ba%8e-directory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>在该目录下创建的文件或者目录继承该目录的 group。&lt;/p>
&lt;/blockquote>
&lt;h2>sticky-bit&lt;span class="hx-absolute -hx-mt-20" id="sticky-bit">&lt;/span>
&lt;a href="#sticky-bit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>When &lt;code>sticky bit&lt;/code> is set on a directory, the files in that directory can &lt;code>only&lt;/code> be removed by the owner.
A typical use of this is &lt;code>/tmp/&lt;/code>
The /tmp directory can be written to by any user, but other users cannot delete the files of others.&lt;/p>
&lt;/blockquote>
&lt;h3>/tmp 默认开启了 &lt;code>sticky bit&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="tmp-默认开启了-sticky-bit">&lt;/span>
&lt;a href="#tmp-%e9%bb%98%e8%ae%a4%e5%bc%80%e5%90%af%e4%ba%86-sticky-bit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxrwxrwt &lt;span class="m">25&lt;/span> root root &lt;span class="m">4096&lt;/span> Apr &lt;span class="m">17&lt;/span> 18:22 /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ mkdir -v stardust-sticky
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir: created directory &lt;span class="s1">&amp;#39;stardust-sticky&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld stardust-sticky/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxrwxr-x &lt;span class="m">2&lt;/span> stardust stardust &lt;span class="m">4096&lt;/span> Apr &lt;span class="m">17&lt;/span> 18:22 stardust-sticky/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ su &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ id
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">uid&lt;/span>&lt;span class="o">=&lt;/span>1002&lt;span class="o">(&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nv">gid&lt;/span>&lt;span class="o">=&lt;/span>1002&lt;span class="o">(&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nv">groups&lt;/span>&lt;span class="o">=&lt;/span>1002&lt;span class="o">(&lt;/span>&lt;span class="nb">test&lt;/span>&lt;span class="o">)&lt;/span>,1000&lt;span class="o">(&lt;/span>stardust&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rm -rf /tmp/stardust-sticky
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm: cannot remove &lt;span class="s1">&amp;#39;/tmp/stardust-sticky&amp;#39;&lt;/span>: Operation not permitted &lt;span class="c1"># test 这个 user 无法删除 /tmp/stardust-sticky 这个 directory 的。&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>/tmp 关闭 &lt;code>sticky-bit&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="tmp-关闭-sticky-bit">&lt;/span>
&lt;a href="#tmp-%e5%85%b3%e9%97%ad-sticky-bit" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ sudo chmod o-t /tmp &lt;span class="c1"># 关闭 /tmp 这个目录的 sticky bit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">drwxrwxrwx &lt;span class="m">25&lt;/span> root root &lt;span class="m">4096&lt;/span> Apr &lt;span class="m">17&lt;/span> 18:22 /tmp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ su &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Password:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rm -rf /tmp/stardust-sticky &lt;span class="c1"># test 这个 user 可以成功删除 stardust 这个用户的 /tmp/stardust-sticky 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">stardust@os:tmp$ ls -ld stardust-sticky
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ls: cannot access &lt;span class="s1">&amp;#39;stardust-sticky&amp;#39;&lt;/span>: No such file or directory&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>References&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://www.liquidweb.com/kb/how-do-i-set-up-setuid-setgid-and-sticky-bits-on-linux/" target="_blank" rel="noopener">how-do-i-set-up-setuid-setgid-and-sticky-bits-on-linux/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/understanding-linux-file-permissions/" target="_blank" rel="noopener">understanding-linux-file-permissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://trendoceans.com/what-is-sticky-bit-permission-and-how-to-use-it" target="_blank" rel="noopener">what-is-sticky-bit-permission-and-how-to-use-it&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.liquidweb.com/kb/new-user-tutorial-basic-file-permissions/" target="_blank" rel="noopener">basic-file-permissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/title/File_permissions_and_attributes" target="_blank" rel="noopener">https://wiki.archlinux.org/title/File_permissions_and_attributes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/etc-shadow-file/" target="_blank" rel="noopener">etc-shadow-file&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.man7.org/linux/man-pages/man1/crontab.1.html" target="_blank" rel="noopener">crontab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://linuxize.com/post/how-to-create-users-in-linux-using-the-useradd-command/" target="_blank" rel="noopener">useradd&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>Githubpage Hugo Website</title><link>https://cloudedseal.github.io/blog/github-hugo-website/</link><pubDate>Sat, 19 Mar 2022 16:50:38 +0800</pubDate><guid>https://cloudedseal.github.io/blog/github-hugo-website/</guid><description>
&lt;h1>步骤&lt;/h1>&lt;h2>安装软件&lt;span class="hx-absolute -hx-mt-20" id="安装软件">&lt;/span>
&lt;a href="#%e5%ae%89%e8%a3%85%e8%bd%af%e4%bb%b6" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://git-scm.com/" target="_blank" rel="noopener">git&lt;/a>&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 配置好 git&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git config --global user.name &lt;span class="s2">&amp;#34;your username&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> git config --global user.email &lt;span class="s2">&amp;#34;your email&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>&lt;a href="https://gohugo.io/getting-started/installing/" target="_blank" rel="noopener">hugo&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2>hugo 创建本地 website&lt;span class="hx-absolute -hx-mt-20" id="hugo-创建本地-website">&lt;/span>
&lt;a href="#hugo-%e5%88%9b%e5%bb%ba%e6%9c%ac%e5%9c%b0-website" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>参考：&lt;a href="https://gohugo.io/getting-started/quick-start/" target="_blank" rel="noopener">https://gohugo.io/getting-started/quick-start/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>hugo new site blog # blog 根据需要修改&lt;/li>
&lt;li>cd blog&lt;/li>
&lt;li>git init&lt;/li>
&lt;li>git submodule add &lt;a href="https://github.com/theNewDynamic/gohugo-theme-ananke.git" target="_blank" rel="noopener">https://github.com/theNewDynamic/gohugo-theme-ananke.git&lt;/a> themes/ananke # theme 根据需要修改&lt;/li>
&lt;li>把 content/posts 目录修改为 content/post&lt;/li>
&lt;li>hugo new post/my-first-post.md&lt;/li>
&lt;li>hugo server -D&lt;/li>
&lt;li>根据选择的主题，修改主题相关的配置&lt;/li>
&lt;/ol>
&lt;h2>github 上创建两个公开仓库&lt;span class="hx-absolute -hx-mt-20" id="github-上创建两个公开仓库">&lt;/span>
&lt;a href="#github-%e4%b8%8a%e5%88%9b%e5%bb%ba%e4%b8%a4%e4%b8%aa%e5%85%ac%e5%bc%80%e4%bb%93%e5%ba%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;code>username.github.io&lt;/code>, 部署静态博客的仓库，username 修改为对应的 github 账号 ID。&lt;/li>
&lt;li>&lt;code>blog&lt;/code>，这个保存本地的 &lt;code>blog&lt;/code> 的仓库。&lt;/li>
&lt;li>在 &lt;code>blog&lt;/code> 中执行以下命令:
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git remote add origin git@github.com:username/blog.git &lt;span class="c1"># username 修改为自己账号的 github ID&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git branch -M main
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push -u origin main&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;/ol>
&lt;h2>配置 github actions&lt;span class="hx-absolute -hx-mt-20" id="配置-github-actions">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae-github-actions" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>参考：&lt;a href="https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token" target="_blank" rel="noopener">https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-first-deployment-with-github_token&lt;/a>
使用 actions-hugo 和 actions-gh-pages 自动化部署 &lt;code>blog&lt;/code>
生成的密钥对本地保存就可以。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>生成一对 public key(gh-pages.pub) 和 private key(gh-pages)&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> ssh-keygen -t rsa -b &lt;span class="m">4096&lt;/span> -C &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">$(&lt;/span>git config user.email&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -f gh-pages -N &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># gh-pages.pub 公钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># gh-pages 私钥&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;ol start="2">
&lt;li>添加公钥 &lt;code>gh-pages.pub&lt;/code> 添加到 username.github.io 这个仓库的 deploy key 中，勾选 &lt;code>Allow write access&lt;/code>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/username/username.github.io/settings/keys/new" target="_blank" rel="noopener">https://github.com/username/username.github.io/settings/keys/new&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>添加私钥 &lt;code>gh-pages&lt;/code> 到 &lt;code>blog&lt;/code> 中的 secret&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/username/blog/settings/secrets/actions/new" target="_blank" rel="noopener">https://github.com/username/blog/settings/secrets/actions/new&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>&lt;code>Name&lt;/code> ACTIONS_DEPLOY_KEY&lt;/li>
&lt;li>&lt;code>Value&lt;/code> gh-pages 私钥文件内容&lt;/li>
&lt;/ol>
&lt;h2>本地 &lt;code>blog&lt;/code> 添加 deploy.yml&lt;span class="hx-absolute -hx-mt-20" id="本地-blog-添加-deployyml">&lt;/span>
&lt;a href="#%e6%9c%ac%e5%9c%b0-blog-%e6%b7%bb%e5%8a%a0-deployyml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>mkdir -p .github/workfows/&lt;/li>
&lt;li>touch .github/workflows/deploy.yml&lt;/li>
&lt;li>粘贴一下 yaml 内容&lt;/li>
&lt;li>external_repository 配置项中 username 替换为 github ID&lt;/li>
&lt;/ol>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub Pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Set a branch to deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-20.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">concurrency&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">group&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.workflow }}-${{ github.ref }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.91.2&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># extended: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-deploy-to-external-repository-external_repository&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy_key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.ACTIONS_DEPLOY_KEY }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">username/username.github.io&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># username 替换为 github ID&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch: master # default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gh-pages, 注意修改为部署的分支&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>提交 本地 blog 到 github blog 仓库&lt;span class="hx-absolute -hx-mt-20" id="提交-本地-blog-到-github-blog-仓库">&lt;/span>
&lt;a href="#%e6%8f%90%e4%ba%a4-%e6%9c%ac%e5%9c%b0-blog-%e5%88%b0-github-blog-%e4%bb%93%e5%ba%93" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;commit info&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h1>Reference&lt;/h1>&lt;ol>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/38480155" target="_blank" rel="noopener">github pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://gohugo.io/getting-started/quick-start/" target="_blank" rel="noopener">hugo quickstart&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-hugo" target="_blank" rel="noopener">actions-hugo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-gh-pages" target="_blank" rel="noopener">actions-gh-pages&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/peaceiris/actions-gh-pages#%EF%B8%8F-deploy-to-external-repository-external_repository" target="_blank" rel="noopener">deploy-to-external-repository-external_repository&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>2022-plan</title><link>https://cloudedseal.github.io/blog/2022-plan/</link><pubDate>Mon, 07 Feb 2022 23:32:40 +0800</pubDate><guid>https://cloudedseal.github.io/blog/2022-plan/</guid><description>
&lt;ul>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://www.bilibili.com/video/BV1Cx411S7HJ?p=2" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Cx411S7HJ?p=2&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> &lt;a href="https://see.stanford.edu/Course/CS107" target="_blank" rel="noopener">https://see.stanford.edu/Course/CS107&lt;/a>&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> ComputerSystem:A programer perspective Edtion3 English&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> rust-lang&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox"> kubernetes&lt;/li>
&lt;/ul></description></item><item><title>asm-executable-and-linkable-format</title><link>https://cloudedseal.github.io/blog/asm-executable-and-linkable-format/</link><pubDate>Sat, 25 Dec 2021 19:39:41 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-executable-and-linkable-format/</guid><description>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://github.com/xfenglu/everycodershouldknow#%E5%85%AD%E5%BD%BB%E5%BA%95%E7%90%86%E8%A7%A3%E9%93%BE%E6%8E%A5%E5%99%A8%E7%B3%BB%E5%88%97" target="_blank" rel="noopener">彻底理解连接器系列&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>js-eventloop</title><link>https://cloudedseal.github.io/blog/js-eventloop/</link><pubDate>Sun, 05 Dec 2021 23:24:48 +0800</pubDate><guid>https://cloudedseal.github.io/blog/js-eventloop/</guid><description>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-the-event-loop-callbacks-promises-and-async-await-in-javascript" target="_blank" rel="noopener">understanding-the-event-loop-callbacks-promises-and-async-await-in-javascript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://slidr.io/vakila/learning-functional-programming-with-javascript" target="_blank" rel="noopener">learning-functional-programming-with-javascript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ" target="_blank" rel="noopener">what is event loop?js-conf&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D" target="_blank" rel="noopener">what is event loop demo&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://codewords.recurse.com/issues/one/an-introduction-to-functional-programming" target="_blank" rel="noopener">an-introduction-to-functional-programming&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://medium.com/jspoint/how-javascript-works-in-browser-and-node-ab7d0d09ac2f" target="_blank" rel="noopener">how-javascript-works-in-browser-and-node&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API" target="_blank" rel="noopener">浏览器提供 Web Apis&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>k8s-deploy-container-using-yaml</title><link>https://cloudedseal.github.io/blog/k8s-deploy-container-using-yaml/</link><pubDate>Sun, 28 Nov 2021 10:18:03 +0800</pubDate><guid>https://cloudedseal.github.io/blog/k8s-deploy-container-using-yaml/</guid><description>
&lt;p>kubernetes 作为一个云上的操作系统，要想充分利用，就要了解 kubernetes 提供的功能。告诉系统要搞啥，k8s 帮你搞定这一切，归根结底，不开发 k8s 就是一个 k8s 的用户，知道 k8s 能具体做啥，写好 YAML 就可以。&lt;/p>
&lt;h2>如何在 k8s 上部署服务&lt;span class="hx-absolute -hx-mt-20" id="如何在-k8s-上部署服务">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e5%9c%a8-k8s-%e4%b8%8a%e9%83%a8%e7%bd%b2%e6%9c%8d%e5%8a%a1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>create Deployment&lt;span class="hx-absolute -hx-mt-20" id="create-deployment">&lt;/span>
&lt;a href="#create-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>One of the most common &lt;code>Kubernetes object&lt;/code> is the &lt;code>deployment object&lt;/code>.
The deployment object defines the &lt;code>container spec required&lt;/code>, along with the &lt;code>name&lt;/code> and &lt;code>labels&lt;/code> used by other parts of Kubernetes to discover and connect to the application.&lt;/p>
&lt;/blockquote>
&lt;h4>准备 deployment.yaml&lt;span class="hx-absolute -hx-mt-20" id="准备-deploymentyaml">&lt;/span>
&lt;a href="#%e5%87%86%e5%a4%87-deploymentyaml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>The definition defines how to launch an application called webapp1 using the Docker Image katacoda/docker-http-server that runs on Port 80.&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># object type&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">katacoda/docker-http-server:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>部署到 k8s 中&lt;span class="hx-absolute -hx-mt-20" id="部署到-k8s-中">&lt;/span>
&lt;a href="#%e9%83%a8%e7%bd%b2%e5%88%b0-k8s-%e4%b8%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f &lt;span class="sb">`&lt;/span>deployment.yaml&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看所有 deployment&lt;span class="hx-absolute -hx-mt-20" id="查看所有-deployment">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%89%80%e6%9c%89-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get deployment&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看某一个 deployment&lt;span class="hx-absolute -hx-mt-20" id="查看某一个-deployment">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%80%e4%b8%aa-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl describe deployment &lt;span class="sb">`&lt;/span>webapp1&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>create Service&lt;span class="hx-absolute -hx-mt-20" id="create-service">&lt;/span>
&lt;a href="#create-service" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>kubernetes has powerful networking capabilities that control how applications communicate.
These networking configurations can also be controlled via YAML.&lt;/p>
&lt;/blockquote>
&lt;h4>准备 service.yaml&lt;span class="hx-absolute -hx-mt-20" id="准备-serviceyaml">&lt;/span>
&lt;a href="#%e5%87%86%e5%a4%87-serviceyaml" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>The Service &lt;code>selects&lt;/code> all applications with the label webapp1.
As multiple replicas, or instances, are deployed,
they will be &lt;code>automatically load balanced&lt;/code> based on this common label.
The Service makes the application available via a &lt;code>NodePort&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1-svc&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">type&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">NodePort&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nodePort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>部署到 k8s 中&lt;span class="hx-absolute -hx-mt-20" id="部署到-k8s-中-1">&lt;/span>
&lt;a href="#%e9%83%a8%e7%bd%b2%e5%88%b0-k8s-%e4%b8%ad-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl create -f &lt;span class="sb">`&lt;/span>service.yaml&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看所有 service&lt;span class="hx-absolute -hx-mt-20" id="查看所有-service">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%89%80%e6%9c%89-service" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl get svc&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>查看某一个 deployment&lt;span class="hx-absolute -hx-mt-20" id="查看某一个-deployment-1">&lt;/span>
&lt;a href="#%e6%9f%a5%e7%9c%8b%e6%9f%90%e4%b8%80%e4%b8%aa-deployment-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl describe svc &lt;span class="sb">`&lt;/span>webapp1-svc&lt;span class="sb">`&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>scale &lt;code>Deployment&lt;/code>&lt;span class="hx-absolute -hx-mt-20" id="scale-deployment">&lt;/span>
&lt;a href="#scale-deployment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>配置 replicas&lt;span class="hx-absolute -hx-mt-20" id="配置-replicas">&lt;/span>
&lt;a href="#%e9%85%8d%e7%bd%ae-replicas" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">apiVersion&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">apps/v1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">kind&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deployment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># object type&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">replicas&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">selector&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">matchLabels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">metadata&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">labels&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">app&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spec&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">containers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">webapp1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">katacoda/docker-http-server:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ports&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">containerPort&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">80&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.katacoda.com/courses/kubernetes/kubectl-run-containers" target="_blank" rel="noopener">https://www.katacoda.com/courses/kubernetes/kubectl-run-containers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://matthewpalmer.net/kubernetes-app-developer/articles/kubernetes-apiversion-definition-guide.html" target="_blank" rel="noopener">apiversion&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redhat.com/en/topics/containers/what-is-kubernetes-deployment" target="_blank" rel="noopener">what is k8s deployment?&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>What-happens-type-url-into-browser-and-press-enter</title><link>https://cloudedseal.github.io/blog/what-happens-type-url-into-browser-and-press-enter/</link><pubDate>Sat, 11 Sep 2021 16:21:12 +0800</pubDate><guid>https://cloudedseal.github.io/blog/what-happens-type-url-into-browser-and-press-enter/</guid><description>
&lt;h2>dns query&lt;span class="hx-absolute -hx-mt-20" id="dns-query">&lt;/span>
&lt;a href="#dns-query" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>get the ip of the target domain&lt;/p>
&lt;h3>browser cache&lt;span class="hx-absolute -hx-mt-20" id="browser-cache">&lt;/span>
&lt;a href="#browser-cache" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>firefox(about:networking#dns)
&lt;img src="https://raw.githubusercontent.com/buybyte/pictures/main/img/firefox_dns_cache.png" alt="firefox_dns_cache" loading="lazy" />&lt;/p>
&lt;h3>/etc/hosts&lt;span class="hx-absolute -hx-mt-20" id="etchosts">&lt;/span>
&lt;a href="#etchosts" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>os cache&lt;span class="hx-absolute -hx-mt-20" id="os-cache">&lt;/span>
&lt;a href="#os-cache" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>macos 查看 dns 请求日志 sudo log stream &amp;ndash;predicate &amp;lsquo;process == &amp;ldquo;mDNSResponder&amp;rdquo;&amp;rsquo; &amp;ndash;info&lt;/li>
&lt;/ol>
&lt;h3>dns resolver&lt;span class="hx-absolute -hx-mt-20" id="dns-resolver">&lt;/span>
&lt;a href="#dns-resolver" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>/etc/resolv.conf&lt;/p>
&lt;ol>
&lt;li>arp -a 查看有没有 dns 服务器的 mac 地址&lt;/li>
&lt;li>ARP request for the nameserver&lt;/li>
&lt;li>send dns query to get the ip of the domain&lt;/li>
&lt;/ol>
&lt;h2>arp 获取 gateway 的 mac 地址&lt;span class="hx-absolute -hx-mt-20" id="arp-获取-gateway-的-mac-地址">&lt;/span>
&lt;a href="#arp-%e8%8e%b7%e5%8f%96-gateway-%e7%9a%84-mac-%e5%9c%b0%e5%9d%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>向 gateway 发送 ip packet&lt;span class="hx-absolute -hx-mt-20" id="向-gateway-发送-ip-packet">&lt;/span>
&lt;a href="#%e5%90%91-gateway-%e5%8f%91%e9%80%81-ip-packet" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="http://www.science.smith.edu/~nhowe/262/oldlabs/keyboard.html" target="_blank" rel="noopener">keyborad-interrput&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zhihu.com/question/560616439/answer/2722866208" target="_blank" rel="noopener">Chrome 是怎么判断地址栏输入的东西是不是网址? 这就是第一步😂-omnibox&lt;/a>&lt;/li>
&lt;li>&lt;a href="about:networking#dns" >firefox dns&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fortinet.com/resources/cyberglossary/what-is-arp" target="_blank" rel="noopener">ARP&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>asm-java-jit</title><link>https://cloudedseal.github.io/blog/asm-java-jit/</link><pubDate>Sun, 18 Jul 2021 10:43:46 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-java-jit/</guid><description>
&lt;h2>前言&lt;span class="hx-absolute -hx-mt-20" id="前言">&lt;/span>
&lt;a href="#%e5%89%8d%e8%a8%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>无论多么花里胡哨的功能，最终落地到一台计算机上，都是二进制代码。虽然 java 代码跑在 jvm 平台之上，但是 jvm 只是负责执行 java 自定义的一套 bytecode 的工具，只要能解释字节码，这个工具用什么语言写都是可以的。主流的 HotSpot 虚拟机选择的 C++。&lt;/p>
&lt;h2>二进制代码探析&lt;span class="hx-absolute -hx-mt-20" id="二进制代码探析">&lt;/span>
&lt;a href="#%e4%ba%8c%e8%bf%9b%e5%88%b6%e4%bb%a3%e7%a0%81%e6%8e%a2%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>C 语言举例&lt;span class="hx-absolute -hx-mt-20" id="c-语言举例">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e4%b8%be%e4%be%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>gcc 不开启优化&lt;span class="hx-absolute -hx-mt-20" id="gcc-不开启优化">&lt;/span>
&lt;a href="#gcc-%e4%b8%8d%e5%bc%80%e5%90%af%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span>&lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">long&lt;/span> &lt;span class="nf">desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">a&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%ld&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>具体&lt;a href="https://stardustman.github.io/2019/06/24/asm-how-x86-64-arguments-pass/" target="_blank" rel="noopener">汇编级别的参数传递&lt;/a> 可以参考这篇。x86 架构下&lt;a href="https://stardustman.github.io/2019/05/28/asm-how-x86-function-execute/" target="_blank" rel="noopener">函数如何之行&lt;/a> 可以参考这篇。&lt;/p>
&lt;p>gcc -o descv1 desc.c 之后通过 objdump -d descv11 可以找到 &lt;code>long desc(long a)&lt;/code> 的汇编代码如下：&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-asm" data-lang="asm">&lt;span class="line">&lt;span class="cl">&lt;span class="err">000000000000064&lt;/span>&lt;span class="nf">a&lt;/span> &lt;span class="err">&amp;lt;&lt;/span>&lt;span class="no">desc&lt;/span>&lt;span class="err">&amp;gt;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">64&lt;/span>&lt;span class="nl">a:&lt;/span> &lt;span class="err">55&lt;/span> &lt;span class="nf">push&lt;/span> &lt;span class="nv">%rbp&lt;/span> &lt;span class="c1">;❶ 保存上一个栈帧的 base，进入一个函数的常规操作。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">64&lt;/span>&lt;span class="nl">b:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">89&lt;/span> &lt;span class="nf">e5&lt;/span> &lt;span class="no">mov&lt;/span> &lt;span class="nv">%rsp&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nv">%rbp&lt;/span> &lt;span class="c1">;❷ 开辟新的栈帧
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">64&lt;/span>&lt;span class="nl">e:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">89&lt;/span> &lt;span class="err">7&lt;/span>&lt;span class="nf">d&lt;/span> &lt;span class="no">f8&lt;/span> &lt;span class="no">mov&lt;/span> &lt;span class="nv">%rdi&lt;/span>&lt;span class="p">,-&lt;/span>&lt;span class="mi">0x8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">;❸ 参数 a（rdi）入栈
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">652:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">8&lt;/span>&lt;span class="nf">b&lt;/span> &lt;span class="mi">45&lt;/span> &lt;span class="no">f8&lt;/span> &lt;span class="no">mov&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">0x8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="nv">%rax&lt;/span> &lt;span class="c1">;❹ 参数 a 从栈中复制到 rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">656:&lt;/span> &lt;span class="err">48&lt;/span> &lt;span class="err">83&lt;/span> &lt;span class="nf">e8&lt;/span> &lt;span class="mi">01&lt;/span> &lt;span class="no">sub&lt;/span> &lt;span class="no">$0x1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nv">%rax&lt;/span> &lt;span class="c1">;❺ a = a - 1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">65&lt;/span>&lt;span class="nl">a:&lt;/span> &lt;span class="err">5&lt;/span>&lt;span class="nf">d&lt;/span> &lt;span class="no">pop&lt;/span> &lt;span class="nv">%rbp&lt;/span> &lt;span class="c1">;❻ 弹出 rbp，也即是恢复上一个栈帧的 base
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="err">65&lt;/span>&lt;span class="nl">b:&lt;/span> &lt;span class="nf">c3&lt;/span> &lt;span class="no">retq&lt;/span> &lt;span class="err">;❼&lt;/span> &lt;span class="err">函数返回&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>可以看到 ❸ 和 ❹ 这两步有些多余，这是没有开启优化，gcc 默认采用的方式，把所有的参数先放到栈上。我们可以进行优化。&lt;/p>
&lt;h4>对 gcc 不开启优化选项的汇编代码优化&lt;span class="hx-absolute -hx-mt-20" id="对-gcc-不开启优化选项的汇编代码优化">&lt;/span>
&lt;a href="#%e5%af%b9-gcc-%e4%b8%8d%e5%bc%80%e5%90%af%e4%bc%98%e5%8c%96%e9%80%89%e9%a1%b9%e7%9a%84%e6%b1%87%e7%bc%96%e4%bb%a3%e7%a0%81%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;memory.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/mman.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">int&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x55&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ❶ push rbp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x89&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xe5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ❷ mov rsp, rbp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x89&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// mov edi, eax ??
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x83&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xe8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x01&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// sub $0x1,%rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x5d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// ❻ pop rbp
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0xc3&lt;/span> &lt;span class="c1">// ❼ ret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PROT_WRITE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">PROT_EXEC&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MAP_ANONYMOUS&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">MAP_PRIVATE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">memcpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc_func&lt;/span> &lt;span class="n">p_desc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">p_desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>可以看到在运行中创建 desc 函数，&lt;code>运行时生成可执行的机器码&lt;/code>这种方式其实就是 JIT 实现的核心操作。
同时可以看到，根本没有必要开辟栈帧来执行这个 desc 函数。也就是可以把 ➊ ➋ ➏ 栈帧相关操作删除。&lt;/p>
&lt;/blockquote>
&lt;h4>进一步优化，消除栈帧&lt;span class="hx-absolute -hx-mt-20" id="进一步优化消除栈帧">&lt;/span>
&lt;a href="#%e8%bf%9b%e4%b8%80%e6%ad%a5%e4%bc%98%e5%8c%96%e6%b6%88%e9%99%a4%e6%a0%88%e5%b8%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;memory.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/mman.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="nf">int&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x89&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xf8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// mov edi, eax ??
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x83&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0xe8&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x01&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// sub $0x1,%rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0xc3&lt;/span> &lt;span class="c1">// ❼ ret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">temp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">mmap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">PROT_WRITE&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">PROT_EXEC&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">MAP_ANONYMOUS&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">MAP_PRIVATE&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">memcpy&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">desc_code&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">desc_code&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">desc_func&lt;/span> &lt;span class="n">p_desc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">desc_func&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">p_desc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>可以看到不开辟栈帧，一样可以执行代码。&lt;/p>
&lt;/blockquote>
&lt;h4>lea addr dst 优化&lt;span class="hx-absolute -hx-mt-20" id="lea-addr-dst-优化">&lt;/span>
&lt;a href="#lea-addr-dst-%e4%bc%98%e5%8c%96" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">char&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="p">[]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="mh">0x48&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x8d&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mh">0x47&lt;/span> &lt;span class="mh">0xff&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="c1">// lea -0x1(rdi), rax lea 直接将 rdi 寄存器里的值减去 1 复制给 rax
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="mh">0xc3&lt;/span> &lt;span class="c1">// ret
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">};&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>这个和 gcc -o desc desc.c -O2 结果是一样的。&lt;/p>
&lt;/blockquote>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/TokGNbdnf2XkhHSbneppgg" target="_blank" rel="noopener">java 杂谈之 JIT&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://ref.x86asm.net/coder64.html" target="_blank" rel="noopener">x64-instruction-table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.stanford.edu/class/archive/cs/cs107/cs107.1166/guide_x86-64.html" target="_blank" rel="noopener">https://web.stanford.edu/class/archive/cs/cs107/cs107.1166/guide_x86-64.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cs.brown.edu/courses/cs033/docs/guides/x64_cheatsheet.pdf" target="_blank" rel="noopener">http://cs.brown.edu/courses/cs033/docs/guides/x64_cheatsheet.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/lea" target="_blank" rel="noopener">load-effective-address(lea)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se7/html/jvms-6.html" target="_blank" rel="noopener">java-bytecode&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/appleyuchi/article/details/84036985" target="_blank" rel="noopener">圆圈数字等&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>java-keyword-volatile</title><link>https://cloudedseal.github.io/blog/java-keyword-volatile/</link><pubDate>Fri, 18 Jun 2021 14:54:23 +0800</pubDate><guid>https://cloudedseal.github.io/blog/java-keyword-volatile/</guid><description>
&lt;h2>可见性问题&lt;span class="hx-absolute -hx-mt-20" id="可见性问题">&lt;/span>
&lt;a href="#%e5%8f%af%e8%a7%81%e6%80%a7%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/java/java-volatile.svg" alt="thread stack frame" loading="lazy" />&lt;/p>
&lt;h2>可见性问题思路&lt;span class="hx-absolute -hx-mt-20" id="可见性问题思路">&lt;/span>
&lt;a href="#%e5%8f%af%e8%a7%81%e6%80%a7%e9%97%ae%e9%a2%98%e6%80%9d%e8%b7%af" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/java/thread-visibility.svg" alt="线程可见性问题思路" loading="lazy" />&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://teachcomputerscience.com/von-neumann-harvard-architecture/" target="_blank" rel="noopener">von-neumann-harvard-architecture&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Out-of-order_execution" target="_blank" rel="noopener">out-of-order-execution(dynamic execution)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Instruction_scheduling" target="_blank" rel="noopener">Instruction_scheduling&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/41872203" target="_blank" rel="noopener">X86/GCC memory fence的一些见解&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-semaphores</title><link>https://cloudedseal.github.io/blog/cs-semaphores/</link><pubDate>Tue, 25 May 2021 12:38:06 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-semaphores/</guid><description/></item><item><title>asm-pointers-and-memory</title><link>https://cloudedseal.github.io/blog/asm-pointers-and-memory/</link><pubDate>Wed, 28 Apr 2021 16:04:36 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-pointers-and-memory/</guid><description>
&lt;h2>Basic Pointer&lt;span class="hx-absolute -hx-mt-20" id="basic-pointer">&lt;/span>
&lt;a href="#basic-pointer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>为啥需要 Pointer？&lt;span class="hx-absolute -hx-mt-20" id="为啥需要-pointer">&lt;/span>
&lt;a href="#%e4%b8%ba%e5%95%a5%e9%9c%80%e8%a6%81-pointer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;code>更容易&lt;/code>在不同代码段之间&lt;code>共享&lt;/code>信息，在不同代码段之间来回复制也是可以的。但用指针的形式更好。&lt;/li>
&lt;li>&lt;code>链式&lt;/code>数据结构, 如链表和二叉树。&lt;/li>
&lt;/ol>
&lt;h3>pointer dereference&lt;span class="hx-absolute -hx-mt-20" id="pointer-dereference">&lt;/span>
&lt;a href="#pointer-dereference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>指针必须要有指向的值，才可以 dereference。
没有指向的指针，dereference 时会 runtime error。&lt;/p>
&lt;h3>NULL pointer&lt;span class="hx-absolute -hx-mt-20" id="null-pointer">&lt;/span>
&lt;a href="#null-pointer" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>C -&amp;gt; NULL -&amp;gt; 0 -&amp;gt; false
java -&amp;gt; null&lt;/p>
&lt;h3>pointer assignment&lt;span class="hx-absolute -hx-mt-20" id="pointer-assignment">&lt;/span>
&lt;a href="#pointer-assignment" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>指针赋值&lt;/p>
&lt;h3>copy&lt;span class="hx-absolute -hx-mt-20" id="copy">&lt;/span>
&lt;a href="#copy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>shallow copy&lt;span class="hx-absolute -hx-mt-20" id="shallow-copy">&lt;/span>
&lt;a href="#shallow-copy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>copy reference&lt;/p>
&lt;h4>deep copy&lt;span class="hx-absolute -hx-mt-20" id="deep-copy">&lt;/span>
&lt;a href="#deep-copy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>copy real value&lt;/p>
&lt;h2>two levels&lt;span class="hx-absolute -hx-mt-20" id="two-levels">&lt;/span>
&lt;a href="#two-levels" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/clang/memory_and_pointers-two-levels.svg" alt="two-levels" loading="lazy" />&lt;/p>
&lt;h3>C 语言下指针探析&lt;span class="hx-absolute -hx-mt-20" id="c-语言下指针探析">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e4%b8%8b%e6%8c%87%e9%92%88%e6%8e%a2%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">long&lt;/span> &lt;span class="nf">pointer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">ptr&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">p&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-asm" data-lang="asm">&lt;span class="line">&lt;span class="cl">&lt;span class="nl">pointer:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">pushq&lt;/span> &lt;span class="nv">%rbp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="nv">%rsp&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nv">%rbp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="nv">%rdi&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">24&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">%rax&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="nv">%rax&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="p">-&lt;/span>&lt;span class="mi">8&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nv">%rbp&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">%rax&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">movq&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nv">%rax&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nv">%rax&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">popq&lt;/span> &lt;span class="nv">%rbp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">ret&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/clang/asm-pointer.png" alt="clang-pointer" loading="lazy" />&lt;/p>
&lt;p>由上可知：&lt;code>long *p = (long*)ptr&lt;/code> 被编译成&lt;/p>
&lt;ol>
&lt;li>movq -8(%rbp), %rax %rax 这个寄存器里放的是传来的指针&lt;/li>
&lt;li>movq (%rax), %rax (%rax) 寄存器&lt;code>间接寻址&lt;/code>，也就是取寄存器 %rax 指向的内存里的值。这就是指针在汇编层面的意义。&lt;/li>
&lt;/ol>
&lt;h2>memory&lt;span class="hx-absolute -hx-mt-20" id="memory">&lt;/span>
&lt;a href="#memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>variable -&amp;gt; variable name -&amp;gt; memory
编译后，变量名就没有了。&lt;/p>
&lt;h3>local memory&lt;span class="hx-absolute -hx-mt-20" id="local-memory">&lt;/span>
&lt;a href="#local-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>local memory is allocated automatically on function call and it is deallocated automatically when a function exits.&lt;/p>
&lt;/blockquote>
&lt;p>编译器管理 local memory，size 编译时决定。
Local memory 最根本的性质：相互独立，这是本地内存优点和缺点的根本原因。&lt;/p>
&lt;h4>stack frame&lt;span class="hx-absolute -hx-mt-20" id="stack-frame">&lt;/span>
&lt;a href="#stack-frame" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>local memory 通过调用函数时创建的&lt;code>栈帧&lt;/code>来体现。&lt;/p>
&lt;h5>allocation&lt;span class="hx-absolute -hx-mt-20" id="allocation">&lt;/span>
&lt;a href="#allocation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>栈帧创建时, local variable 一并创建。&lt;/p>
&lt;h5>deallocation&lt;span class="hx-absolute -hx-mt-20" id="deallocation">&lt;/span>
&lt;a href="#deallocation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>栈帧销毁时，local variable 一并销毁。&lt;/p>
&lt;h5>lifetime&lt;span class="hx-absolute -hx-mt-20" id="lifetime">&lt;/span>
&lt;a href="#lifetime" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>随着函数栈帧同生共死。&lt;/p>
&lt;h5>local/stack/automatic variable&lt;span class="hx-absolute -hx-mt-20" id="localstackautomatic-variable">&lt;/span>
&lt;a href="#localstackautomatic-variable" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>栈帧中的变量。
local/automatic 底层经常使用 stack 结构来实现。&lt;/p>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/clang/clang-square-function.png" alt="栈帧-lexical-scope" loading="lazy" />&lt;/p>
&lt;h5>advantage of locals&lt;span class="hx-absolute -hx-mt-20" id="advantage-of-locals">&lt;/span>
&lt;a href="#advantage-of-locals" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>convenient. 函数需要临时的内存空间做计算，计算完毕后，释放。&lt;/li>
&lt;li>efficient. 分配和释放都很快。&lt;/li>
&lt;li>local copies.
&lt;blockquote>
&lt;p>pass by value
local parameters are basically local copies of the information from the caller.
caller 原值
callee 副本，如何修改不影响 caller 中的值
软件设计原则：seperate components&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h5>disadvantage of locals&lt;span class="hx-absolute -hx-mt-20" id="disadvantage-of-locals">&lt;/span>
&lt;a href="#disadvantage-of-locals" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>short lifetime. 和栈帧同生共死。(heap memory 解决)&lt;/li>
&lt;li>restricted communication。caller&amp;rsquo;s parameter -&amp;gt; callee 单向通信。(reference parameter 解决)&lt;/li>
&lt;/ol>
&lt;h3>heap/dynamic memory&lt;span class="hx-absolute -hx-mt-20" id="heapdynamic-memory">&lt;/span>
&lt;a href="#heapdynamic-memory" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>malloc()
free()&lt;/p>
&lt;h4>lifetime&lt;span class="hx-absolute -hx-mt-20" id="lifetime-1">&lt;/span>
&lt;a href="#lifetime-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>程序员自主决定何时申请内存, 申请多少内存，何时释放内存。
runtime 决定。&lt;/p>
&lt;h2>parameter&lt;span class="hx-absolute -hx-mt-20" id="parameter">&lt;/span>
&lt;a href="#parameter" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>pass by value&lt;span class="hx-absolute -hx-mt-20" id="pass-by-value">&lt;/span>
&lt;a href="#pass-by-value" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>local copy
caller parameter(原值)
callee parameter(副本)
separate components&lt;/p>
&lt;h3>pass by reference&lt;span class="hx-absolute -hx-mt-20" id="pass-by-reference">&lt;/span>
&lt;a href="#pass-by-reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>其实就是指针。这个二级结构。
pointer(上级)，把上级传出去，就可以指挥下级了。
pointee(下级)
一级指针也可以理解为 &lt;code>hop&lt;/code>，非常像 router 中的下一跳。&lt;/p>
&lt;h2>ownership&lt;span class="hx-absolute -hx-mt-20" id="ownership">&lt;/span>
&lt;a href="#ownership" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>each blok of memory has &lt;code>exactly one&lt;/code> &amp;ldquo;owner&amp;rdquo; who takes responsibility for &lt;code>deallocating&lt;/code> it.&lt;/p>
&lt;/blockquote>
&lt;h3>caller ownership&lt;span class="hx-absolute -hx-mt-20" id="caller-ownership">&lt;/span>
&lt;a href="#caller-ownership" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>callee allocated and return&lt;span class="hx-absolute -hx-mt-20" id="callee-allocated-and-return">&lt;/span>
&lt;a href="#callee-allocated-and-return" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>Reference&lt;span class="hx-absolute -hx-mt-20" id="reference">&lt;/span>
&lt;a href="#reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="http://cslibrary.stanford.edu/102/" target="_blank" rel="noopener">memory and pointers&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/malloc.3.html" target="_blank" rel="noopener">malloc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/free.3p.html" target="_blank" rel="noopener">free&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://godbolt.org/z/ncfo1q4M7" target="_blank" rel="noopener">square-function&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-condition-variables</title><link>https://cloudedseal.github.io/blog/cs-condition-variables/</link><pubDate>Sun, 18 Apr 2021 20:44:09 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-condition-variables/</guid><description>
&lt;h2>condition variable 是啥？&lt;span class="hx-absolute -hx-mt-20" id="condition-variable-是啥">&lt;/span>
&lt;a href="#condition-variable-%e6%98%af%e5%95%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>condition variable 是啥？本质上就是一个&lt;code>状态变量&lt;/code> +&lt;code>队列&lt;/code>。现实世界中，想要进行下一步的行动，往往需要满足一定的条件(condition)。如十字路口的交通信号灯，信号灯的颜色可以视为状态变量，根据不同的状态，汽车做出不同的选择。一条马路，可以视为&lt;code>队列&lt;/code>。红灯时, 汽车就不能通过，排队等候。绿灯时，汽车才可以通过。在计算机中，同样存在这样的问题，如父进程需要等待&lt;code>子进程完成后(条件)&lt;/code>，才能继续运行。关键就是围绕&lt;code>状态变量&lt;/code>来构建。&lt;/p>
&lt;h2>Reference&lt;span class="hx-absolute -hx-mt-20" id="reference">&lt;/span>
&lt;a href="#reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/pthread_cond_wait.3p.html" target="_blank" rel="noopener">pthread_cond_wait&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man3/pthread_cond_signal.3p.html" target="_blank" rel="noopener">pthread_cond_signal&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-english-words</title><link>https://cloudedseal.github.io/blog/cs-english-words/</link><pubDate>Mon, 28 Dec 2020 15:11:28 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-english-words/</guid><description>
&lt;h2>a&lt;span class="hx-absolute -hx-mt-20" id="a">&lt;/span>
&lt;a href="#a" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>association
&lt;blockquote>
&lt;p>a connection or cooperative link between people or organizations&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>allot
&lt;blockquote>
&lt;p>to assign as a share or portion&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>ad-hoc
&lt;blockquote>
&lt;p>An ad hoc activity or organization is done or formed only because a situation has made it necessary and is &lt;code>not planned in advance&lt;/code>.Ad hoc is a word that originally comes from Latin and means &lt;code>“for this” or &amp;quot;for this situation.&amp;quot;&lt;/code> In current American English it is used to describe something that has been formed or used for a special and immediate purpose, without previous planning.
比如 shell 可以直接执行一次性的命令，这就是 ad-hoc，也可以提前写好 bash 脚本可以反复多次执行，这就是提前计划好的。Ad hoc can be used as an adjective or an adverb.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>at the discretion of
&lt;blockquote>
&lt;p>由 &amp;hellip; 决定，由 &amp;hellip; 自行处理。自由裁量权。哈哈哈。比如 object 怎样回收由 gc 具体实现决定。向线程池 submit 的 command 怎么执行, 由具体的 executor 实现来决定。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>ASAP
&lt;blockquote>
&lt;p>as soon as possible 尽快&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>authoritative
&lt;blockquote>
&lt;p>Someone or something that is authoritative has &lt;code>a lot of knowledge&lt;/code> of a particular subject.
比如 authoritative DNS server 是知道相关 domain 的 resource record 的。给你的信息是可以无脑相信的。😄&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>archive
&lt;blockquote>
&lt;p>The archive or archives are a collection of documents and records that contain &lt;code>historical information&lt;/code>. You can also use archives to refer to the place where archives are stored. 包含历史信息，如 oracle 的 archived redo log.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>abstraction
&lt;blockquote>
&lt;p>An abstraction is a &lt;code>general idea&lt;/code> rather than one &lt;code>relating to a particular object, person, or situation&lt;/code>. 通用的概念，和特定的物体、人、情况无关。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>agent
&lt;blockquote>
&lt;p>An agent acts on your behalf,&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>abundant
&lt;blockquote>
&lt;p>Something that is abundant is present in &lt;code>large quantities&lt;/code>. 大量的&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>approximation
&lt;blockquote>
&lt;p>An approximation is a fact, object, or description which is &lt;code>similar to&lt;/code> something else, but which is &lt;code>not exactly&lt;/code> the same. 近似&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>acquire
&lt;blockquote>
&lt;p>If you acquire something, you &lt;code>buy or obtain&lt;/code> it &lt;code>for yourself&lt;/code>, or someone gives it to you.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>await
&lt;blockquote>
&lt;p>及物动词，后跟无生命的事物，消息，等待特定的东西。conditionObject 的 await 等待满足特定的条件
They are awaiting the outcome of the investigation.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>b&lt;span class="hx-absolute -hx-mt-20" id="b">&lt;/span>
&lt;a href="#b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>bypass&lt;/li>
&lt;li>bound
&lt;blockquote>
&lt;p>Bounds are limits which normally restrict what can happen or what people can do.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>base
&lt;blockquote>
&lt;p>The base of something is its lowest edge or part. same as bottom&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>backlog
&lt;blockquote>
&lt;p>A backlog is a number of things which have not yet been done but which need to be done. 积压的工作量&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>backup
&lt;blockquote>
&lt;p>If you have something such as &lt;code>a second piece of equipment or set of plans as backup&lt;/code>, you have arranged for them to be available for use in case the first one does not work. 一个完蛋后，另一个可以无缝顶上。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>broker
&lt;blockquote>
&lt;p>A broker is a person whose job is to &lt;code>buy and sell&lt;/code> shares, foreign money, or goods for other people. 对于消息中间件就是从 producer 买消息，卖给 consumer。🐶&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>barge
&lt;blockquote>
&lt;p>If you barge into a place or barge through it, you rush or push into it in a rough and rude way. 横冲直撞，非公平锁，获取时上来就 casState&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>c&lt;span class="hx-absolute -hx-mt-20" id="c">&lt;/span>
&lt;a href="#c" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>context
&lt;blockquote>
&lt;p>the circumstances that form the setting for an event, statement, or idea, and in terms of which it can be fully understood and asserted.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>cardinality
&lt;blockquote>
&lt;p>the number of elements in a given mathematical set 给定集合的元素数量&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>compound
&lt;blockquote>
&lt;p>Compound is used to indicate that something consists of two or more parts or things.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>consensus
&lt;blockquote>
&lt;p>A consensus is general agreement among a group of people. 一群人达成的协议。共识。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>coalesce
&lt;blockquote>
&lt;p>If two or more things coalesce, they come together and form a larger group or system. 合并&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>counterbalance
&lt;blockquote>
&lt;p>To counterbalance something means to balance or correct it with something that has &lt;code>an equal but opposite effect&lt;/code> 相等但是有相反作用的&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>compulsory
&lt;blockquote>
&lt;p>If something is compulsory, you &lt;code>must&lt;/code> do it or accept it, because it is the law or because someone in a position of authority says you must.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>d&lt;span class="hx-absolute -hx-mt-20" id="d">&lt;/span>
&lt;a href="#d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>domain
&lt;blockquote>
&lt;p>an area of territory owned or controlled by a ruler or government.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>durable
&lt;blockquote>
&lt;p>Something that is durable is strong and lasts a &lt;code>long time without breaking&lt;/code> or becoming weaker&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>discretion
&lt;blockquote>
&lt;p>If someone in &lt;code>a position of authority&lt;/code> uses their discretion or has the discretion to do something in a particular situation, they have the freedom and authority to decide what to do. 自由裁量权。没有规范的情况下，由有权威的人进行&amp;quot;圣裁&amp;quot;。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>delegation
&lt;blockquote>
&lt;p>A delegation is a group of people who have been sent somewhere to have talks with other people on behalf of a larger group of people.
代表更大集团的一个和其他人交流的小集团&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>defer
&lt;blockquote>
&lt;p>If you defer an event or action, you arrange for it to happen &lt;code>at a later date&lt;/code>, rather than immediately or at the previously planned time. 延迟到将来发生的事情&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>dedicated
&lt;blockquote>
&lt;p>You use dedicated to describe something that is &lt;code>made&lt;/code>, &lt;code>built&lt;/code>, or &lt;code>designed&lt;/code> for one &lt;code>particular purpose or thing&lt;/code>. 专用&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>e&lt;span class="hx-absolute -hx-mt-20" id="e">&lt;/span>
&lt;a href="#e" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>eligible
&lt;blockquote>
&lt;p>qualified to participate or be chosen&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>exception
&lt;blockquote>
&lt;p>An exception is a &lt;code>particular&lt;/code> thing, person, or situation that is &lt;code>not included in a general&lt;/code> statement, judgment, or rule.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>entity
&lt;blockquote>
&lt;p>An entity is something that exists &lt;code>separately&lt;/code> from other things and has a &lt;code>clear identity&lt;/code> of its own. 独立有清晰标识的东西&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>ephemeral
&lt;blockquote>
&lt;p>If you describe something as ephemeral, you mean that it lasts only for a very short time. 只持续较短时间的东西。短暂的。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>exclusive
&lt;blockquote>
&lt;p>If two things are &lt;code>mutually exclusive&lt;/code>, they are separate and very different from each other, so that it is &lt;code>impossible for them to exist or happen together&lt;/code>. 不可共存&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>efficiency
&lt;blockquote>
&lt;p>Efficiency is the quality of being able to do a task successfully, &lt;code>without wasting time or energy&lt;/code>. 何谓效率？不浪费时间或能量。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>entry
&lt;blockquote>
&lt;p>An entry in a diary, account book, computer file, or reference book is &lt;code>a short piece&lt;/code> of writing in it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>evict
&lt;blockquote>
&lt;p>If someone is evicted from the place where they are living, they are &lt;code>forced&lt;/code> to leave it, usually because they have broken a law or contract. 驱逐&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>f&lt;span class="hx-absolute -hx-mt-20" id="f">&lt;/span>
&lt;a href="#f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>failover
&lt;blockquote>
&lt;p>The designed ability of a server, network or other computer system to &lt;code>switch over automatically&lt;/code> to a r&lt;code>edundant or standby&lt;/code> system in order to avoid loss of access in the event of a &lt;code>failure of the primary system&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>fallback
&lt;blockquote>
&lt;p>Someone&amp;rsquo;s fallback position is what they will do &lt;code>if their plans do not succeed, or if something unexpected happens&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>field
&lt;blockquote>
&lt;p>A field is &lt;code>an area of a computer's memory or a program&lt;/code> where data can be entered, edited, or stored.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>factor out
&lt;blockquote>
&lt;p>分解&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>fragemented
&lt;blockquote>
&lt;p>If something fragments or is fragmented, it &lt;code>breaks&lt;/code> or &lt;code>separates&lt;/code> into small &lt;code>pieces&lt;/code> or &lt;code>parts&lt;/code>. 碎片化&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>flexible
&lt;blockquote>
&lt;p>Something or someone that is flexible is able to &lt;code>change easily&lt;/code> and &lt;code>adapt to different conditions and circumstances&lt;/code> as they occur.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>g&lt;span class="hx-absolute -hx-mt-20" id="g">&lt;/span>
&lt;a href="#g" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>gateway
&lt;blockquote>
&lt;p>a gateway converts between protocols&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>h&lt;span class="hx-absolute -hx-mt-20" id="h">&lt;/span>
&lt;a href="#h" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>handle
&lt;blockquote>
&lt;p>A handle is the part of an object such as a tool, bag, or cup that you hold in order to be able to &lt;code>pick up and use&lt;/code> the object.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>heap
&lt;blockquote>
&lt;p>A heap of things is a pile of them, especially a pile arranged in a rather &lt;code>untidy&lt;/code> way. 不规整放置的东西&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>i&lt;span class="hx-absolute -hx-mt-20" id="i">&lt;/span>
&lt;a href="#i" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>independent
&lt;blockquote>
&lt;p>not connected with another or with each other; separate 互不关联，分离的
If one thing or person is independent of another, they are &lt;code>separate and not connected&lt;/code>, so the first one is &lt;code>not affected or influenced&lt;/code> by the second.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>integrity
&lt;blockquote>
&lt;p>The integrity of something such as a group of people or a text is its &lt;code>state of being a united whole&lt;/code>. 完整性&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>interpose
&lt;blockquote>
&lt;p>If you interpose something between &lt;code>two&lt;/code> people or things, you place it &lt;code>between&lt;/code> them. 将 &amp;hellip; 置于两者之间，中间层。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>inherent
&lt;blockquote>
&lt;p>The inherent qualities of something are the necessary and natural parts of it. 天生就有的。资本一出生就带着&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>i.e.
&lt;blockquote>
&lt;p>i.e .is used to introduce a word or sentence which makes what you have just said &lt;code>clearer&lt;/code> or &lt;code>gives details&lt;/code>. 即是,进一步解释清楚&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>interface
&lt;blockquote>
&lt;p>The interface between two subjects or systems is the area in which they &lt;code>affect each other&lt;/code> or &lt;code>have links with each other&lt;/code>. 两个之间的东西，那可不就是中间层么？&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>immense
&lt;blockquote>
&lt;p>If you describe something as immense, you mean that it is extremely large or great.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>interfere
&lt;blockquote>
&lt;p>If you say that someone interferes in a situation, you mean they &lt;code>get involved in&lt;/code> it although it does not concern them and their involvement is not wanted. 干涉&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>j&lt;span class="hx-absolute -hx-mt-20" id="j">&lt;/span>
&lt;a href="#j" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>k&lt;span class="hx-absolute -hx-mt-20" id="k">&lt;/span>
&lt;a href="#k" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>l&lt;span class="hx-absolute -hx-mt-20" id="l">&lt;/span>
&lt;a href="#l" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>lifetime
&lt;blockquote>
&lt;p>A lifetime is the length of time that someone is alive. 某人活着的时间，也就是享年多久。
The lifetime of a particular thing is the period of time that it lasts. 某事物存在的时长。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>leave options open 暂不决定&lt;/li>
&lt;/ol>
&lt;h2>m&lt;span class="hx-absolute -hx-mt-20" id="m">&lt;/span>
&lt;a href="#m" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>majority
&lt;blockquote>
&lt;p>The majority of people or things in a group is more than half of them. 什么是 majority。超过一半的人/事物才叫 majority。zookeeper cluster 推荐 server 数量奇数。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>mediator
&lt;blockquote>
&lt;p>a person or an organization that tries to get agreement &lt;code>between people or groups&lt;/code> who disagree with each other 多方势力之间的调停者&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>n&lt;span class="hx-absolute -hx-mt-20" id="n">&lt;/span>
&lt;a href="#n" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>o&lt;span class="hx-absolute -hx-mt-20" id="o">&lt;/span>
&lt;a href="#o" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>overhead&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>额外的费用、消耗&lt;/p>
&lt;/blockquote>
&lt;ol start="2">
&lt;li>on the fly&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>If you do something on the fly, you do it quickly &lt;code>without&lt;/code> thinking about it &lt;code>or&lt;/code> planning it in advance, especially while something else is happening. 没有提前计划做事情或者不假思索做事情&lt;/p>
&lt;/blockquote>
&lt;ol start="3">
&lt;li>overlap&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>If one thing overlaps another, or if you overlap them, a part of the first thing &lt;code>occupies the same area&lt;/code> as a part of the other thing. You can also say that two things overlap. 空间上重叠&lt;/p>
&lt;/blockquote>
&lt;ol start="4">
&lt;li>outstanding&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Outstanding issues or problems have not yet been resolved. 还没完成的、还没解决的。若用 tcp 确认机制，就是 unacknowledged 的包。&lt;/p>
&lt;/blockquote>
&lt;ol start="5">
&lt;li>offset
&lt;blockquote>
&lt;p>If one thing is offset by another, the effect of the first thing is reduced by the second, so that any advantage or disadvantage is cancelled out. 抵消
Refers to the distance between a base address (starting memory location) and a specific address&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>p&lt;span class="hx-absolute -hx-mt-20" id="p">&lt;/span>
&lt;a href="#p" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>precedence
&lt;blockquote>
&lt;p>the condition of being considered more important than someone or something else; priority in importance, order, or rank. 优先级&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>parenthesis
&lt;blockquote>
&lt;p>括号&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>preemptive
&lt;blockquote>
&lt;p>serving or intended to preempt or forestall something, especially to prevent attack by disabling the enemy.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>populate
&lt;blockquote>
&lt;p>to provide with members 对象填充成员属性&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>parameter
&lt;blockquote>
&lt;p>Parameters are factors or limits which &lt;code>affect&lt;/code> the way that something can be done or made.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>proxy
&lt;blockquote>
&lt;p>A proxy is a person or thing that is acting or being used in the place of someone or something else.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>payload
&lt;blockquote>
&lt;p>The payload of an aircraft or spacecraft is the &lt;code>amount or weight&lt;/code> of things or people that &lt;code>it is carrying&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>proceed
&lt;blockquote>
&lt;p>If you proceed to do something, you do it, often after doing something else first. 先做完一件事，接着做另一件事。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>pending
&lt;blockquote>
&lt;p>If something is done &lt;code>pending a future event&lt;/code>, it is done until that event happens.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>post-
&lt;blockquote>
&lt;p>Post- is used to form words that indicate that something takes place after a particular date, period, or event.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>pre-
&lt;blockquote>
&lt;p>Pre- is used to form words that indicate that something takes place before a particular date, period, or event.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>per se
&lt;blockquote>
&lt;p>Per se means &amp;lsquo;by itself&amp;rsquo; or &amp;lsquo;in itself&amp;rsquo;, and is used when you are talking about the qualities of one thing &lt;code>considered on its own&lt;/code>, rather than in connection with other things. 本身，本质上&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>permissible
&lt;blockquote>
&lt;p>If something is permissible, it is considered to be acceptable because it does not break any laws or rules. 不违反法律和规则即为允许的&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>proxy
&lt;blockquote>
&lt;p>a proxy emulates a service provided by a server that is &lt;code>not contacted directly&lt;/code> by the client itself&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>respectively
&lt;blockquote>
&lt;p>Respectively means in the &lt;code>same order&lt;/code> as the items that you have &lt;code>just mentioned&lt;/code>. 和刚刚提到过的保持一致的顺序。相应地&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>premise
&lt;blockquote>
&lt;p>a premise is something that &lt;code>you suppose is true&lt;/code> and that you use as a basis for developing an idea. 前提&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>privileged
&lt;blockquote>
&lt;p>Someone who is privileged has an &lt;code>advantage or opportunity&lt;/code> that most other people do not have, often because of their wealth or high social class. 特权&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>pile
&lt;blockquote>
&lt;p>A pile of things is a quantity of things that have been put &lt;code>neatly&lt;/code> somewhere so that each thing is &lt;code>on top of the one below&lt;/code>. 一个摞一个 stack&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>portion
&lt;blockquote>
&lt;p>A portion of something is &lt;code>a part of&lt;/code> it.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>possession
&lt;blockquote>
&lt;p>If you are in possession of something, you have it, because you &lt;code>have obtained&lt;/code> it or because it &lt;code>belongs to&lt;/code> you. 占有&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>q&lt;span class="hx-absolute -hx-mt-20" id="q">&lt;/span>
&lt;a href="#q" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>r&lt;span class="hx-absolute -hx-mt-20" id="r">&lt;/span>
&lt;a href="#r" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>relinquish
&lt;blockquote>
&lt;p>to stop having sth, especially when this happens unwillingly 抢占式调度，timer 定时中断，time slice 用完，必须让出 CPU。
voluntarily cease to keep or claim; give up. 自愿放弃
to give over possession or control of : YIELD 放弃控制&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>reference
&lt;blockquote>
&lt;p>A reference is something such as a number or a name that tells you where you can obtain the information you want. 能从中获取信息的东西，隔一层。you-&amp;gt;reference-&amp;gt;info&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>routine
&lt;blockquote>
&lt;p>A routine is a computer program, or part of a program, that performs a specific function.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>s&lt;span class="hx-absolute -hx-mt-20" id="s">&lt;/span>
&lt;a href="#s" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>sparse
&lt;blockquote>
&lt;p>thinly dispersed or scattered, 稀疏的
Something that is sparse is &lt;code>small in number or amount&lt;/code> and &lt;code>spread out over&lt;/code> an area.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>slot
&lt;blockquote>
&lt;p>a long, narrow aperture or slit in a machine for something to be inserted
an allotted place in a arrangement or plan such as a broadcasting schedule.(安排或计划中分配的位置)&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>sandbox
&lt;blockquote>
&lt;p>A sandbox is a place on a computer system where an &lt;code>untrusted program&lt;/code> can be run without affecting other parts of the system.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>suspend
&lt;blockquote>
&lt;p>If you suspend something, you delay it or stop it from happening for a while or until a decision is made about it. 最著名的例子就是进程 suspend，之后 scheduler 再 decide 是不是再次运行。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>shard
&lt;blockquote>
&lt;p>Shards are pieces of broken glass, pottery, or metal. fragement,piece 一片，想象一下把一整块玻璃打碎，分成多个碎片，scale out..&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>standby
&lt;blockquote>
&lt;p>A standby is something or someone that is &lt;code>always ready to be used&lt;/code> if they are needed.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>segment
&lt;blockquote>
&lt;p>A segment of something is &lt;code>one part of&lt;/code> it, considered separately from the rest. 整体的一部分，分段，和余下的部分分开的。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>split
&lt;blockquote>
&lt;p>If something splits or if you split it, it is &lt;code>divided&lt;/code> into two or more parts.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>segregate
&lt;blockquote>
&lt;p>To segregate two groups of people or things means to keep them &lt;code>physically apart from&lt;/code> each other.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>surrogate&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>You use surrogate to describe a person or thing that is given a particular role &lt;code>because the person or thing that should have the role is not available&lt;/code>. 代理&lt;/p>
&lt;/blockquote>
&lt;ol start="11">
&lt;li>sweep&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>If someone makes a sweep of a place, they &lt;code>search&lt;/code> it, usually because they are &lt;code>looking for&lt;/code> people who are hiding or for an illegal activity. 搜寻，扫荡
If lights or someone&amp;rsquo;s eyes sweep an area, they move &lt;code>across&lt;/code> the area from side to side.
磁盘的调度算法之 elevator(SCAN/C-SCAN) 从最内部向最外部(反之亦可)的磁道扫描&lt;/p>
&lt;/blockquote>
&lt;ol start="12">
&lt;li>scatter
&lt;blockquote>
&lt;p>If you scatter things over an area, you throw or drop them so that they spread all over the area.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>t&lt;span class="hx-absolute -hx-mt-20" id="t">&lt;/span>
&lt;a href="#t" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>
&lt;p>ternary&lt;/p>
&lt;blockquote>
&lt;p>composed of three parts 三元&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>trade-off&lt;/p>
&lt;blockquote>
&lt;p>balance achieved between two desirable but incompatible features;
balancing of factors all of which are not attainable at the same time
平衡两个&lt;code>互不兼容的特性&lt;/code>，妥协&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>trade off&lt;/p>
&lt;blockquote>
&lt;p>If you trade off one thing against another, you exchange all or part of one thing for another, as part of a negotiation or compromise. 以 &amp;hellip; 换取&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>traid / triplet&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ticket&lt;/p>
&lt;blockquote>
&lt;p>a certificate or token showing that a fare or admission fee has been paid 票&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>tuple&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>computing a row of values in a &lt;code>relational database&lt;/code> 关系型数据库中的一行就是 tuple&lt;/p>
&lt;/blockquote>
&lt;ol start="6">
&lt;li>transient&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>Transient is used to describe a situation that &lt;code>lasts only a short time&lt;/code> or is &lt;code>constantly changing&lt;/code>. 持续时间很短或者一直在变化的情况，和 persistent 相反&lt;/p>
&lt;/blockquote>
&lt;ol start="7">
&lt;li>transition
&lt;blockquote>
&lt;p>Transition is the process in which something changes &lt;code>from one state to another&lt;/code>. 一个状态变成另一个状态, 这是什么? 这就是状态机。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>trap
&lt;blockquote>
&lt;p>A trap is a &lt;code>device&lt;/code> which is placed somewhere or a hole which is dug somewhere in order to &lt;code>catch&lt;/code> animals or birds.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>u&lt;span class="hx-absolute -hx-mt-20" id="u">&lt;/span>
&lt;a href="#u" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>v&lt;span class="hx-absolute -hx-mt-20" id="v">&lt;/span>
&lt;a href="#v" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>virtualize
&lt;blockquote>
&lt;p>To virtualize means to take something of &lt;code>one form&lt;/code> and make it appear to be &lt;code>another form&lt;/code>. 这不就是 transformer 🤣&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ol>
&lt;h2>w&lt;span class="hx-absolute -hx-mt-20" id="w">&lt;/span>
&lt;a href="#w" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>x&lt;span class="hx-absolute -hx-mt-20" id="x">&lt;/span>
&lt;a href="#x" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>y&lt;span class="hx-absolute -hx-mt-20" id="y">&lt;/span>
&lt;a href="#y" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h2>z&lt;span class="hx-absolute -hx-mt-20" id="z">&lt;/span>
&lt;a href="#z" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2></description></item><item><title>cs-lock</title><link>https://cloudedseal.github.io/blog/cs-lock/</link><pubDate>Mon, 14 Dec 2020 15:20:26 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-lock/</guid><description>
&lt;h2>为啥需要 lock？&lt;span class="hx-absolute -hx-mt-20" id="为啥需要-lock">&lt;/span>
&lt;a href="#%e4%b8%ba%e5%95%a5%e9%9c%80%e8%a6%81-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>多处理器的存在&lt;/li>
&lt;li>中断的存在&lt;/li>
&lt;/ol>
&lt;h2>lock 是啥？&lt;span class="hx-absolute -hx-mt-20" id="lock-是啥">&lt;/span>
&lt;a href="#lock-%e6%98%af%e5%95%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>lock 本质上是一个变量。变量本质上是一块内存。归根结底，lock 就是一块内存，用这块内存来保证线程的原子性。锁有两种状态：&lt;/p>
&lt;ol>
&lt;li>被占用&lt;/li>
&lt;li>空闲&lt;/li>
&lt;/ol>
&lt;h2>critical section&lt;span class="hx-absolute -hx-mt-20" id="critical-section">&lt;/span>
&lt;a href="#critical-section" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">balance&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">balance&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>在多线程环境下，这段代码执行有问题。如何保证任意时刻，只有一个线程在执行这段代码呢？用 lock，获取这个锁之后，才可以执行这段代码，这段代码执行完毕后，释放这个锁。没有获取锁的线程，无法执行这段代码。也可以认为通过 lock 来&lt;code>监视&lt;/code>这段代码任意时刻只能有一个线程执行。不错，monitor 本质上也是一个锁。&lt;/p>
&lt;h2>如何评估估锁&lt;span class="hx-absolute -hx-mt-20" id="如何评估估锁">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e8%af%84%e4%bc%b0%e4%bc%b0%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>mutual exclusion&lt;span class="hx-absolute -hx-mt-20" id="mutual-exclusion">&lt;/span>
&lt;a href="#mutual-exclusion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>锁，提供互斥功能。&lt;/p>
&lt;h3>fairless&lt;span class="hx-absolute -hx-mt-20" id="fairless">&lt;/span>
&lt;a href="#fairless" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>是否会有线程饥饿&lt;/p>
&lt;h3>performance&lt;span class="hx-absolute -hx-mt-20" id="performance">&lt;/span>
&lt;a href="#performance" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h2>构建 Lock&lt;span class="hx-absolute -hx-mt-20" id="构建-lock">&lt;/span>
&lt;a href="#%e6%9e%84%e5%bb%ba-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>控制中断&lt;span class="hx-absolute -hx-mt-20" id="控制中断">&lt;/span>
&lt;a href="#%e6%8e%a7%e5%88%b6%e4%b8%ad%e6%96%ad" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">disableInterrupts&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 关闭中断
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">enableInterrputs&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 开启中断
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;blockquote>
&lt;p>对于单处理器，可以直接来关闭中断、开启中断的方式来实现线程的原子性。
关闭、开启中断的指令是特权指令。&lt;/p>
&lt;/blockquote>
&lt;h4>优点&lt;span class="hx-absolute -hx-mt-20" id="优点">&lt;/span>
&lt;a href="#%e4%bc%98%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>实现简单、便于理解。在关闭中断的情况下，可以保证线程的执行不会被打断。&lt;/p>
&lt;h4>缺点&lt;span class="hx-absolute -hx-mt-20" id="缺点">&lt;/span>
&lt;a href="#%e7%bc%ba%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>需要特权指令。可能被滥用。若一个程序关闭中断后，执行死循环，那么就霸占了 CPU，想要解决这个问题，就只好重启了。&lt;/li>
&lt;li>在多核的处理器上，关闭中断没有用。因为其他线程可以在其他处理器上运行，也可以进入临界区。&lt;/li>
&lt;li>可能会丢失其他的中断信号。一直在处理这个中断，没空搭理其他的中断请求。&lt;/li>
&lt;li>低效。处理中断还是很麻烦的。&lt;/li>
&lt;/ol>
&lt;h3>失败的尝试，只用 Loads/Stores&lt;span class="hx-absolute -hx-mt-20" id="失败的尝试只用-loadsstores">&lt;/span>
&lt;a href="#%e5%a4%b1%e8%b4%a5%e7%9a%84%e5%b0%9d%e8%af%95%e5%8f%aa%e7%94%a8-loadsstores" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock 状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 0 -&amp;gt; lock is available
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 1 -&amp;gt; held
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span> &lt;span class="c1">// 检测锁是否被占用(L1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin-wait(do noting)(L2)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 获取锁(L3)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">mutex&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mutex&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 释放锁(U1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Loads/Stores 分析&lt;span class="hx-absolute -hx-mt-20" id="loadsstores-分析">&lt;/span>
&lt;a href="#loadsstores-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-lock-1.svg" alt="简单的 flag, Loads/Store" loading="lazy" />&lt;/p>
&lt;ol>
&lt;li>上图可见，由于中断的存在，在1.检测锁是否被占用 2.获取锁 这两个步骤之间，可能被打断，这样两个线程都获取了这个锁。&lt;code>这不符合锁的基本功能，没有提供互斥&lt;/code>。无法保证临界区，任意时刻只有一个线程在执行。&lt;/li>
&lt;li>如果一个线程 T1 已经获取了锁，另外一个线程 T2 在获取锁时，会在 L1 处不停的判断锁的状态，这就是在 L1 处 Spin，这就是所谓的 Spin Lock。&lt;/li>
&lt;/ol>
&lt;h3>test-and-set(atomic exchange) 构建锁&lt;span class="hx-absolute -hx-mt-20" id="test-and-setatomic-exchange-构建锁">&lt;/span>
&lt;a href="#test-and-setatomic-exchange-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>因为只是简单的 Loads/Stores(Reads/Writes) 不能构建出 Lock。所以引入和支持构建 Lock 的 test-and-set 指令。在 x86 下，指令是 &lt;a href="https://www.felixcloutier.com/x86/xchg" target="_blank" rel="noopener">xchg&lt;/a>。Exchanges the contents of the destination (first) and source (second) operands. The operands can be &lt;code>two general-purpose registers&lt;/code> or a &lt;code>register and a memory location&lt;/code>. If a memory operand is referenced, the processor’s locking protocol is automatically implemented for the duration of the exchange operation, &lt;code>regardless of the presence or absence of the LOCK prefix or of the value of the IOPL&lt;/code>. 用 &lt;code>xchg&lt;/code> 原子交换来实现。&lt;/p>
&lt;h4>C 语言表示 test-and-set 语义&lt;span class="hx-absolute -hx-mt-20" id="c-语言表示-test-and-set-语义">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e8%a1%a8%e7%a4%ba-test-and-set-%e8%af%ad%e4%b9%89" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">old_ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">old&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">old_ptr&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// fetch old value at old_ptr, Read
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">old_ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// store ’new’ into old_ptr, Write
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// return the old value
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>test-and-set 构建锁&lt;span class="hx-absolute -hx-mt-20" id="test-and-set-构建锁">&lt;/span>
&lt;a href="#test-and-set-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock 状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 0 -&amp;gt; lock is available
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 1 -&amp;gt; held
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span> &lt;span class="c1">// 检测锁是否被占用,同时将 flag 设置为 1(L1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin-wait(do noting)(L2)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 释放锁(U1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>test-and-set spin-lock 分析&lt;span class="hx-absolute -hx-mt-20" id="test-and-set-spin-lock-分析">&lt;/span>
&lt;a href="#test-and-set-spin-lock-%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-lock-test-and-set.svg" alt="test-and-set-spin-lock" loading="lazy" />&lt;/p>
&lt;h5>correctness&lt;span class="hx-absolute -hx-mt-20" id="correctness">&lt;/span>
&lt;a href="#correctness" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>由上图分析可知，test-and-set 这个 spin lock 提供了 mutual exclusion，这是锁的基本功能。&lt;/p>
&lt;h5>fairness&lt;span class="hx-absolute -hx-mt-20" id="fairness">&lt;/span>
&lt;a href="#fairness" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>spin lock 不是公平的，可能导致线程饥饿。&lt;/p>
&lt;h5>performance&lt;span class="hx-absolute -hx-mt-20" id="performance-1">&lt;/span>
&lt;a href="#performance-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;h6>单处理器&lt;span class="hx-absolute -hx-mt-20" id="单处理器">&lt;/span>
&lt;a href="#%e5%8d%95%e5%a4%84%e7%90%86%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;p>对于 spin lock，假定有 N 个线程，其中有一个线程已经持有的这个锁。其余 N - 1 个线程来获取这个锁，当调度器调度一个线程获取锁时，会在时间片(T)内一直死循环判定 TestAndSet 的返回值，直到时间片消耗完，线程切出。会浪费 (N - 1) * T 这么多时间。&lt;/p>
&lt;h6>多处理器&lt;span class="hx-absolute -hx-mt-20" id="多处理器">&lt;/span>
&lt;a href="#%e5%a4%9a%e5%a4%84%e7%90%86%e5%99%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h6>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostem-lock-multi-core-contend-spin-lock.svg" alt="多核处理器-spin-lock" loading="lazy" />&lt;/p>
&lt;p>由图可知，在多处理器环境中，若 critical section 很短，在 Thread1 释放这个锁后，其余的线程是可以获取这个锁的。耗时并不长。&lt;/p>
&lt;h3>Compare-And-Swap(Exchange) 构建锁&lt;span class="hx-absolute -hx-mt-20" id="compare-and-swapexchange-构建锁">&lt;/span>
&lt;a href="#compare-and-swapexchange-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>C 语言表示 Compare-And-Swap 语义&lt;span class="hx-absolute -hx-mt-20" id="c-语言表示-compare-and-swap-语义">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e8%a1%a8%e7%a4%ba-compare-and-swap-%e8%af%ad%e4%b9%89" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">CompareAndSwap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">expected&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">original&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">original&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">expected&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">original&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Compare-And-Swap 构建锁&lt;span class="hx-absolute -hx-mt-20" id="compare-and-swap-构建锁">&lt;/span>
&lt;a href="#compare-and-swap-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock 状态
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 0 -&amp;gt; lock is available
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 1 -&amp;gt; held
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">CompareAndSwap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span> &lt;span class="c1">// 检测锁是否被占用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin-wait(do noting)(L2)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 释放锁(U1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>x86-version of compare-and-swap&lt;span class="hx-absolute -hx-mt-20" id="x86-version-of-compare-and-swap">&lt;/span>
&lt;a href="#x86-version-of-compare-and-swap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">char&lt;/span> &lt;span class="nf">compare_and_swap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">new&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Note that sete sets a ’byte’ not the word
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">__asm__&lt;/span> &lt;span class="nf">__volatile__&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s">&amp;#34; lock&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="c1">// 保证原子性
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="s">&amp;#34; cmpxchgl %2,%1&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="c1">// cmpxchgl new, *ptr, %rax = old，The ZF flag is set if the values in the destination operand and register AL, AX, or EAX are equal; otherwise it is cleared.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="s">&amp;#34; sete %0&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span> &lt;span class="c1">// ZF = 0
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;=q&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;=m&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// output 0,1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;r&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">new&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;m&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="s">&amp;#34;a&amp;#34;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">old&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// input 2,3,4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="s">&amp;#34;memory&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// clobber list
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>Fetch-And-Add 构建锁&lt;span class="hx-absolute -hx-mt-20" id="fetch-and-add-构建锁">&lt;/span>
&lt;a href="#fetch-and-add-%e6%9e%84%e5%bb%ba%e9%94%81" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>C 语言表示 Fetch-And-Add 语义&lt;span class="hx-absolute -hx-mt-20" id="c-语言表示-fetch-and-add-语义">&lt;/span>
&lt;a href="#c-%e8%af%ad%e8%a8%80%e8%a1%a8%e7%a4%ba-fetch-and-add-%e8%af%ad%e4%b9%89" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">FetchAndAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">old&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">old&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">old&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>构建 ticket lock&lt;span class="hx-absolute -hx-mt-20" id="构建-ticket-lock">&lt;/span>
&lt;a href="#%e6%9e%84%e5%bb%ba-ticket-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span>&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">ticket&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">turn&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ticket&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">myturn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">FetchAndAdd&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">ticket&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 获取票号，类似于用票号来给要获取锁的线程排队。拿到票号的最终都会成功获取锁。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">myturn&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;&lt;/span> &lt;span class="c1">// spin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lock&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">turn&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 下一位
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>如何避免 spin？&lt;span class="hx-absolute -hx-mt-20" id="如何避免-spin">&lt;/span>
&lt;a href="#%e5%a6%82%e4%bd%95%e9%81%bf%e5%85%8d-spin" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>yield(放弃 CPU)&lt;span class="hx-absolute -hx-mt-20" id="yield放弃-cpu">&lt;/span>
&lt;a href="#yield%e6%94%be%e5%bc%83-cpu" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">init&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">yield&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// give up the CPU, 线程状态由 running-&amp;gt;ready
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;p>当一个线程无法获取锁时，不是 spin，而是 yield(), 线程状态由 running 变为 ready。
这样就节约了时间。但是无法解决饥饿问题。
若一个线程不停的获取锁，进入临界区，释放锁。
其他的尝试获取锁的线程就会不断的 yield。&lt;/p>
&lt;h3>Using Queues: Sleeping Instead Of Spinning&lt;span class="hx-absolute -hx-mt-20" id="using-queues-sleeping-instead-of-spinning">&lt;/span>
&lt;a href="#using-queues-sleeping-instead-of-spinning" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>Lock With Queues, Test-and-set, Yield, And Wakeup&lt;span class="hx-absolute -hx-mt-20" id="lock-with-queues-test-and-set-yield-and-wakeup">&lt;/span>
&lt;a href="#lock-with-queues-test-and-set-yield-and-wakeup" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">__lock_t&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">guard&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// spin lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">queue_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 队列,需要锁的线程放在队列里，避免饥饿。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="kt">lock_t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">queue_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;&lt;/span> &lt;span class="c1">//acquire guard lock by spinning
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// lock is acquired
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">queue_add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nf">gettid&lt;/span>&lt;span class="p">());&lt;/span> &lt;span class="c1">//1 线程 id 放入队列
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">setpark&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">// 将要 park()！！！！
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">park&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="c1">//3 running-&amp;gt;sleep，被 unpark() 叫醒，就像在这里返回。先去获取 guard 这个 spin lock。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="nf">unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">lock_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 先获取 guard 这个 spin lock
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">TestAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">;&lt;/span> &lt;span class="c1">//acquire guard lock by spinning
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nf">queue_empty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1">// 队列为空，没有等待锁的线程
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// let go of lock; no one wants it
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">unpark&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">queue_remove&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="p">));&lt;/span> &lt;span class="c1">//4 hold lock, 叫醒这个 m-&amp;gt;q 线程。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// (for next thread!)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">guard&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>Spin Lock 的问题&lt;span class="hx-absolute -hx-mt-20" id="spin-lock-的问题">&lt;/span>
&lt;a href="#spin-lock-%e7%9a%84%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>spin forever&lt;span class="hx-absolute -hx-mt-20" id="spin-forever">&lt;/span>
&lt;a href="#spin-forever" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-spin-lock-spin-forever.svg" alt="spin-lock-spin-forever" loading="lazy" />&lt;/p>
&lt;p>线程有优先级的概念。
Thread1(priority1) &amp;lt; Thread(priority2), 在 Thread1 和 Thread2 都是 runnable 情况下，调度器保证先运行 Thread2。
由上图可知，Thread2 可能永远无法获取锁，导致系统挂掉。&lt;/p>
&lt;h3>Priority Inversion&lt;span class="hx-absolute -hx-mt-20" id="priority-inversion">&lt;/span>
&lt;a href="#priority-inversion" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/sync/ostep-spin-lock-priority-inversion.svg" alt="spin-lock-priority-inversion" loading="lazy" />&lt;/p>
&lt;p>有上图可知 Thread2 有可能在 Thread3 之前运行，这不符合线程优先级的要求。
Thread2 和 Thread3 的优先级反转了。&lt;/p>
&lt;h2>two-phrase-lock&lt;span class="hx-absolute -hx-mt-20" id="two-phrase-lock">&lt;/span>
&lt;a href="#two-phrase-lock" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>spin(先旋转一段时间，看能不能获取锁)&lt;/li>
&lt;li>sleep(先旋转一段时间，不能获取锁，线程进入 sleep 状态，放弃 CPU)&lt;/li>
&lt;/ol>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://pages.cs.wisc.edu/~remzi/OSTEP/threads-locks.pdf" target="_blank" rel="noopener">Lock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ibiblio.org/gferg/ldp/GCC-Inline-Assembly-HOWTO.html" target="_blank" rel="noopener">gcc-inline-assembly-howto&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/xchg" target="_blank" rel="noopener">atomic-exchange&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/remzi-arpacidusseau/ostep-code/tree/master/threads-locks" target="_blank" rel="noopener">compare-and-swap-lock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/lock" target="_blank" rel="noopener">lock&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/cmpxchg" target="_blank" rel="noopener">cpmxchg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.felixcloutier.com/x86/xadd" target="_blank" rel="noopener">xadd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://filippo.io/linux-syscall-table/" target="_blank" rel="noopener">system-call-table&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/sched_yield.2.html" target="_blank" rel="noopener">sched_yield&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://man7.org/linux/man-pages/man2/gettid.2.html" target="_blank" rel="noopener">gettid&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>cs-cache</title><link>https://cloudedseal.github.io/blog/cs-cache/</link><pubDate>Tue, 01 Dec 2020 08:40:29 +0800</pubDate><guid>https://cloudedseal.github.io/blog/cs-cache/</guid><description>
&lt;blockquote>
&lt;p>There can be many caches &lt;code>stacked&lt;/code> on top of each other.
Cache 可以一层一层累积。&lt;/p>
&lt;/blockquote>
&lt;ol>
&lt;li>if you miss in one you try in the “lower level cache”
Lower level, mean higher number.
在上层的 Cache miss 了，可以在下层的 Cache 去找。依次类推。&lt;/li>
&lt;li>There can also be &lt;code>separate&lt;/code> caches for data and
instructions. Or the cache can be &lt;code>“unified”&lt;/code>.
数据和指令的 Cache 可以独立，也可以混合。&lt;/li>
&lt;li>to wit:
&lt;ul>
&lt;li>the &lt;code>L1 data cache (d-cache)&lt;/code> is the one nearest processor. It
corresponds to the “data memory” block in our pipeline
diagrams&lt;/li>
&lt;li>the &lt;code>L1 instruction cache (i-cache)&lt;/code> corresponds to the
“instruction memory” block in our pipeline diagrams.&lt;/li>
&lt;li>The L2 sits &lt;code>underneath&lt;/code> the L1s.&lt;/li>
&lt;li>There is often an &lt;code>L3 in modern systems&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2>cache 指导思想&lt;span class="hx-absolute -hx-mt-20" id="cache-指导思想">&lt;/span>
&lt;a href="#cache-%e6%8c%87%e5%af%bc%e6%80%9d%e6%83%b3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>局部性原理&lt;span class="hx-absolute -hx-mt-20" id="局部性原理">&lt;/span>
&lt;a href="#%e5%b1%80%e9%83%a8%e6%80%a7%e5%8e%9f%e7%90%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>temporal locality (时间局部性)&lt;span class="hx-absolute -hx-mt-20" id="temporal-locality-时间局部性">&lt;/span>
&lt;a href="#temporal-locality-%e6%97%b6%e9%97%b4%e5%b1%80%e9%83%a8%e6%80%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Taking advantage of temporal locality:&lt;/p>
&lt;ol>
&lt;li>bring data into cache whenever its referenced&lt;/li>
&lt;li>kick out something that hasn’t been used recently&lt;/li>
&lt;/ol>
&lt;h4>spatial locality (空间局部性)&lt;span class="hx-absolute -hx-mt-20" id="spatial-locality-空间局部性">&lt;/span>
&lt;a href="#spatial-locality-%e7%a9%ba%e9%97%b4%e5%b1%80%e9%83%a8%e6%80%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>Taking advantage of spatial locality:
bring in a block of &lt;code>contiguous data (cacheline)&lt;/code>, not just
the &lt;code>requested data&lt;/code>.&lt;/p>
&lt;h2>基本问题&lt;span class="hx-absolute -hx-mt-20" id="基本问题">&lt;/span>
&lt;a href="#%e5%9f%ba%e6%9c%ac%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>怎样找到 cache 中的数据？&lt;span class="hx-absolute -hx-mt-20" id="怎样找到-cache-中的数据">&lt;/span>
&lt;a href="#%e6%80%8e%e6%a0%b7%e6%89%be%e5%88%b0-cache-%e4%b8%ad%e7%9a%84%e6%95%b0%e6%8d%ae" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;blockquote>
&lt;p>以 32bits 的内存地址，来分析。
(index, offset) 二维坐标来定位一个 byte 的数据。&lt;/p>
&lt;/blockquote>
&lt;h4>index&lt;span class="hx-absolute -hx-mt-20" id="index">&lt;/span>
&lt;a href="#index" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>定位 cache line，可视为&lt;code>横坐标&lt;/code>。
现在可以通过 cache lines = cache size / cache line size 来计算。
index bits = log2(cache lines)&lt;/p>
&lt;h4>offset&lt;span class="hx-absolute -hx-mt-20" id="offset">&lt;/span>
&lt;a href="#offset" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>通过 index 定位到 cache line 后，offset 定位到这个 cache line 的哪一个 byte。
可以视为&lt;code>纵坐标&lt;/code>。
offset bits = log2(offset)&lt;/p>
&lt;h4>tag&lt;span class="hx-absolute -hx-mt-20" id="tag">&lt;/span>
&lt;a href="#tag" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>32bits 剩下的部分。&lt;/p>
&lt;h4>cache line 应该是多大？&lt;span class="hx-absolute -hx-mt-20" id="cache-line-应该是多大">&lt;/span>
&lt;a href="#cache-line-%e5%ba%94%e8%af%a5%e6%98%af%e5%a4%9a%e5%a4%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>这其实是分块(block)思想。在利用空间局部性原理。&lt;/p>
&lt;/blockquote>
&lt;h5>cache line size 越大&lt;span class="hx-absolute -hx-mt-20" id="cache-line-size-越大">&lt;/span>
&lt;a href="#cache-line-size-%e8%b6%8a%e5%a4%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Exploits more spatial locality.&lt;/li>
&lt;li>Large cache lines effectively prefetch data that we have not
explicitly asked for.
更好地利用空间局部性，提前获取将要访问的数据。&lt;/li>
&lt;/ol>
&lt;h5>cache line size 越小&lt;span class="hx-absolute -hx-mt-20" id="cache-line-size-越小">&lt;/span>
&lt;a href="#cache-line-size-%e8%b6%8a%e5%b0%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;ol>
&lt;li>Focuses on temporal locality.&lt;/li>
&lt;li>If there is little spatial locality, large cache lines waste
space and bandwidth.
聚焦在时间局部性上，如果没有较好的空间局部性，提前 &lt;code>fetch&lt;/code> 了数据，那就浪费了空间和带宽。&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/cache_organization.svg" alt="cache_organization" loading="lazy" /> #(cache 组织方式)&lt;/p>
&lt;h3>实例分析&lt;span class="hx-absolute -hx-mt-20" id="实例分析">&lt;/span>
&lt;a href="#%e5%ae%9e%e4%be%8b%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>内存地址 32bits。&lt;/p>
&lt;h4>1024 cache lines, 32 Bytes per line.&lt;span class="hx-absolute -hx-mt-20" id="1024-cache-lines-32-bytes-per-line">&lt;/span>
&lt;a href="#1024-cache-lines-32-bytes-per-line" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>index bits = log2(1024) = 10
offset bits = log2(32) = 5
tags bits = 32 - index - offset = 17&lt;/p>
&lt;h4>32KB cache, 64byte lines&lt;span class="hx-absolute -hx-mt-20" id="32kb-cache-64byte-lines">&lt;/span>
&lt;a href="#32kb-cache-64byte-lines" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>index bits = log2(32KB / 64Bytes) = 9
offset bits = log2(64) = 6
tags bits = 32 - 9 - 6 = 17&lt;/p>
&lt;h4>set 是干什么的？&lt;span class="hx-absolute -hx-mt-20" id="set-是干什么的">&lt;/span>
&lt;a href="#set-%e6%98%af%e5%b9%b2%e4%bb%80%e4%b9%88%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>(set) &lt;code>Associativity&lt;/code> means providing &lt;code>more than one&lt;/code> place for a cache line to live.
One group of lines corresponds to each index.&lt;/p>
&lt;ol>
&lt;li>it is called a “set”&lt;/li>
&lt;li>&lt;code>Each line&lt;/code> in a set is called a &lt;code>“way”&lt;/code>&lt;/li>
&lt;li>N-Way associativity requires N parallel comparators
set = ？&lt;/li>
&lt;/ol>
&lt;p>{% asset_img cache-2-ways-cache.svg 2-ways-cache%}
&lt;img src="https://github.com/stardustman/pictures/raw/main/img/cache-2-ways-cache.svg" alt="2-ways-cache" loading="lazy" />&lt;/p>
&lt;h3>cache 哪一种 address？&lt;span class="hx-absolute -hx-mt-20" id="cache-哪一种-address">&lt;/span>
&lt;a href="#cache-%e5%93%aa%e4%b8%80%e7%a7%8d-address" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>virtual memory address&lt;span class="hx-absolute -hx-mt-20" id="virtual-memory-address">&lt;/span>
&lt;a href="#virtual-memory-address" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h4>physical memory address&lt;span class="hx-absolute -hx-mt-20" id="physical-memory-address">&lt;/span>
&lt;a href="#physical-memory-address" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/cache-memory-address-type.svg" alt="cache-memory-address-type" loading="lazy" /> #(缓存类型)&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="http://cseweb.ucsd.edu/classes/wi12/cse141-a/Slides/09_Cache_intro.pdf" target="_blank" rel="noopener">CSE141-Caching-Intro&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cseweb.ucsd.edu/classes/sp10/cse141/pdf/07/09_CSE141-Caching.pdf" target="_blank" rel="noopener">CSE141-Caching&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cseweb.ucsd.edu/classes/wi12/cse141-a/Slides/10_Caches_detail.pdf" target="_blank" rel="noopener">CSE141-Caches-Details&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.0xffffff.org/2014/01/06/26-x86-cache/" target="_blank" rel="noopener">x86-cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.kernel.org/doc/html/latest/admin-guide/mm/memory-hotplug.html" target="_blank" rel="noopener">memory-hotplug&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/31859105" target="_blank" rel="noopener">Cache 是怎样组织和工作的？&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/sysinternals/downloads/coreinfo" target="_blank" rel="noopener">cacheinfo-windows&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://manybutfinite.com/post/intel-cpu-caches/" target="_blank" rel="noopener">intel-cpu-cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.cs.cornell.edu/courses/cs3410/2013sp/lecture/18-caches3-w.pdf" target="_blank" rel="noopener">caches3-w.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/CPU_cache" target="_blank" rel="noopener">wiki-cpu-cache&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cs.princeton.edu/courses/archive/fall19/cos316/lectures/10-cpu-cache.pdf" target="_blank" rel="noopener">cos316-10-cpu-cache.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://aturing.umcs.maine.edu/~meadow/courses/cos335/Intel-CacheOverview.pdf" target="_blank" rel="noopener">cos355-Intel-CacheOverview&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://zhuanlan.zhihu.com/p/31875174" target="_blank" rel="noopener">细说Cache-L1/L2/L3/TLB&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>acknowledgement-timeout-retry-sequence-number</title><link>https://cloudedseal.github.io/blog/acknowledgement-timeout-retry-sequence-number/</link><pubDate>Mon, 30 Nov 2020 10:54:57 +0800</pubDate><guid>https://cloudedseal.github.io/blog/acknowledgement-timeout-retry-sequence-number/</guid><description>
&lt;h3>TCP 要解决的问题&lt;span class="hx-absolute -hx-mt-20" id="tcp-要解决的问题">&lt;/span>
&lt;a href="#tcp-%e8%a6%81%e8%a7%a3%e5%86%b3%e7%9a%84%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/notions_tcp.svg" alt="notions_tcp" loading="lazy" />&lt;/p>
&lt;h2>references&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/tcp-congestion-control/" target="_blank" rel="noopener">tcp-congestion-control&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.cs.wpi.edu/~rek/Undergrad_Nets/B06/TCP_Congestion_Control.ppt" target="_blank" rel="noopener">tcp-congestion-control-ppt&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>data_and_metadata</title><link>https://cloudedseal.github.io/blog/data-and-metadata/</link><pubDate>Thu, 26 Nov 2020 16:18:52 +0800</pubDate><guid>https://cloudedseal.github.io/blog/data-and-metadata/</guid><description>
&lt;blockquote>
&lt;p>具体问题具体分析，确实非常重要。用正确的思想指导行动，才可事半功倍。
现实中的客观问题有意思的地方在于：无论你选择看得见，还是选择看不见，它都在那里，关键在于有没有人去解决，解决的人有多大的决心。&lt;/p>
&lt;/blockquote>
&lt;h2>data vs metadata&lt;span class="hx-absolute -hx-mt-20" id="data-vs-metadata">&lt;/span>
&lt;a href="#data-vs-metadata" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>Metadata is &amp;ldquo;data that provides information about other data&amp;rdquo;. In other words, it is &amp;ldquo;&lt;code>data about data&lt;/code>&amp;rdquo;.
正如这个世上的人，无论承认与否，分为两类：统治者与被统治者。数据也不可避免的被分为两种：metadata 和 data。&lt;code>数据的数据&lt;/code>和&lt;code>数据&lt;/code>。两者相辅相成。&lt;/p>
&lt;/blockquote>
&lt;h3>physical&lt;span class="hx-absolute -hx-mt-20" id="physical">&lt;/span>
&lt;a href="#physical" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>data 数据(被统治者)
metadata 元数据(统治者)
正如如果被统治者都没有了，那也谈不上统治者。在一个个实体确实存在的情况下，如果没有数据，那也谈不上元数据。&lt;/p>
&lt;h3>logical&lt;span class="hx-absolute -hx-mt-20" id="logical">&lt;/span>
&lt;a href="#logical" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>有时没有实体的存在但是也可以在&lt;code>逻辑上&lt;/code>划分 data 和 Metadata 的。比如网络中的流量。仅仅是用户真正的数据吗？不，其实还有路由器之间的流量, 这部分流量对于整个网络系统的正常运行，不可缺少。&lt;/p>
&lt;p>The control plane is the part of a network that controls &lt;code>how data is forwarded&lt;/code>, while the data plane is the actual forwarding process.
那么网络流量就可以在逻辑上（也就是虚拟的）划分为：
control plane 控制平面（视为 Metadata）
data/forward plane 数据平面（视为 data）
从这个角度来理解，metadata 有控制数据的意思，控制真正的用户数据如何转发。虽然大家都是同一种事物(都是数据包)，但是又不是平等的事物。咳咳，换成人类，似乎也说得过去。&lt;/p>
&lt;h3>structural metadata&lt;span class="hx-absolute -hx-mt-20" id="structural-metadata">&lt;/span>
&lt;a href="#structural-metadata" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>这种结构性的 metadata 相当于一份说明书，来说明哪一个位置的数据是什么数据。&lt;/p>
&lt;h4>java class format&lt;span class="hx-absolute -hx-mt-20" id="java-class-format">&lt;/span>
&lt;a href="#java-class-format" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>Java 代码经过编译，可以的到一个 .class 文件。&lt;/p>
&lt;/blockquote>
&lt;h5>Hello.java&lt;span class="hx-absolute -hx-mt-20" id="hellojava">&lt;/span>
&lt;a href="#hellojava" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Hello&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Hello, World&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h5>Hello.class&lt;span class="hx-absolute -hx-mt-20" id="helloclass">&lt;/span>
&lt;a href="#helloclass" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">root@aliyun:java# xxd Hello.class
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000000: cafe babe &lt;span class="m">0000&lt;/span> &lt;span class="m">0034&lt;/span> 001d 0a00 &lt;span class="m">0600&lt;/span> 0f09 .......4........
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000010: &lt;span class="m">0010&lt;/span> &lt;span class="m">0011&lt;/span> &lt;span class="m">0800&lt;/span> 120a &lt;span class="m">0013&lt;/span> &lt;span class="m">0014&lt;/span> &lt;span class="m">0700&lt;/span> &lt;span class="m">1507&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000020: &lt;span class="m">0016&lt;/span> &lt;span class="m">0100&lt;/span> 063c 696e &lt;span class="m">6974&lt;/span> 3e01 &lt;span class="m">0003&lt;/span> &lt;span class="m">2829&lt;/span> .....&amp;lt;init&amp;gt;...&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000030: &lt;span class="m">5601&lt;/span> &lt;span class="m">0004&lt;/span> 436f &lt;span class="m">6465&lt;/span> &lt;span class="m">0100&lt;/span> 0f4c 696e 654e V...Code...LineN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000040: 756d &lt;span class="m">6265&lt;/span> &lt;span class="m">7254&lt;/span> &lt;span class="m">6162&lt;/span> 6c65 &lt;span class="m">0100&lt;/span> 046d &lt;span class="m">6169&lt;/span> umberTable...mai
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000050: 6e01 &lt;span class="m">0016&lt;/span> 285b 4c6a &lt;span class="m">6176&lt;/span> 612f 6c61 6e67 n...&lt;span class="o">([&lt;/span>Ljava/lang
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000060: 2f53 &lt;span class="m">7472&lt;/span> 696e 673b &lt;span class="m">2956&lt;/span> &lt;span class="m">0100&lt;/span> 0a53 6f75 /String&lt;span class="p">;&lt;/span>&lt;span class="o">)&lt;/span>V...Sou
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000070: &lt;span class="m">7263&lt;/span> &lt;span class="m">6546&lt;/span> 696c &lt;span class="m">6501&lt;/span> 000a &lt;span class="m">4865&lt;/span> 6c6c 6f2e rceFile...Hello.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000080: 6a61 &lt;span class="m">7661&lt;/span> 0c00 &lt;span class="m">0700&lt;/span> &lt;span class="m">0807&lt;/span> &lt;span class="m">0017&lt;/span> 0c00 &lt;span class="m">1800&lt;/span> java............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000090: &lt;span class="m">1901&lt;/span> 000c &lt;span class="m">4865&lt;/span> 6c6c 6f2c &lt;span class="m">2057&lt;/span> 6f72 6c64 ....Hello, World
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000a0: &lt;span class="m">0700&lt;/span> 1a0c 001b 001c &lt;span class="m">0100&lt;/span> &lt;span class="m">0548&lt;/span> 656c 6c6f ...........Hello
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000b0: &lt;span class="m">0100&lt;/span> 106a &lt;span class="m">6176&lt;/span> 612f 6c61 6e67 2f4f 626a ...java/lang/Obj
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000c0: &lt;span class="m">6563&lt;/span> &lt;span class="m">7401&lt;/span> &lt;span class="m">0010&lt;/span> 6a61 &lt;span class="m">7661&lt;/span> 2f6c 616e 672f ect...java/lang/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000d0: &lt;span class="m">5379&lt;/span> &lt;span class="m">7374&lt;/span> 656d &lt;span class="m">0100&lt;/span> 036f &lt;span class="m">7574&lt;/span> &lt;span class="m">0100&lt;/span> 154c System...out...L
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000e0: 6a61 &lt;span class="m">7661&lt;/span> 2f69 6f2f &lt;span class="m">5072&lt;/span> 696e &lt;span class="m">7453&lt;/span> &lt;span class="m">7472&lt;/span> java/io/PrintStr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">000000f0: &lt;span class="m">6561&lt;/span> 6d3b &lt;span class="m">0100&lt;/span> 136a &lt;span class="m">6176&lt;/span> 612f 696f 2f50 eam&lt;span class="p">;&lt;/span>...java/io/P
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000100: &lt;span class="m">7269&lt;/span> 6e74 &lt;span class="m">5374&lt;/span> &lt;span class="m">7265&lt;/span> 616d &lt;span class="m">0100&lt;/span> &lt;span class="m">0770&lt;/span> &lt;span class="m">7269&lt;/span> rintStream...pri
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000110: 6e74 6c6e &lt;span class="m">0100&lt;/span> &lt;span class="m">1528&lt;/span> 4c6a &lt;span class="m">6176&lt;/span> 612f 6c61 ntln...&lt;span class="o">(&lt;/span>Ljava/la
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000120: 6e67 2f53 &lt;span class="m">7472&lt;/span> 696e 673b &lt;span class="m">2956&lt;/span> &lt;span class="m">0021&lt;/span> &lt;span class="m">0005&lt;/span> ng/String&lt;span class="p">;&lt;/span>&lt;span class="o">)&lt;/span>V.!..
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000130: &lt;span class="m">0006&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> &lt;span class="m">0001&lt;/span> &lt;span class="m">0007&lt;/span> &lt;span class="m">0008&lt;/span> &lt;span class="m">0001&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000140: &lt;span class="m">0009&lt;/span> &lt;span class="m">0000&lt;/span> 001d &lt;span class="m">0001&lt;/span> &lt;span class="m">0001&lt;/span> &lt;span class="m">0000&lt;/span> &lt;span class="m">0005&lt;/span> 2ab7 ..............*.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000150: &lt;span class="m">0001&lt;/span> b100 &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> 0a00 &lt;span class="m">0000&lt;/span> &lt;span class="m">0600&lt;/span> &lt;span class="m">0100&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000160: &lt;span class="m">0000&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0900&lt;/span> 0b00 0c00 &lt;span class="m">0100&lt;/span> &lt;span class="m">0900&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000170: &lt;span class="m">2500&lt;/span> &lt;span class="m">0200&lt;/span> &lt;span class="m">0100&lt;/span> &lt;span class="m">0000&lt;/span> 09b2 &lt;span class="m">0002&lt;/span> &lt;span class="m">1203&lt;/span> b600 %...............
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000180: 04b1 &lt;span class="m">0000&lt;/span> &lt;span class="m">0001&lt;/span> 000a &lt;span class="m">0000&lt;/span> 000a &lt;span class="m">0002&lt;/span> &lt;span class="m">0000&lt;/span> ................
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">00000190: &lt;span class="m">0003&lt;/span> &lt;span class="m">0008&lt;/span> &lt;span class="m">0004&lt;/span> &lt;span class="m">0001&lt;/span> 000d &lt;span class="m">0000&lt;/span> &lt;span class="m">0002&lt;/span> 000e ................&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h4>Hello.class 怎样解析的？&lt;span class="hx-absolute -hx-mt-20" id="helloclass-怎样解析的">&lt;/span>
&lt;a href="#helloclass-%e6%80%8e%e6%a0%b7%e8%a7%a3%e6%9e%90%e7%9a%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>如果丢给我一个 .class 文件，其他啥也没有。我也看不懂。但是由于 &lt;code>class file format&lt;/code> 的存在，只要足够耐心，自己也可以解析出 .class 是怎样的。这里的 &lt;a href="https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html" target="_blank" rel="noopener">class format&lt;/a> 就是 Metadata。没有这个格式说明，谁也弄不明白这一堆二进制的 0 和 1 是啥意思。&lt;/p>
&lt;h4>IP header&lt;span class="hx-absolute -hx-mt-20" id="ip-header">&lt;/span>
&lt;a href="#ip-header" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>IP 这个协议是用来将不同局域网组成互联网的。既然通信是双向的，要知道发送者的 IP，接收者的 IP，IP 包的总大小，IP Header 的大小，这个 IP 包能跨越多少路由器(&lt;a href="https://www.cloudflare.com/learning/cdn/glossary/time-to-live-ttl/" target="_blank" rel="noopener">TTL&lt;/a>)，使用的 IP 协议版本，是哪一个上层协议在使用 IP 协议，IP 包是否切分了，切分后怎样组装，校验整个 IP 包在传输过程中是否发生了错误等信息。记在哪里呢？IP header，这个 IP header 就是 Metadata。这些也可理解成控制数据。&lt;/p>
&lt;h4>TCP header&lt;span class="hx-absolute -hx-mt-20" id="tcp-header">&lt;/span>
&lt;a href="#tcp-header" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>TCP 传输层的协议。用来保证数据不丢失且按照发送顺序到达目的地。
怎样保证顺序呢？对每一个字节编号(sequence number)。
怎样保证数据不丢失呢？确认机制(ack)。
怎样找到目的地呢？一个在网络上的计算机，可能同时运行许多程序，如打开浏览器，在线听歌，在线编辑文档等等。用端口号(port number)。
同时，怎样知道接收方现在接收网络包的大小呢？用窗口(window size)。
怎样能知道网络包传输过程是否发生了错误？用校验和(checksum)。
这些信息都存在哪里了呢？TCP header 里。这就是 Metadata。也可理解成控制数据。&lt;/p>
&lt;h4>InnoDB row format&lt;span class="hx-absolute -hx-mt-20" id="innodb-row-format">&lt;/span>
&lt;a href="#innodb-row-format" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>InnoDB 存储表是按行存储的。这只是逻辑上的说法。真正的数据存储是要落到磁盘上的。对于每一行，字段是不是空的，定长还是变长，变长字段的长度，该列的主键，这行数据是哪一个事务操作的，这些记录的相关日志都记在哪里了呢？
不错。这其实也是有相应的说明的。而且，InnoDB 提供了不同的 &lt;a href="https://mariadb.com/kb/en/innodb-row-formats-overview/" target="_blank" rel="noopener">row format&lt;/a>。对用户的每一行来说，该行的 row format 就是 Metadata。当然这就是描述（或者说是控制）该行用户数据的。&lt;/p>
&lt;h2>Reference&lt;span class="hx-absolute -hx-mt-20" id="reference">&lt;/span>
&lt;a href="#reference" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Metadata" target="_blank" rel="noopener">Metadata&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dataedo.com/kb/data-glossary/what-is-metadata" target="_blank" rel="noopener">what-is-metadata&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/network-layer/what-is-the-control-plane/" target="_blank" rel="noopener">what-is-the-control-plane&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html" target="_blank" rel="noopener">class file format&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mariadb.com/kb/en/innodb-row-formats-overview/" target="_blank" rel="noopener">InnoDB-row-format&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/cdn/glossary/time-to-live-ttl/" target="_blank" rel="noopener">TTL&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>notions_of_computer</title><link>https://cloudedseal.github.io/blog/notions-of-computer/</link><pubDate>Tue, 24 Nov 2020 13:25:13 +0800</pubDate><guid>https://cloudedseal.github.io/blog/notions-of-computer/</guid><description>
&lt;h2>指导思想&lt;span class="hx-absolute -hx-mt-20" id="指导思想">&lt;/span>
&lt;a href="#%e6%8c%87%e5%af%bc%e6%80%9d%e6%83%b3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>计算机是人发明的。由计算机组成的世界，其设计思想很明显要借鉴现实中的东西。正如一位伟人的著作开篇提出 &lt;code>“谁是我们的敌人？谁是我们的朋友？这个问题是革命的首要问题。中国过去一切革命斗争成效甚少，其基本原因就是因为不能团结真正的朋友，以攻击真正的敌人。”&lt;/code>那么应对计算机，什么才是计算机组织背后的指导思想呢？个人认为有三个：1. hierarchy(层级)、2：group(分组)、3：order(有序)&lt;/p>
&lt;h3>hierarchy(层级)&lt;span class="hx-absolute -hx-mt-20" id="hierarchy层级">&lt;/span>
&lt;a href="#hierarchy%e5%b1%82%e7%ba%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;em>hierarchy&lt;/em> 在这里也可以理解成等级。层级结构最重要的一点就是最顶层在哪？用 &lt;code>tree&lt;/code> 理解就是，&lt;code>root&lt;/code> 在哪？这个信息整个层级都要知道。哈哈，是不是挺像皇帝。😄&lt;/p>
&lt;h4>面对数量庞大的相同事物，怎样管理呢？用什么组织方式呢？&lt;span class="hx-absolute -hx-mt-20" id="面对数量庞大的相同事物怎样管理呢用什么组织方式呢">&lt;/span>
&lt;a href="#%e9%9d%a2%e5%af%b9%e6%95%b0%e9%87%8f%e5%ba%9e%e5%a4%a7%e7%9a%84%e7%9b%b8%e5%90%8c%e4%ba%8b%e7%89%a9%e6%80%8e%e6%a0%b7%e7%ae%a1%e7%90%86%e5%91%a2%e7%94%a8%e4%bb%80%e4%b9%88%e7%bb%84%e7%bb%87%e6%96%b9%e5%bc%8f%e5%91%a2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>这里的数量庞大要是成千上万的。比如中国有十几亿人口、中国有 960 万平方公里的土地，等等。首先简述一下历史上的经验，比如西周，采用分封制。天子、诸侯、卿、士、平民等所有人组成一个金字塔形状。每一个层级的人&lt;code>权力大小不同&lt;/code>、&lt;code>承担的责任和义务也不同&lt;/code>。对于土地则是封邦建国。分封制可以对人口、土地等进行有效的统治。更直观的理解就是形成稳定的阶级。到这是不是立刻就能想到由于每种存储的&lt;code>价格&lt;/code>、&lt;code>速度&lt;/code>、&lt;code>容量&lt;/code>不同，应用在哪个地方也不同。也是组织成一个层级结构来构成整个计算机的存储系统。&lt;/p>
&lt;p>从数学的角度分析就是：用&lt;code>对数的方式&lt;/code>搞定数量庞大的事物的管理。不管数量多庞大，用对数搞一下，数量立刻就降下来。比如 log&lt;sub>2&lt;/sub>4294967296 = 32。对数的发明、解析几何的创立和微积分的建立是17世纪数学的三大成就。&lt;/p>
&lt;h5>域名组织方式&lt;span class="hx-absolute -hx-mt-20" id="域名组织方式">&lt;/span>
&lt;a href="#%e5%9f%9f%e5%90%8d%e7%bb%84%e7%bb%87%e6%96%b9%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;blockquote>
&lt;p>In 2017, 330.6 million domain names had been registered.
2017 年已经有 33 多亿的注册域名了。&lt;/p>
&lt;/blockquote>
&lt;p>如果让你组织数量如此庞大的域名，你该怎样组织呢？没错，也是组织成层级结构，来管理数量如此庞大的域名。一开始的解决方法是直接把域名信息放在 /etc/hosts 文件，随着域名增多，单独的一个文件没法满足要求，数量太多了嘛，放在一个文件，且不论能不能全部存储，查找都是一个大问题。&lt;/p>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/dns-root-server.png" alt="domain-name-hierarchy" loading="lazy" />&lt;/p>
&lt;h5>IP 分配管理方式&lt;span class="hx-absolute -hx-mt-20" id="ip-分配管理方式">&lt;/span>
&lt;a href="#ip-%e5%88%86%e9%85%8d%e7%ae%a1%e7%90%86%e6%96%b9%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>IP Addresses are &lt;code>unique identifiers&lt;/code> used to determine who is who on the Internet.
IP 地址是一个 32bit 的无符号整数。范围是 [0,2^32-1], 一共有 4294967296 个整数。将近 43 亿个 ip 地址(这里不考虑公网、私网)该怎样分配使用呢？由 &lt;a href="https://www.iana.org/numbers" target="_blank" rel="noopener">Internet Assigned Numbers Authority (IANA)&lt;/a> 负责协调管理所有 IP，同时负责分配自治系统号(Autonomous System number)。&lt;/p>
&lt;blockquote>
&lt;p>Both IPv4 and IPv6 addresses are generally assigned in a &lt;code>hierarchical manner&lt;/code>. Users are assigned IP addresses by &lt;code>Internet service providers (ISPs)&lt;/code>. ISPs obtain allocations of IP addresses from a &lt;code>local Internet registry (LIR&lt;/code>) or &lt;code>National Internet Registry (NIR)&lt;/code>, or from their appropriate &lt;code>Regional Internet Registry (RIR)&lt;/code>:&lt;/p>
&lt;/blockquote>
&lt;p>数量庞大的 IP 地址怎样分配管理呢？组成层级结构。通过一级一级&lt;code>委托&lt;/code>，管理数量庞大的 IP 地址。&lt;/p>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/IP_AS_Number.svg" alt="地址分配管理" loading="lazy" />&lt;/p>
&lt;h5>文件组织方式&lt;span class="hx-absolute -hx-mt-20" id="文件组织方式">&lt;/span>
&lt;a href="#%e6%96%87%e4%bb%b6%e7%bb%84%e7%bb%87%e6%96%b9%e5%bc%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/file_system_hierarchy.png" alt="file system hierarchy" loading="lazy" />&lt;/p>
&lt;h4>不同性质的事物，怎样组织呢？&lt;span class="hx-absolute -hx-mt-20" id="不同性质的事物怎样组织呢">&lt;/span>
&lt;a href="#%e4%b8%8d%e5%90%8c%e6%80%a7%e8%b4%a8%e7%9a%84%e4%ba%8b%e7%89%a9%e6%80%8e%e6%a0%b7%e7%bb%84%e7%bb%87%e5%91%a2" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>memory hierarchy&lt;span class="hx-absolute -hx-mt-20" id="memory-hierarchy">&lt;/span>
&lt;a href="#memory-hierarchy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/ComputerMemoryHierarchy.svg" alt="ComputerMemoryHierarchy" loading="lazy" />&lt;/p>
&lt;h5>Typical memory hierarchy&lt;span class="hx-absolute -hx-mt-20" id="typical-memory-hierarchy">&lt;/span>
&lt;a href="#typical-memory-hierarchy" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/typical-memory-hierarchy.png" alt=" typical-memory-hierarchy " loading="lazy" />&lt;/p>
&lt;h5>OSI 参考模型&lt;span class="hx-absolute -hx-mt-20" id="osi-参考模型">&lt;/span>
&lt;a href="#osi-%e5%8f%82%e8%80%83%e6%a8%a1%e5%9e%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>网络每一层，功能不同。&lt;/p>
&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/network-layer.svg" alt="OSI VS TCP/IP" loading="lazy" />&lt;/p>
&lt;h3>group(分组)&lt;span class="hx-absolute -hx-mt-20" id="group分组">&lt;/span>
&lt;a href="#group%e5%88%86%e7%bb%84" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>体量庞大的东西的基层组织。&lt;/p>
&lt;ol>
&lt;li>可视为层级结构的最底层。block、page、packet、fragment、set&lt;/li>
&lt;li>也可以视为不同的模块。module、segment、section&lt;/li>
&lt;li>也可以理解成分类。sort&lt;/li>
&lt;/ol>
&lt;h4>域名&lt;span class="hx-absolute -hx-mt-20" id="域名">&lt;/span>
&lt;a href="#%e5%9f%9f%e5%90%8d" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>对域名来说一个分组可以理解成一个&lt;code>一级域名&lt;/code>下的所有域名。如 &lt;code>org&lt;/code>下的域名。当然也可以理解成一个 &lt;code>二级域名&lt;/code>下的所有域名。如 &lt;code>google.com&lt;/code> 下 Google 家所有的域名。依次类推。可以看出，同种事物进行层级组织，本身就是在进行分组。&lt;/p>
&lt;h4>IP 地址&lt;span class="hx-absolute -hx-mt-20" id="ip-地址">&lt;/span>
&lt;a href="#ip-%e5%9c%b0%e5%9d%80" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>An autonomous system (AS) is a very large network or group of networks with a single routing policy. Each AS is assigned a unique ASN, which is a number that identifies the AS.&lt;/p>
&lt;/blockquote>
&lt;p>没错。IP 地址也是通过一个一个的实体来管理使用的，一个实体就是一个自治系统。(autonomous system)。比如中国移动这个运营商的 AS Number 是 &lt;a href="https://ipinfo.io/AS56041" target="_blank" rel="noopener">56041&lt;/a>，管理一系列 IP 地址。再比如 Apple 的 AS Number 是 &lt;a href="https://ipinfo.io/AS714" target="_blank" rel="noopener">714&lt;/a>。&lt;/p>
&lt;h4>Internet Protocol&lt;span class="hx-absolute -hx-mt-20" id="internet-protocol">&lt;/span>
&lt;a href="#internet-protocol" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>Data traversing the Internet is &lt;code>divided into&lt;/code> smaller pieces, called &lt;code>packets&lt;/code>. IP information is attached to &lt;code>each packet&lt;/code>, and this information helps &lt;code>routers&lt;/code> to send packets to the right place.&lt;/p>
&lt;/blockquote>
&lt;p>通过网络发送大量的信息，也是拆分成一个个 &lt;code>packet&lt;/code>。这里也可以理解成分组。&lt;/p>
&lt;h4>文件系统&lt;span class="hx-absolute -hx-mt-20" id="文件系统">&lt;/span>
&lt;a href="#%e6%96%87%e4%bb%b6%e7%b3%bb%e7%bb%9f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>文件系统管理磁盘空间。磁盘空间划分为一个个相同大小的 Block。一个扇区是 512Bytes，这可以视为一个分组。&lt;/p>
&lt;h4>网络流量&lt;span class="hx-absolute -hx-mt-20" id="网络流量">&lt;/span>
&lt;a href="#%e7%bd%91%e7%bb%9c%e6%b5%81%e9%87%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>Ports are virtual places within an operating system where network connections start and end. They help computers sort the &lt;code>network traffic&lt;/code> they receive.&lt;/p>
&lt;/blockquote>
&lt;p>计算机从网络上接收的 packet 怎样判定哪一个是接收者呢？对网络流量分类就行。怎样分类呢？用端口号，不同的接收者，接收不同端口的流量。&lt;/p>
&lt;h4>subnet&lt;span class="hx-absolute -hx-mt-20" id="subnet">&lt;/span>
&lt;a href="#subnet" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;blockquote>
&lt;p>Think of the Internet as a network of networks: computers are connected to each other within networks, and these networks connect to other networks. This enables these computers to connect with other computers both near and far.
A network is a group of two or more connected computing devices.&lt;/p>
&lt;/blockquote>
&lt;p>划分子网，也是在分组。&lt;/p>
&lt;h3>order(顺序)&lt;span class="hx-absolute -hx-mt-20" id="order顺序">&lt;/span>
&lt;a href="#order%e9%a1%ba%e5%ba%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>顺序、分支、循环。顺序就是程序三大结构之一。没有秩序的世界是混乱的，啥事也做不成。
TCP 协议目的之一就是要保证计算机接收到的网络包的顺序。怎样保证顺序呢？非常简单，为每一个 Byte 编号就行。&lt;/p>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/memory-hierarchy-design-and-its-characteristics/" target="_blank" rel="noopener">memory-hierarchy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/dns/glossary/what-is-a-domain-name/" target="_blank" rel="noopener">what-is-a-domain-name&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/dns/glossary/dns-root-server/" target="_blank" rel="noopener">dns-root-server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.iana.org/numbers" target="_blank" rel="noopener">ip number resources&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tools.ietf.org/html/rfc7020" target="_blank" rel="noopener">The Internet Numbers Registry System&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Filesystem_Hierarchy_Standard" target="_blank" rel="noopener">Filesystem_Hierarchy_Standard&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.pathname.com/fhs/2.2/" target="_blank" rel="noopener">Filesystem Hierarchy Standard List&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/network-layer/what-is-the-network-layer/" target="_blank" rel="noopener">network-layer&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/network-layer/internet-protocol/" target="_blank" rel="noopener">internet-protocol&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/network-layer/what-is-a-computer-port/" target="_blank" rel="noopener">what-is-a-computer-port&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cloudflare.com/learning/ddos/glossary/open-systems-interconnection-model-osi/" target="_blank" rel="noopener">open-systems-interconnection-model&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://cseweb.ucsd.edu/classes/sp10/cse141/pdf/07/09_CSE141-Caching.pdf" target="_blank" rel="noopener">CSE141-Caching&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>data-structure-btree</title><link>https://cloudedseal.github.io/blog/data-structure-btree/</link><pubDate>Fri, 12 Jun 2020 14:11:02 +0800</pubDate><guid>https://cloudedseal.github.io/blog/data-structure-btree/</guid><description>
&lt;h3>B-tree 特性&lt;span class="hx-absolute -hx-mt-20" id="b-tree-特性">&lt;/span>
&lt;a href="#b-tree-%e7%89%b9%e6%80%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>所有的 leaves 都在同一层级。&lt;/li>
&lt;li>B-Tree 被 minimum degree t 定义。t 依赖于 disk block size。&lt;/li>
&lt;li>除了 root，其余节点必须至少有 t - 1 个 key。root 节点至少有 1 个 key。&lt;/li>
&lt;li>所有的节点（包括 root）最多有 2t - 1 个 key。&lt;/li>
&lt;li>某一个节点的子节点的个数 = 这个节点的 key 的个数 + 1。&lt;/li>
&lt;li>一个节点的所有 key 从小到大排序。两个 key1 和 key2 之间的所有 child 都在 key1 和 key2 之间。&lt;/li>
&lt;li>B-Tree 从 root 节点 grow(扩张) 和 shrink(收缩)。&lt;/li>
&lt;li>search、insert、delete 时间复杂度是O(log n)。n 是 key 的总数。&lt;/li>
&lt;/ol>
&lt;h3>t=3 为例来理解 B-tree&lt;span class="hx-absolute -hx-mt-20" id="t3-为例来理解-b-tree">&lt;/span>
&lt;a href="#t3-%e4%b8%ba%e4%be%8b%e6%9d%a5%e7%90%86%e8%a7%a3-b-tree" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>每一个节点(root 除外) 至少有 t - 1 = 2 个 key。&lt;/li>
&lt;li>每一个节点最多有 2t - 1 = 5 个 key。节点 key 数量 = 5，称为节点满了。
问题来了，节点 key 个数大于 5 了咋办？拆分。什么时候来拆分呢？在向下遍历节点时发现满了，立即进行拆分。&lt;/li>
&lt;/ol>
&lt;h4>B-Tree insert operation&lt;span class="hx-absolute -hx-mt-20" id="b-tree-insert-operation">&lt;/span>
&lt;a href="#b-tree-insert-operation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h5>拆分已满节点&lt;span class="hx-absolute -hx-mt-20" id="拆分已满节点">&lt;/span>
&lt;a href="#%e6%8b%86%e5%88%86%e5%b7%b2%e6%bb%a1%e8%8a%82%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/btree-full-root-split.svg" alt="btree-full-root-split" loading="lazy" /> #(btree-拆分已满节点)&lt;/p>
&lt;ol>
&lt;li>如上图，节点1 已经满了，对此时的 root 节点进行拆分。&lt;/li>
&lt;li>创建节点2，s 节点，作为新的 root 节点，同时设置 s.child[0] = root。&lt;/li>
&lt;li>创建节点2，z 节点，将原来 root 节点一半的 key，复制到 z 节点。&lt;/li>
&lt;li>将 z 节点设置为 s 节点的 child。s.child[1] = z。&lt;/li>
&lt;/ol>
&lt;h5>拆分已满节点(有子节点)&lt;span class="hx-absolute -hx-mt-20" id="拆分已满节点有子节点">&lt;/span>
&lt;a href="#%e6%8b%86%e5%88%86%e5%b7%b2%e6%bb%a1%e8%8a%82%e7%82%b9%e6%9c%89%e5%ad%90%e8%8a%82%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h5>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/btree-full-root-split2.svg" alt=" btree-full-root-split2" loading="lazy" /> #(btree-拆分已满节点2)&lt;/p>
&lt;p>B-Tree 是向上扩张的(grow)。可以看到所有的 key 都是在 leaf 节点插入的。节点的 key 值的数量一旦等于 2t - 1 = 5 时，就会对该节点进行拆分。所以这也是每一个节点(root 除外)至少有 t-1 = 2 个 key 的原因。&lt;/p>
&lt;h4>B-Tree delete operation&lt;span class="hx-absolute -hx-mt-20" id="b-tree-delete-operation">&lt;/span>
&lt;a href="#b-tree-delete-operation" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://www.cs.usfca.edu/~galles/visualization/BTree.html" target="_blank" rel="noopener">BTree-visualization&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/introduction-of-b-tree-2/" target="_blank" rel="noopener">BTree introduction&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/insert-operation-in-b-tree/" target="_blank" rel="noopener">BTree insertion&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/delete-operation-in-b-tree/" target="_blank" rel="noopener">BTree deletion&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>asm-how-computer-startup</title><link>https://cloudedseal.github.io/blog/asm-how-computer-startup/</link><pubDate>Mon, 08 Jun 2020 08:09:12 +0800</pubDate><guid>https://cloudedseal.github.io/blog/asm-how-computer-startup/</guid><description>
&lt;p>&lt;code>x86&lt;/code> 架构计算机是如何启动的？&lt;/p>
&lt;h2>16-bit Processors and Segmentation (1978)&lt;span class="hx-absolute -hx-mt-20" id="16-bit-processors-and-segmentation-1978">&lt;/span>
&lt;a href="#16-bit-processors-and-segmentation-1978" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;blockquote>
&lt;p>The IA-32 architecture family was preceded by &lt;code>16-bit processors&lt;/code>, the 8086 and 8088. The 8086 has &lt;code>16-bit registers&lt;/code> and a &lt;code>16-bit external data bus&lt;/code>, with &lt;code>20-bit addressing giving a 1-MByte address space&lt;/code>. The 8088 is similar to the 8086 except it has an 8-bit external data bus.
The 8086/8088 introduced &lt;code>segmentation&lt;/code> to the IA-32 architecture. With segmentation, a &lt;code>16-bit segment register&lt;/code> contains a pointer to &lt;code>a memory segment of up to 64 KBytes&lt;/code>. Using &lt;code>four&lt;/code> segment registers at a time, 8086/8088 processors are able to address up to 256 KBytes &lt;code>without&lt;/code> switching between segments. The 20-bit addresses that can be formed using a segment register and an additional 16-bit pointer provide a total address range of 1 MByte.&lt;/p>
&lt;/blockquote>
&lt;p>8086 是整个 intel 系列处理器的老祖宗。所有后续的一系列处理器都兼容 8086。唉，这就是路径依赖啊。这是一个 16-bit 的处理器。寄存器也是 16-bit 的。but 却能寻址 20-bit 的地址空间，也就是 1M 的内存。怎样在 16-bit 的处理器上实现呢？很简单，将 1M 的空间分成多个 64K 的 segment。那怎样用 16-bit 的寄存器表示 20-bit 的地址呢？也很简单，用 2 个 16-bit 的寄存器组合得来的(register1,register2)。那怎样组合的呢？&lt;code>address = register1 &amp;lt;&amp;lt; 4 + register2&lt;/code>。将 register1 &amp;laquo; 4 和 register2 用一个 20-bit 的加法器就能得到内存地址。这种方式就是所谓的 &lt;code>real address mode&lt;/code>。也即是拿到的是真正的内存地址。x86 架构的计算机启动时会先进入 real address mode。&lt;/p>
&lt;h2>计算机启动前置知识&lt;span class="hx-absolute -hx-mt-20" id="计算机启动前置知识">&lt;/span>
&lt;a href="#%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%90%af%e5%8a%a8%e5%89%8d%e7%bd%ae%e7%9f%a5%e8%af%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>CPU 工作方式是: 从&lt;code>内存&lt;/code>中取指、执行。&lt;/li>
&lt;li>内存是存储数据的地方，给出一个内存地址，可以得到该处的数据。&lt;/li>
&lt;li>CPU 从内存哪里取指令，由 &lt;code>instruction pointer&lt;/code> 这个寄存器的值决定。这个值不断 +1，或者跳转(jump) 到某处。real address mode 下由 CS:IP 组合决定。&lt;/li>
&lt;/ol>
&lt;h2>BIOS&lt;span class="hx-absolute -hx-mt-20" id="bios">&lt;/span>
&lt;a href="#bios" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>BIOS 是啥&lt;span class="hx-absolute -hx-mt-20" id="bios-是啥">&lt;/span>
&lt;a href="#bios-%e6%98%af%e5%95%a5" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>BIOS&lt;/code> 是啥呢？一个软件而已。不像我们平时在 PC 上使用如 &lt;code>QQ&lt;/code> 等软件是安装在硬盘上的。BIOS 安装在 ROM 中。这个软件干啥的呢？帮助计算机启动，开机时检测整个机器的硬件。计算机启动需要运行软件，软件运行需要计算机先启动。咳咳，成了先有鸡还是先有蛋了，这怎么行？所以需要 BIOS 这个在硬件上的软件来帮助，破除这种依赖。&lt;/p>
&lt;h3>BIOS 大小&lt;span class="hx-absolute -hx-mt-20" id="bios-大小">&lt;/span>
&lt;a href="#bios-%e5%a4%a7%e5%b0%8f" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>通过 &lt;code>dmidecode&lt;/code> 这个命令来查看。也就是读取 BIOS 的信息。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">root@aliyun:~# dmidecode -t bios -q &lt;span class="c1"># 方法一&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BIOS Information
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Vendor: SeaBIOS
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: 8c24b4c
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Release Date: 04/01/2014
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Address: 0xE8000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Runtime Size: &lt;span class="m">96&lt;/span> kB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ROM Size: &lt;span class="m">64&lt;/span> kB --- ROM Size，在此可以看到，BIOS 大小为 64K。
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Characteristics:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BIOS characteristics not supported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Targeted content distribution is supported
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> BIOS Revision: 0.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root@aliyun:~# &lt;span class="nb">cd&lt;/span> /sys/class/dmi/id/ &lt;span class="c1"># 方法二&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root@aliyun:id# ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bios_date chassis_serial modalias product_serial sys_vendor
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bios_vendor chassis_type power product_uuid uevent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bios_version chassis_vendor product_family product_version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chassis_asset_tag chassis_version product_name subsystem&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>x86 架构计算机启动流程&lt;span class="hx-absolute -hx-mt-20" id="x86-架构计算机启动流程">&lt;/span>
&lt;a href="#x86-%e6%9e%b6%e6%9e%84%e8%ae%a1%e7%ae%97%e6%9c%ba%e5%90%af%e5%8a%a8%e6%b5%81%e7%a8%8b" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/real-address-mode-how-computer-startup.svg" alt="real address mode 1M 内存布局" loading="lazy" /> #(real address mode 1M 内存布局)&lt;/p>
&lt;ol>
&lt;li>
&lt;p>如上图所示，当按下 &lt;code>power on&lt;/code> 之后，此时的 CPU 处于 real address mode。由硬件负责将 &lt;code>BIOS 64K&lt;/code> 的内容加载到 &lt;code>0xF0000 到 0xFFFFF&lt;/code>(64K 内存)。并将 &lt;code>CS(code segment) 置为 0xF000&lt;/code>，&lt;code>IP(instruction pointer) 置为 0xFFF0&lt;/code>。组合起来的内存地址 &lt;code>PC&lt;/code> 就是 0xFFFF0。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>此时 CPU 从 &lt;code>PC = 0xFFFF0&lt;/code> 处开始取指、执行。那么从 &lt;code>0xFFFF0 到 0xFFFFF&lt;/code> 只有 16Bytes。空间太小了，能放啥呢？但是可以跳到其他地方去执行啊。不错，这里存放的有一条指令是 &lt;code>jmp far f000:e05b&lt;/code>, 组合起来就是 &lt;code>0xfe05b&lt;/code>。注意这个地址可是在 &lt;code>0xF0000 到 0xFFFFF&lt;/code> 范围之内，也就是这条指令跳转到 &lt;code>BIOS 内部的代码&lt;/code>去执行。从 0xFE05B 到 0xFFFF0 将近 8K 内存，代码不少。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>此时 CPU 从 &lt;code>PC = 0xfe05b&lt;/code> 开始取值、执行。具体干啥呢？就是执行所谓的开机自检。检查计算机硬件。同时去找启动扇区，那什么才是启动扇区呢？若 0 盘 0 道 1 扇区最后两个字节分别是 0x55,0xaa，那就是启动区。很像 java class 文件中的魔数，就是标记一下。同时将找到的启动扇区(512Bytes) 复制到内存 &lt;code>0x7C00 到 0x7DFF&lt;/code>(512Bytes) 处。最后会将 &lt;code>CS 置为 0x0000， IP 置为 0x7C00&lt;/code>，组合起来就是 &lt;code>0x7C00&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>此时 CPU 从 &lt;code>PC = 0x7C00&lt;/code> 开始取值、执行。具体干啥呢？这就是开发人员可以决定的了。在启动扇区上可以是加载 OS Kernel 的代码，硬盘分区，boot loader 等。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;p>1.&lt;a href="http://dewkumar.blogspot.com/2012/01/what-is-org-origin-directive-in.html" target="_blank" rel="noopener">x86-ORG&lt;/a>
2. &lt;a href="https://superuser.com/questions/806226/how-to-see-rom-size" target="_blank" rel="noopener">how-to-see-rom-size&lt;/a>
3. &lt;a href="http://smilejay.com/2013/02/bios-info-dmidecode/" target="_blank" rel="noopener">bios-info-dmidecode&lt;/a>
4. &lt;a href="https://en.wikipedia.org/wiki/System_Management_BIOS" target="_blank" rel="noopener">system-management-bios&lt;/a>
5. &lt;a href="http://www.ruanyifeng.com/blog/2013/02/booting.html" target="_blank" rel="noopener">计算机是如何启动的？&lt;/a>
6. &lt;a href="https://en.wikipedia.org/wiki/Master_boot_record" target="_blank" rel="noopener">多种 MBR 组织方式&lt;/a>
7. &lt;a href="https://mp.weixin.qq.com/s/g6m_r28bvyyWIu1CAzxLdg" target="_blank" rel="noopener">计算机是怎样启动的？&lt;/a>&lt;/p></description></item><item><title>data-structure-heap</title><link>https://cloudedseal.github.io/blog/data-structure-heap/</link><pubDate>Mon, 18 May 2020 15:24:05 +0800</pubDate><guid>https://cloudedseal.github.io/blog/data-structure-heap/</guid><description>
&lt;h3>线性 or 非线性&lt;span class="hx-absolute -hx-mt-20" id="线性-or-非线性">&lt;/span>
&lt;a href="#%e7%ba%bf%e6%80%a7-or-%e9%9d%9e%e7%ba%bf%e6%80%a7" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>数据结构可以分为两大类：线性结构和非线性结构。线性结构典型的就是数组和链表，非线性典型就是树了。复杂的数据结构基本上都是两者的组合。&lt;/p>
&lt;h3>binary heap&lt;span class="hx-absolute -hx-mt-20" id="binary-heap">&lt;/span>
&lt;a href="#binary-heap" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>二叉堆本质上就是个完全二叉树。但是却用数组来表示。为啥呢？因为数组的下标之间有关系，可以表示二叉树节点之间的层级关系。因为是 &lt;code>完全二叉树&lt;/code>，这就保证了一维展开就是一个下标连续的数组，数组通过下标操作起来相当简洁。堆顶(root)也就是数组第一个元素 &lt;code>array[0]&lt;/code>，是最小元素，就是小顶堆。反之，大顶堆。&lt;/p>
&lt;h3>堆的自我调整&lt;span class="hx-absolute -hx-mt-20" id="堆的自我调整">&lt;/span>
&lt;a href="#%e5%a0%86%e7%9a%84%e8%87%aa%e6%88%91%e8%b0%83%e6%95%b4" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h4>插入节点&lt;span class="hx-absolute -hx-mt-20" id="插入节点">&lt;/span>
&lt;a href="#%e6%8f%92%e5%85%a5%e8%8a%82%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>新节点放在数组最后，然后对该节点进行上浮操作。&lt;/p>
&lt;h4>删除节点&lt;span class="hx-absolute -hx-mt-20" id="删除节点">&lt;/span>
&lt;a href="#%e5%88%a0%e9%99%a4%e8%8a%82%e7%82%b9" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>删除堆顶元素，最后一个节点放在堆顶，对此时的堆顶进行下沉操作。&lt;/p>
&lt;h4>构建二叉堆&lt;span class="hx-absolute -hx-mt-20" id="构建二叉堆">&lt;/span>
&lt;a href="#%e6%9e%84%e5%bb%ba%e4%ba%8c%e5%8f%89%e5%a0%86" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>所有的非叶子节点进行上浮操作。&lt;/p>
&lt;h4>二叉堆自我调整图解&lt;span class="hx-absolute -hx-mt-20" id="二叉堆自我调整图解">&lt;/span>
&lt;a href="#%e4%ba%8c%e5%8f%89%e5%a0%86%e8%87%aa%e6%88%91%e8%b0%83%e6%95%b4%e5%9b%be%e8%a7%a3" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/binary-heap.svg" alt="binary-heap" loading="lazy" /> #(二叉堆的自我调整)&lt;/p>
&lt;h4>代码实现&lt;span class="hx-absolute -hx-mt-20" id="代码实现">&lt;/span>
&lt;a href="#%e4%bb%a3%e7%a0%81%e5%ae%9e%e7%8e%b0" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.Arrays&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">HeapOperator&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 自下而上，上浮&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">upAdjust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 最后一个节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 最后一个非叶子节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 自上而下，下沉&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">downAdjust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 有右节点，且右节点小于左节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">buildHeap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">downAdjust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">heapSort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 先构建一个小顶堆，得到一个最小值。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// i 为 parentIndex，左右子节点分别是 2 * i + 1, 2 * i + 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">downAdjust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 堆顶和目前堆的最后一个节点交换，重新构建堆。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">downAdjust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">9&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">upAdjust&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">9&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">buildHeap&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array2&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">9&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">heapSort&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array3&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">array3&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>优先级队列&lt;span class="hx-absolute -hx-mt-20" id="优先级队列">&lt;/span>
&lt;a href="#%e4%bc%98%e5%85%88%e7%ba%a7%e9%98%9f%e5%88%97" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>不要被&lt;code>队列&lt;/code>二字带偏，优先级队列的重点在优先级上。比如线程有优先级，优先级大的先执行。运算符也是有优先级的。怎样来实现这种优先级呢？用 &lt;code>堆&lt;/code> 就可以。这里使用小顶堆，堆顶就是最小值，这里带入优先级的概念，值越小优先级越大。那么，从堆顶拿出来的节点就是优先级最大的，剩余的节点重新构造成小顶堆，保证堆顶是最小值。&lt;/p>
&lt;h4>代码实现&lt;span class="hx-absolute -hx-mt-20" id="代码实现-1">&lt;/span>
&lt;a href="#%e4%bb%a3%e7%a0%81%e5%ae%9e%e7%8e%b0-1" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;code>大顶堆&lt;/code>实现优先队列。每次只取最大值，取出一个堆顶，剩余节点重新构建大顶堆。&lt;/p>
&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.util.Arrays&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">PriorityQueue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">PriorityQueue&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">array&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">32&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">enQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">length&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">resize&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="o">++]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">upAdjust&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">deQueue&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">heapTop&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[--&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">downAdjust&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">heapTop&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">resize&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">doubleSize&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">array&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Arrays&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">copyOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">array&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">doubleSize&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 自下而上&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">upAdjust&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 拿到最后一个节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 最后一个非叶子节点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 自上而下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">downAdjust&lt;/span>&lt;span class="p">(){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 有右节点，且右节点大于左节点。拿到两个子节点的最大值。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;amp;&amp;amp;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">childIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">parentIndex&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">temp&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">){&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">PriorityQueue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PriorityQueue&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">enQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">enQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">enQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">50&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">enQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">300&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">enQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">130&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">enQueue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">430&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">deQueue&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">deQueue&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">priorityQueue&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">deQueue&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h3>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;ol>
&lt;li>&lt;a href="https://visualgo.net/zh/heap" target="_blank" rel="noopener">visual heap&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/cq2EhVtOTzTVpNpLDXfeJg" target="_blank" rel="noopener">binary heap&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/8Bid1naBLtEjPoP-R4HkBg" target="_blank" rel="noopener">heap sort&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://mp.weixin.qq.com/s/4hXBw7sZ-NKs_asOQxS7gA" target="_blank" rel="noopener">priority queue&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.cecs.pdx.edu/~sheard/course/Cs163/Doc/FullvsComplete.html" target="_blank" rel="noopener">full binary tree vs complete binary tree&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://web.cecs.pdx.edu/~sheard/course/Cs163/Doc/HeapReview.html" target="_blank" rel="noopener">heap review&lt;/a>&lt;/li>
&lt;/ol></description></item><item><title>os-banker's-algorithm</title><link>https://cloudedseal.github.io/blog/os-banker-s-algorithm/</link><pubDate>Wed, 13 May 2020 15:31:05 +0800</pubDate><guid>https://cloudedseal.github.io/blog/os-banker-s-algorithm/</guid><description>
&lt;h2>Banker&amp;rsquo;s Algorithm&lt;span class="hx-absolute -hx-mt-20" id="bankers-algorithm">&lt;/span>
&lt;a href="#bankers-algorithm" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;h3>银行家算法是什么&lt;span class="hx-absolute -hx-mt-20" id="银行家算法是什么">&lt;/span>
&lt;a href="#%e9%93%b6%e8%a1%8c%e5%ae%b6%e7%ae%97%e6%b3%95%e6%98%af%e4%bb%80%e4%b9%88" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>银行家&lt;/code>主要就是通过放贷来赚钱的。那最重要的问题是啥？当然是把钱借给还得起的人咯。试想，银行把钱都借给了还不起的人，那银行就完蛋了。假设有一批人（多个进程）来借钱（将要申请资源），但是银行剩下的钱满足不了任何人，那就直接拒绝借贷。当然了，有一部分已经借出的钱回收之后（回收已经分配的资源），又可以满足一批人中某些人的借贷需求。依次类推，银行可以判定能不能按照某个顺序来给这批人放贷。类似的思路延伸到计算机世界，同理。操作系统给多个进程分配资源，&lt;code>能不能找到一个顺序给这些进程分配资源，并逐渐回收资源？&lt;/code>从而满足多个进程的资源需求。采用银行家放贷和收贷的思路（这里排除利息，放多少贷，收多少钱。呵呵，哪有此种好事？）来分配和回收系统资源就是所谓的&lt;code>银行家算法&lt;/code>。&lt;/p>
&lt;h3>银行家算法解决什么问题&lt;span class="hx-absolute -hx-mt-20" id="银行家算法解决什么问题">&lt;/span>
&lt;a href="#%e9%93%b6%e8%a1%8c%e5%ae%b6%e7%ae%97%e6%b3%95%e8%a7%a3%e5%86%b3%e4%bb%80%e4%b9%88%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>&lt;code>resource allocation and deadlock avoidance algorithm&lt;/code>。银行家算法用来进行资源分配和避免死锁。&lt;/p>
&lt;h3>银行家算法怎样解决问题&lt;span class="hx-absolute -hx-mt-20" id="银行家算法怎样解决问题">&lt;/span>
&lt;a href="#%e9%93%b6%e8%a1%8c%e5%ae%b6%e7%ae%97%e6%b3%95%e6%80%8e%e6%a0%b7%e8%a7%a3%e5%86%b3%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;p>P0、P1、P2、P3、P4 5个进程，视为需要钱的 5 个人。
A、B、C 三种系统资源。分别视为是银行三种贵金属：金块、银块、铜块。&lt;/p>
&lt;h4>allocation table 已放贷表&lt;span class="hx-absolute -hx-mt-20" id="allocation-table-已放贷表">&lt;/span>
&lt;a href="#allocation-table-%e5%b7%b2%e6%94%be%e8%b4%b7%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>每个人已经借的金银铜个数列表&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">&lt;/th>
&lt;th style="text-align: center">A&lt;/th>
&lt;th style="text-align: center">B&lt;/th>
&lt;th style="text-align: center">C&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">P0&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">1&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P1&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P2&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P3&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;td style="text-align: center">1&lt;/td>
&lt;td style="text-align: center">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P4&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>max table 最大借贷表&lt;span class="hx-absolute -hx-mt-20" id="max-table-最大借贷表">&lt;/span>
&lt;a href="#max-table-%e6%9c%80%e5%a4%a7%e5%80%9f%e8%b4%b7%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>每个人需要金银铜最大个数列表&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">&lt;/th>
&lt;th style="text-align: center">A&lt;/th>
&lt;th style="text-align: center">B&lt;/th>
&lt;th style="text-align: center">C&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">P0&lt;/td>
&lt;td style="text-align: center">7&lt;/td>
&lt;td style="text-align: center">5&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P1&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P2&lt;/td>
&lt;td style="text-align: center">9&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P3&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P4&lt;/td>
&lt;td style="text-align: center">4&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>need table 还需放贷表&lt;span class="hx-absolute -hx-mt-20" id="need-table-还需放贷表">&lt;/span>
&lt;a href="#need-table-%e8%bf%98%e9%9c%80%e6%94%be%e8%b4%b7%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>每个人还需要的金银铜个数列表。由 max table - allocation table 得到。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">&lt;/th>
&lt;th style="text-align: center">A&lt;/th>
&lt;th style="text-align: center">B&lt;/th>
&lt;th style="text-align: center">C&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">P0&lt;/td>
&lt;td style="text-align: center">7&lt;/td>
&lt;td style="text-align: center">4&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P1&lt;/td>
&lt;td style="text-align: center">1&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P2&lt;/td>
&lt;td style="text-align: center">6&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P3&lt;/td>
&lt;td style="text-align: center">0&lt;/td>
&lt;td style="text-align: center">1&lt;/td>
&lt;td style="text-align: center">1&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align: center">P4&lt;/td>
&lt;td style="text-align: center">4&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;td style="text-align: center">1&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>available table 剩余资源表&lt;span class="hx-absolute -hx-mt-20" id="available-table-剩余资源表">&lt;/span>
&lt;a href="#available-table-%e5%89%a9%e4%bd%99%e8%b5%84%e6%ba%90%e8%a1%a8" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>银行还剩下的金银铜个数。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align: center">A&lt;/th>
&lt;th style="text-align: center">B&lt;/th>
&lt;th style="text-align: center">C&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align: center">3&lt;/td>
&lt;td style="text-align: center">3&lt;/td>
&lt;td style="text-align: center">2&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4>剩余系统资源分配顺序推演&lt;span class="hx-absolute -hx-mt-20" id="剩余系统资源分配顺序推演">&lt;/span>
&lt;a href="#%e5%89%a9%e4%bd%99%e7%b3%bb%e7%bb%9f%e8%b5%84%e6%ba%90%e5%88%86%e9%85%8d%e9%a1%ba%e5%ba%8f%e6%8e%a8%e6%bc%94" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;ol>
&lt;li>拿着 available table （剩余资源表），到 need table（还需放贷表） 比对。若 available table 的 A B C 满足 need table 的某一行（也就是 available table 每一列都大于等于 need table 的某一行的每一列）。说明可以分配给这个进程，标记这一行。同时回收这一行对应的 allocation table 中已经分配的 A B C。更新 available table 的 A B C。以此类推，继续比对 need table 中其他未标记的行。若最后 need table 所有行都有标记，说明存在一个给 P0、P1、P2、P3、P4 进程分配资源的顺序。&lt;/li>
&lt;li>拿着 available table 剩余资源表，不满足 need table 中任何一行。说明不存在一个给 P0、P1、P2、P3、P4 进程分配资源的顺序。系统有可能进入死锁。&lt;/li>
&lt;/ol>
&lt;h4>银行家算法图解分析&lt;span class="hx-absolute -hx-mt-20" id="银行家算法图解分析">&lt;/span>
&lt;a href="#%e9%93%b6%e8%a1%8c%e5%ae%b6%e7%ae%97%e6%b3%95%e5%9b%be%e8%a7%a3%e5%88%86%e6%9e%90" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h4>&lt;p>&lt;img src="https://github.com/stardustman/pictures/raw/main/img/banks-algorithm.svg" alt="银行家算法" loading="lazy" />
存在的一个序列 P1 -&amp;gt; P3 -&amp;gt; P4 -&amp;gt; P0 -&amp;gt; P2&lt;/p>
&lt;h3>有没有其他方法解决此问题&lt;span class="hx-absolute -hx-mt-20" id="有没有其他方法解决此问题">&lt;/span>
&lt;a href="#%e6%9c%89%e6%b2%a1%e6%9c%89%e5%85%b6%e4%bb%96%e6%96%b9%e6%b3%95%e8%a7%a3%e5%86%b3%e6%ad%a4%e9%97%ae%e9%a2%98" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;h3>Banker&amp;rsquo;s Algorithm implemention&lt;span class="hx-absolute -hx-mt-20" id="bankers-algorithm-implemention">&lt;/span>
&lt;a href="#bankers-algorithm-implemention" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h3>&lt;div class="hextra-code-block hx-relative hx-mt-6 first:hx-mt-0 hx-group/code">
&lt;div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Banker&amp;#39;s Algorithm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt; &lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// P0, P1, P2, P3, P4 are the Process names here
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">n&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Number of processes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">m&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// Number of resources
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P0 // Allocation Matrix
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">};&lt;/span> &lt;span class="c1">// P4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P0 // MAX Matrix
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">},&lt;/span> &lt;span class="c1">// P3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="p">};&lt;/span> &lt;span class="c1">// P4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">avail&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span> &lt;span class="p">};&lt;/span> &lt;span class="c1">// Available Resources
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">finished&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ans&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">finished&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">k&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">m&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 计算 need matrix
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">need&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">max&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">k&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">k&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">k&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">finished&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">j&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">j&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">need&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">avail&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">j&lt;/span>&lt;span class="p">]){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">flag&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ans&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">y&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">m&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">avail&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="n">alloc&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">finished&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Following is the SAFE Sequence&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34; P%d -&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ans&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34; P%d&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ans&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">n&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/div>&lt;div class="hextra-code-copy-btn-container hx-opacity-0 hx-transition group-hover/code:hx-opacity-100 hx-flex hx-gap-1 hx-absolute hx-m-[11px] hx-right-0 hx-top-0">
&lt;button
class="hextra-code-copy-btn hx-group/copybtn hx-transition-all active:hx-opacity-50 hx-bg-primary-700/5 hx-border hx-border-black/5 hx-text-gray-600 hover:hx-text-gray-900 hx-rounded-md hx-p-1.5 dark:hx-bg-primary-300/10 dark:hx-border-white/10 dark:hx-text-gray-400 dark:hover:hx-text-gray-50"
title="Copy code"
>
&lt;div class="copy-icon group-[.copied]/copybtn:hx-hidden hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;div class="success-icon hx-hidden group-[.copied]/copybtn:hx-block hx-pointer-events-none hx-h-4 hx-w-4">&lt;/div>
&lt;/button>
&lt;/div>
&lt;/div>
&lt;h2>References&lt;span class="hx-absolute -hx-mt-20" id="references">&lt;/span>
&lt;a href="#references" class="subheading-anchor" aria-label="Permalink for this section">&lt;/a>&lt;/h2>&lt;ol>
&lt;li>&lt;a href="https://zh.wikipedia.org/wiki/%E9%93%B6%E8%A1%8C%E5%AE%B6%E7%AE%97%E6%B3%95" target="_blank" rel="noopener">银行家算法-wiki&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.geeksforgeeks.org/bankers-algorithm-in-operating-system-2/" target="_blank" rel="noopener">bankers-algorithm&lt;/a>&lt;/li>
&lt;/ol></description></item></channel></rss>